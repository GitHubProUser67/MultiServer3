#! /usr/bin/env python2
# coding=utf-8
# Hey, Emacs! This is -*-python-*-.
#
# Copyright (C) 2003-2014 original author of miniircd Joel Rosdahl
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307
# USA
#
# original author of miniircd Joel Rosdahl <joel@rosdahl.net>

VERSION = "0.4"

import os
import re
import select
import socket
import string
import sys
import tempfile
import time
import errno
from datetime import datetime
from optparse import OptionParser

from ctypes import *

#gamename-gamekey
gn_gk = {'1001MinigolfChalle': '',
        '12irondsam': 'RxXhtd',
        '12ironds': 'RxXhtd',
        'anno1602ad': 'sAJtHo',
        '1701AD': '',
        '1701adg': '',
        '18WofSExtremeTruck': '',
        '25tolife': '',
        '2kboxingds': 'JiBAt0',
        '3celsiuswii': 'xR1sEX',
        'g_3daction': '',
        '3dpicrossds': 'uhXkFl',
        '3dpicrosseuds': 'UAX3WC',
        '3dpicrossUSds': '2IOxzX',
        '3DUltraMinigolf': 'KzYRQz',
        '4elements': '',
        '4story': '',
        '4x4evo': 'tFbq8m',
        '4x4retail': 'MIq0wX',
        '4x4evodemo': 'p4jAGg',
        '50centjpnps3am': 'ZmGGQs',
        '50centsandps3am': 'ORydHB',
        '50centjpnps3d': 'ZmGGQs',
        '50centjpnps3': 'ZmGGQs',
        '50centsandps3': 'ORydHB',
        '50ctsndlvps3am': 'n5qRt7',
        '50ctsndlvps3': 'n5qRt7',
        '7sins': '',
        '7WondersII': '',
        '7WondersoftheAncie': '',
        '8ballstarsds': 'b6WiRo',
        '911fresp': '',
        '9thCompanyRootsofT': '',
        'farewelldragons': '',
        'AGypsysTaleTheTowe': '',
        'kingforkeflings': '',
        'kingforkeflingsDLC': '',
        'AVampyreStory': '',
        'ace': 'L2dC9x',
        'aaaaa': '',
        'abominatio': 'qik37G',
        'ac130': '',
        'AccelerationofSugu': '',
        'AceOnline': '',
        'acesotgal': '',
        'actungpanzerk1943': '',
        'AchtungPanzerKhar1': '',
        'actofwar': 'LaR21n',
        'actofwaram': 'LaR21n',
        'actofward': 'LaR21n',
        'actofwardam': 'LaR21n',
        'actofwarht': 'LaR21n',
        'actofwarhtam': 'LaR21n',
        'actofwarhtd': 'LaR21n',
        'actofwarhtdam': 'LaR21n',
        'wg_action': '',
        'actval1': 'j9Ew2L',
        'AdamsVenture2': '',
        'AdamsVentureEp1': '',
        'afllive05ps2': 'j72Lm2',
        'afrikakorps': 'tbhWCq',
        'agrome': '8mEKiP',
        'plunderpc': 'NmLqNN',
        'plunderps3': 'RbMD9p',
        'ageofbooty': '',
        'ageofbootybeta': '',
        'ageofconan': '',
        'ageofconanb': 'QZQLGt',
        'aoe': 'VzkADe',
        'aoe3': '',
        'aoe3wcd': 'ZDdpQV',
        'aoe2': 'iZhjKi',
        'aoe2demo': 'alVRIq',
        'aoe2tc': 'p4jAGg',
        'aoe2tcdemo': 'wUhCSC',
        'aoemythds': 'a9EK9F',
        'aoex': 'JafcLp',
        'ageofsail2': 'Kb3ab5',
        'aowfull': 'alVRIq',
        'aow2d': 'S6aiiP',
        'aow2': 'csFcq8',
        'aowdemo': 'alVRIq',
        'aow3': 'W88dvR',
        'aowsm': 'W78cvR',
        'agentps3am': '8me2Ja',
        'agentps3': '8me2Ja',
        'AGON': 'ytpbYm',
        'AgriculturalSimula': '',
        'AIWar': '',
        'aion': '',
        'Aion_AoB': '',
        'airwingsds': '5TTmMf',
        'AirportControlSimu': '',
        'Airstrike3D': '',
        'AirStrikeII': '',
        'AirStrikeIIGulfThu': '',
        'draculagolds': '1VyHxN',
        'alemmoldm': '',
        'msecurity': 'j9Ew2L',
        'AlchemiaExtendedVe': '',
        'alganon': '',
        'AliceMadnessReturn': '',
        's_AlienBreed2Assau': '',
        'alienbreed3': '',
        's_AlienBreedImpact': '',
        'aliencrashwii': 'gRfsiO',
        'aliencross': 'IOrDfP',
        'AlienHallway': '',
        'AlienPigFarm3000V1': '',
        'alienshooter': '',
        'AlienShooter2Reloa': '',
        'avp': 'WtGzHr',
        'avponliveam': 'QZlhzB',
        'avponlive': 'QZlhzB',
        'avp2demo': 'Df3M6Z',
        'avpnotgold': 'DLiQwZ',
        's_AliensVSPredator': '',
        'avp2': 'Df3M6Z',
        'avp2lv': 'Df3M6Z',
        'avp2ph': 'P4fR9w',
        'AliensCMPCam': '5T4ATR',
        'AliensCMPS3am': '5T4ATR',
        'AliensCMPCd': '5T4ATR',
        'AliensCMPS3d': '5T4ATR',
        'AliensCMPC': '5T4ATR',
        'AliensCMPS3': '5T4ATR',
        'AlienShooter2Consc': '',
        'AllAspectWarfare': '',
        'asbball2005ps2': 'Y3pG1m',
        'allodsobeta': '',
        'aloneitd': '',
        'alphacent': 'qbb4Ge',
        'AlphaKimoriEpisode': '',
        'alphaprime': '',
        'AlphaProtocol': '',
        'altitude': 'DZzvoR',
        'AmazingAdventuresT': '',
        'americax': 'CSCQMZ',
        'aarmy3': 'zwAbg5',
        'aarmy3beta': '',
        'AmMcGeeGrimm09': '',
        'AmMcGeeGrimm10': '',
        'AmMcGeeGrimm11': '',
        'AmMcGeeGrimm12': '',
        'AmMcGeeGrimm13': '',
        'ammcgeesgrimmep14': '',
        'americanmcgeesgrim': '',
        'AmMcGeeGrimm02': 'wOTjPr',
        'AmMcGeeGrimm03': 'SWUWsc',
        'AmMcGeeGrimm04': 'BDjKYg',
        'AmMcGeeGrimm05': '',
        'AmMcGeeGrimm06': '',
        'AmMcGeeGrimm07': '',
        'AmMcGeeGrimm08': '',
        'armygame': 'g3sR2b',
        'armygamemac': 'g3sR2b',
        'amfbowlingds': 'c56nI8',
        'Amnesia': '',
        'anarchyonline': 'ThLopr',
        'AncientQofSaq': 'UIctfg',
        'ardinokingds': '6wO62C',
        'dinokingEUds': '0E0awE',
        'spartaaw': '09mczM',
        'ancientsofooga': '',
        'andyetitmoves': '',
        'and1sballps2': 'J3c8Dm',
        'and1sballps2am': 'J3c8Dm',
        'AngleOfAttack': '',
        'acrossingds': 'h2P9x6',
        'acrossingdsam': 'h2P9x6',
        'acrossingwii': 'Z7Fm9K',
        'ankhbattleofthegod': '',
        'ankhheartofosiris': '',
        'AnkhReversetheCurs': '',
        'ankhthelosttreasur': '',
        'anno1503b': 'mEcJMZ',
        'anno1503': '9mDKiP',
        'anno1701': 'Xa6zS3',
        'anno1701d': 'taEf7n',
        'AnomalyWarzoneEart': '',
        'APBeu': '',
        'APB': '',
        'apocalyptica': 'T3d8x7',
        'apocalypticadi': 'T3d8x7',
        'appletest': 'TZHVox',
        'appletestam': 'TZHVox',
        'appletestd': 'TZHVox',
        'aquanox': 'U3pf8x',
        'aquaparktycoon': '',
        'AquaPets101Dolphin': '',
        'AquaPets101OtterPe': '',
        'AquaPets101Penguin': '',
        'AquaPets101SealPet': '',
        'AquaPets101SharkPe': '',
        'aquaria': '',
        'aquitania': '',
        'arc': 'M9tZe4',
        'ArcaniAGothic4': '',
        'archlord': 'eLiRAC',
        'Archon': '',
        'ArcticStudPokerRun': '',
        'Area51': '',
        'area51pc': 'mW73mq',
        'area51pcb': 'mW73mq',
        'area51ps2': 'eR48fP',
        'arkwarriors': 'sTPqLc',
        'arkwarriorsam': 'sTPqLc',
        'arkanoidds': 'QxU6hI',
        'arkaUSEUds': 'kORtxH',
        'ArmA2OA': '',
        'arma2oapcam': 'sGKWik',
        'arma2oapcd': 'sGKWik',
        'arma2oapc': 'sGKWik',
        'ArmA2OA_PMC': '',
        'armedassd': 'peprUy',
        'arma2': '',
        'arma2pcam': 'zbMmN3',
        'arma2pcd': 'zbMmN3',
        'arma2pc': 'zbMmN3',
        'armaas': 'fgDmOT',
        'armedass': 'peprUy',
        'Armada2526': '',
        'Armada2526Supernov': '',
        'armedndangerous': '',
        'ArmedSeven': '',
        'exigo': 'mPBHcI',
        'exigoam': 'mPBHcI',
        'exigoram': 'mPBHcI',
        'exigob': 'mPBHcI',
        'exigobam': 'mPBHcI',
        'exigor': 'mPBHcI',
        'ArmoredFist3': '',
        'armymen': 'V5Hm41',
        'amairtac': '8dvSTO',
        'armymen2': 'YBLJvU',
        'armymenrts': 'Rp4jGh',
        'armymenspc': 'r1wXEX',
        'amworldwar': 'nLfZDY',
        'AroundtheWorldin80': '',
        'arsenalofdemocracy': '',
        'ArxFatalis': '',
        'ascensionpcam': '1aT6fS',
        'ascensionpcd': '1aT6fS',
        'ascensionpc': '1aT6fS',
        'AscensionThroneVal': '',
        'ashcalltod': '',
        'asobids': '1L77RN',
        'Asonpartywii': 'g4hp4x',
        'asscreed': '',
        'assasinscreed2': '',
        'AssassinsCreedBrot': '',
        'assaultheroes': 'WpA5Tx',
        'AssaultHeroesD2': 'GZUXrC',
        'assaultheroesam': 'WpA5Tx',
        'AssaultHeroesD2D': 'GZUXrC',
        '_assets': '',
        'assimilation': 'BOFdk1',
        'assultwii': '6AStwk',
        'AstroAvenger': '',
        'astroavengerII': '',
        'AtariAH1': '',
        'AtariAH1Asteroids': '',
        'AtariAH1Centipede': '',
        'AtariAH1MissileC': '',
        'AtariAH1Pong': '',
        'AtariAH1SuperB': '',
        'AtariAH1Tempest': '',
        'atari80games': '',
        'atlantica': 'LfZDXB',
        'AtlanticaOnline': '',
        'atlantis': 'W49nx4',
        'AtlantisQuest': '',
        'atlantispre': 'W49nx4',
        'atlas_samples': 'Zc0eM6',
        'AtomZombieSmasher': '',
        'atomiccityadventur': '',
        'aopharbor': '',
        'AttackOnPearlHarbo': '',
        'austerlitz': 'hCSBQM',
        'AvadonTheBlackFort': '',
        'diplomacy': '2p7zgs',
        'avatar': '',
        'avatardemo': '',
        'Avencast': '',
        'AveyondEansQuest': '',
        'AveyondGatesofNigh': '',
        'AveyondLordofTwili': '',
        'AveyondRhensQuest': '',
        'AveyondTheDarkthro': '',
        'AveyondTheLostOrb': '',
        'axis': 'nYBLJv',
        'axisallies': 'JwWh9S',
        'axallirnb': 'GexS6a',
        'aarts': 'tR3b8h',
        'aartsd': 'tR3b8h',
        'azkend': '',
        'aztaka': '',
        'BackToTheFutureEp2': '',
        'BackToTheFutureEp1': '',
        'BacktotheFutureEp5': '',
        'BadPlanet': '',
        'badrats': '',
        'bgate': '2ozFrM',
        'bgate2': 'U9b3an',
        'bg2bhaal': '532HaZ',
        'bgatetales': 'GjuMcs',
        'baldursg': '3MHCZ8',
        'BananaBugs': '',
        'banburadxds': '04cR2B',
        'bandits': 'H2k9bD',
        'banditsd': 'H2k9bD',
        'bang': 'zgsCV2',
        'bangdemo': 'Hl31zd',
        'BaronWittard': '',
        'bmogul07': '',
        'BMogul2008': '',
        'baseballmogul2010': '',
        'batarkasy': '',
        'batmanaagotyd2d': '',
        'batmanaa2ps3am': '3kgng6',
        'batmanaa2ps3': '3kgng6',
        'batwars2wii': 'XvB2pu',
        'bboarderswii': 'Z5pkm2',
        'bc3k': '5LnQaz',
        'battlemages': 'ZMWyOO',
        'BattleMagesSoDD2D': '',
        'battlerealms': 'hU7wE3',
        'battlerealmsbBA': 'hU7wE3',
        'bspiritsdsam': 'rFSr5s',
        'bspiritsds': 'rFSr5s',
        'BattleLA': '',
        'bcm': 'tHg2t7',
        'bfield1942mac': 'HpWx9z',
        'bfield1942d': 'gF4i8U',
        'bfield1942rtrm': 'HpWx9z',
        'bfield1942t': 'HpWx9z',
        'bfield1942rtr': 'HpWx9z',
        'bfield1942': 'HpWx9z',
        'bfield1942sw': 'HpWx9z',
        'bfield1942swd': 'r3Yjs8',
        'bf1942swmac': 'HpWx9z',
        'bf2ddostest': 'hW6m9a',
        'battlefield2d': 'hW6m9a',
        'bf2sttest': 'NFFtwb',
        'bf2142': 'FIlaPo',
        'stella': 'flfRQv',
        'bf2142b': 'sdbMvQ',
        'stellad': 'UoiZSm',
        'bf2142e': 'flfRQv',
        'bf2142d': 'UoiZSm',
        'battlefield2': 'hW6m9a',
        'bfield2xp1': 'hW6m9a',
        'Battlefield3': '',
        'battlefieldbadco2': '',
        'battlefieldbadco2b': '',
        'bfield1942ps2am': 'HpWx9z',
        'bfield1942ps2': 'HpWx9z',
        'bfield1942ps2b': 'HpWx9z',
        'bfvietnam': 'h2P9dJ',
        'bfvietnamt': 'h2P9dJ',
        'bforcebeta': '',
        'battleforge': '',
        'battleshipfc': '',
        'bsmidway': 'fLtUIc',
        'bsmidwaypc': 'qY84Ne',
        'bsmidwaypcam': 'qY84Ne',
        'bsmidwayps2': 'qY84Ne',
        'bsmidwayps2am': 'qY84Ne',
        'bstationspac': '',
        'bstrikeotspcam': '7vRSBa',
        'bstrikeotspcd': '7vRSBa',
        'bstrikeotspc': '7vRSBa',
        'bz2': 'tGbcNv',
        'bbladeds': '7TUkXB',
        'BeatHazard': '',
        'beatrunnerwii': 'CAI5ov',
        'beateratoripham': 'qV4GA6',
        'beateratorpspam': 'VXtdws',
        'beateratoram': 'VXtdws',
        'beateratoriphd': 'qV4GA6',
        'beateratorpspd': 'VXtdws',
        'beateratord': 'VXtdws',
        'beateratoriph': 'qV4GA6',
        'beateratorpsp': 'VXtdws',
        'beaterator': 'VXtdws',
        'beckybrogantmomm': '',
        'beep': '',
        'beijing2008': '',
        'beijing08pcam': 'P4QzX5',
        'beijing08ps3am': 'P4QzX5',
        'beijing08pcd': 'P4QzX5',
        'beijing08ps3d': 'P4QzX5',
        'beijing08pc': 'P4QzX5',
        'beijing08ps3': 'P4QzX5',
        'bejeweled2wiiam': '83V7wq',
        'bejeweled2wii': '83V7wq',
        'Bejeweled2Deluxe': '',
        'BejeweledTwist': '',
        'ben10bb': 'bwV3xN',
        'ben10bbam': 'bwV3xN',
        'BenThereDanThat': '',
        'beowulf': '',
        'besieger': 'ydG3vz',
        'bestfriendds': 'i7Sk5y',
        'bgeverwii': 'zDalN6',
        'betonsoldier': 'mH2y9u',
        'betonsoldierd': 'mH2y9u',
        'bewarewii': 'iTHrhz',
        'beyondge': '',
        'bbangminids': 'ErZPG8',
        'bigbrainwolf': '',
        'BikiniKarateBabes': '',
        'biocomrearmed': '',
        'BioComRearmedCenso': '',
        'bioshock2mp': '',
        'bioshock2sp': '',
        'bioshock': 'SGeqMj',
        'bioshockd': 'eoaXfs',
        'stbotf': 'aiiOU0',
        'bandw': 'KbEab3',
        'BlackMirror2Reigni': '',
        'BlackMirror3TheFin': '',
        'black9pc': 'h2F9cv',
        'black9ps2': 'w3D8gY',
        'BlacklightTangoDow': '',
        'foxtrotpcam': 'lTvP98',
        'foxtrotps3am': 'b7MJTP',
        'foxtrotpcd': 'lTvP98',
        'foxtrotps3d': 'b7MJTP',
        'foxtrotpc': 'lTvP98',
        'foxtrotps3': 'b7MJTP',
        'blacksitearea51': '',
        'BlackwellLegacy': '',
        'BlackwellUnbound': '',
        'BladeKitten': '',
        'blade': 'Eel1q7',
        'bodarkness': 'Jn33pM',
        'explomÃ¢â\'?': '?Â°n',
        'explomÃ¤ntest': 'xUX',
        'blzrdriverds': 'n9HLOG',
        'BA2SecretMissionsW': '',
        'BlazingAngelsSquad': '',
        'bleachds': '5BuVRR',
        'bleach1EUds': '9AxT0s',
        'bleach1USds': 'd4wISd',
        'bleach2USds': '7xEJsp',
        'bleach2ds': 'Txc4SQ',
        'bleach2EUds': 'B0veR8',
        'bleach2wii': 'hTswOX',
        'blindpointpcam': 'IGbJEs',
        'blindpointpcd': 'IGbJEs',
        'blindpointpc': 'IGbJEs',
        'blitz08ps3am': 'Jk4zlB',
        'blitz08ps3d': 'Jk4zlB',
        'blitz08ps3': 'Jk4zlB',
        'blitz2005ps2': 'uY39vA',
        'blitzkrieg': 'fYDXBN',
        'blitzkrieg2liberat': '',
        'blitzkriegrt': 'fYDXBN',
        'blockoutwii': '6DPfd2',
        'blockrushwii': 'LbsgGO',
        'BloodBowl': '',
        'BloodBowlLegendary': '',
        'blood2': 'jUOF0p',
        'bloodties': '',
        'BloodlineChampions': '',
        'Bloodrayne': '',
        'Bloodrayne2D2D': '',
        'bldragonds': 'iICaoP',
        'bldragonNAds': 'JfXyGi',
        'bldragonNAdsam': 'JfXyGi',
        'bldragonddsam': 'HPN6nJ',
        'bldragondds': 'HPN6nJ',
        'bldragoneudsam': 'WsdhMJ',
        'bldragoneuds': 'WsdhMJ',
        'bldragondfdsam': '4GLxnr',
        'bldragonfdsam': '4GLxnr',
        'bldragonfds': '4GLxnr',
        'bldragonidsam': 'zvpxQy',
        'bldragonids': 'zvpxQy',
        'bldragonsdsam': 'kqc1U3',
        'bldragonsds': 'kqc1U3',
        'bluemarspcam': 'qMJq8p',
        'bluemarspc': 'qMJq8p',
        'BlueToadMurderFile': '',
        'blur': '',
        'blurdsam': 'E8xJSw',
        'blurds': 'E8xJSw',
        'bobcameinpieces': '',
        'xar': 'N9gV5H',
        'boggle': 'geaDfe',
        'bokujomonods': 'mM94Uc',
        'bokujyods': 'O5ZdFP',
        'bokutwinvilds': 'z9VMe9',
        'bokujyomonds': 'aydHX0',
        'djangosabds': 'xtWbUN',
        'bomberfunt': 'bbeBZG',
        'bomberman2wiid': 'mWTGGw',
        'bomberman2wii': 'mWTGGw',
        'bomberman20ds': 'JZ2s7T',
        'bmbermanexdsi': 'nhQakb',
        'bombermanslds': '9dG7KP',
        'bonkwii': 'QeXwBs',
        'BookwormAdventures': '',
        'borderlands': '',
        'bderlands360am': '1Eu2fy',
        'bderlandspcam': 'a2Lg16',
        'bderlandsps3am': 'Z1kXis',
        'bderlandsx360d': '1Eu2fy',
        'bderlandspcd': 'a2Lg16',
        'bderlandsps3d': 'Z1kXis',
        'bderlandsx360': '1Eu2fy',
        'bderlandspc': 'a2Lg16',
        'bderlandsps3': 'Z1kXis',
        'blandsjpnps3am': 'TrcpZd',
        'blandsjpnps3': 'TrcpZd',
        'blandsonlive': 'T6XRqP',
        'blandsonliveam': 'T6XRqP',
        'bderlandruspcam': 'Pe4PcU',
        'bderlandruspcd': 'Pe4PcU',
        'bderlandruspc': 'Pe4PcU',
        'BorderlandsDLC4': '',
        'borderlandsDLC2': '',
        'borderlandsDLC3': '',
        'borderlandsDLC1': '',
        'bots': 'JKb462',
        'boulderdashxl': '',
        'boyvgirlcwii': 'gWFTR4',
        'braid': '',
        's_Breach': '',
        'BreakingTheRules': '',
        'breedd': 'u7Gc92',
        'breed': 't3Fw7r',
        'cricket2007': 'ABiuJy',
        'blic2007': 'X2P8Th',
        'bridgebaron14': 'hd3Y2o',
        'bridgecs': '',
        'e5': '',
        'BRINK': '',
        'BrokenSwordTSD': '',
        'brosiaeib': '',
        'biahhJPps3am': 'oAEUPB',
        'biahhPCHpcam': 'NFBVyk',
        'biahhPOLps3am': 'zEo2mk',
        'biahhPRps3am': 'hWpJhQ',
        'biahhRUSpcam': 'dhkWdE',
        'biahhJPps3d': 'oAEUPB',
        'biahhPOLps3d': 'zEo2mk',
        'biahhPRps3d': 'hWpJhQ',
        'birhhpc': 'sPZGCy',
        'biahhPCHpc': 'NFBVyk',
        'biahhRUSpc': 'dhkWdE',
        'birhhps3': 'HrDRqe',
        'biahhJPps3': 'oAEUPB',
        'biahhPOLps3': 'zEo2mk',
        'biahhPRps3': 'hWpJhQ',
        'birhhpcam': 'sPZGCy',
        'birhhps3am': 'HrDRqe',
        'brosiarth30': '',
        'bbobblewii': 'IdTzGr',
        'buccaneerpcam': 'vFNtGi',
        'buccaneerpcd': 'vFNtGi',
        'buccaneerpc': 'vFNtGi',
        'buccaneer': 'sAhRTM',
        'BuccBountyD2D': '',
        'buckshotwiiam': 'p6QgFH',
        'buckshotwii': 'p6QgFH',
        'buckmaster': '4NcAZg',
        'buildalot': '',
        'buildalot2': '',
        'buildalot3passport': '',
        'buildalot4powersou': '',
        'buildalottheelizab': '',
        'bukudominoes': '',
        'BulletCandyD2D': '',
        'Bulletstorm': '',
        'bstormps3am': '2skyJh',
        'bstormps3': '2skyJh',
        'bullyscholared': '',
        'bumperwars': 'Rp5kAG',
        'burnzombieburn': '',
        'burnoutparultibox': '',
        'BusDriverD2D': '',
        'bÃ¤dmasteri': 'd',
        'tiberiansun': 'Gg6nLf',
        'tsfirestorm': 'fRW88c',
        'cabtrophbucks': '',
        'cadZ2JPwii': 'Z5bgxv',
        'caesar4': '',
        'CakeMania': '',
        'cakemania2': '',
        'cakemania3': '',
        'CakeManiaMainStree': '',
        'CakeManiaTotheMax!': '',
        'CallofAtlantis': '',
        'callofc': '',
        'callofduty': 'K3dV7n',
        'callofdutyps2d': 'tR32nC',
        'callofduty2': 'DSpIxw',
        'codbigredps2': 'ye4Fd8',
        'callofduty4': 'AOPMCh',
        'callofduty4d2d': 'AOPMCh',
        'callofduty4d2dSP': '',
        'callofduty5': 'VycTat',
        'cod5wii': 'XSq2xz',
        'cod5victoryds': 'z8ooR0',
        'cod7dsam': 'qMrpGp',
        'cod7ds': 'qMrpGp',
        'codblackopspcam': 'LwzOpE',
        'codblackopspc': 'LwzOpE',
        'callofdutyps2': 'tR32nC',
        's_codmw2': '',
        'codmw2ds': '0DzDcW',
        'callofdutyuo': 'KDDIdK',
        'codwawbeta': 'iqEFLl',
        'codwaw': 'LdlpcA',
        'codwawsp': '',
        's_CallofDutyBlackO': '',
        's_BlackOpsMultipla': '',
        'callofj': '',
        'cojbib': '',
        'CampusD2D': '',
        'capitalism2': 'ihPU0u',
        'Capsized': '',
        'captsubasads': 'A738z3',
        'wg_card': '',
        'cardherodsam': 'FRzL49',
        'cardherods': 'FRzL49',
        'cardheroesds': 'xnSA6P',
        'cardiowrk2wii': 'ByKsx6',
        'CargoTheQuestforGr': '',
        'caribbeanseafishes': '',
        'crmgdntdr2k': 'W5Hl31',
        'carnivalkwii': 'iTuqoN',
        'carnivores3': 'yd7J2o',
        'cars2': '',
        'casinochaos': '',
        'casinotourwiiam': 'WykxqZ',
        'casinotourwii': 'WykxqZ',
        'castlestrike': 'GPcglz',
        'castles': '31zdyb',
        'castlesgame': '',
        'cvania08ds': 'SwO9Jn',
        'CVjudgmentwii': '9te6Ua',
        'Catz': '',
        'Catz2': '',
        'Catz2Catz': '',
        'cavestorywii': 'tWThgd',
        'cb2ds': 'V47Nu4',
        'cdkeys': 'QcpyWG',
        'celebdm': 'h5D7j8',
        'cellfacttwpcam': '4aN3Pn',
        'cellfacttwpc': '4aN3Pn',
        'cellfactorpsnam': 'gkVTh8',
        'cellfactorpcam': 'gkVTh8',
        'cellfactorpc': 'gkVTh8',
        'cellfactorpsn': 'gkVTh8',
        'CellFactor': '',
        'CellZenith': '',
        'celtickings': 'MIq0wW',
        'celtickingsdemo': 'TCQMZI',
        'celticloresidhehil': '',
        'ceville': '',
        'chainz2relinked': '',
        'champon': '',
        'cheuchre': 'Yw7fc9',
        'chhearts': 'Yw7fc9',
        'chspades': 'Yw7fc9',
        'charcollectds': 'DlZ3ac',
        'chaser': 'Pe4W2B',
        'chaserd': '3R5fi7',
        'chat01': 'xQ7fp2',
        'Chat10': 'xQ7fp2',
        'Chat11': 'xQ7fp2',
        'Chat12': 'xQ7fp2',
        'Chat13': 'xQ7fp2',
        'Chat15': 'xQ7fp2',
        'Chat16': 'xQ7fp2',
        'Chat17': 'xQ7fp2',
        'Chat18': 'xQ7fp2',
        'Chat19': 'xQ7fp2',
        'chat02': 'xQ7fp2',
        'Chat20': 'xQ7fp2',
        'chat03': 'xQ7fp2',
        'Chat04': 'xQ7fp2',
        'Chat05': 'xQ7fp2',
        'Chat06': 'xQ7fp2',
        'Chat07': 'xQ7fp2',
        'Chat08': 'xQ7fp2',
        'Chat09': 'xQ7fp2',
        'chat': 'DagNzk',
        'chesk': 'W5Hl41',
        'chesschalwiiam': 'EU1zXz',
        'chesschalwii': 'EU1zXz',
        'chessrevmac': 'kpWAJE',
        'chessrevmacam': 'kpWAJE',
        'chessrevpc': 'IUQltN',
        'chessrevpcam': 'IUQltN',
        'chessworlds': '5Hm41y',
        'chessmaster9000': '',
        'ChessmasterChallen': '',
        'chasspart5': 'p4kGg7',
        'cotn': '',
        'CoftheNileAlexandr': '',
        'chocobombds': 'FP75Oy',
        'chocmbeuds': 'O8r2ST',
        'chocotokiwii': 'uxXJS3',
        'Chocolatier': '',
        'Chocolatier2Secret': '',
        'cstaisends': '0LTCe3',
        'cmmwcpoker': 'iRU92a',
        'locomotion': 'uTAGyB',
        'Chrome': '',
        'ChromeMP': '',
        'ChromeSpecforce': '',
        'chronriddickefbb': '',
        'chuzzle': '',
        'Circulate': '',
        'citiesinmotion': '',
        'CitiesXL': '',
        'citiesXL2k11': '',
        'citylife08': '',
        'CityLifeDeluxe': '',
        'cityofheroes': 'tJnRie',
        'cityofvl': 'LEJaXZ',
        'cityrain': '',
        'CityRainBSD2D': '',
        'civconps3am': 'hn53vx',
        'civcr': '',
        'civ4cham': 'y3D9Hw',
        'civ4jpam': 'y3D9Hw',
        'civ4ruam': 'y3D9Hw',
        'civ4ch': 'y3D9Hw',
        'civ4jp': 'y3D9Hw',
        'civ4ru': 'y3D9Hw',
        'civ4b': 'y3D9Hw',
        'civ5': 'kB4qBk',
        'civ2gold': 'alVRIq',
        'civ2tot': 'alVRIq',
        'civ3ge': '',
        'Civ3Complete': '',
        'civ3con': 'h4D8Wc',
        'civ3conb': 'g3e9J1',
        'civ3goty': '',
        'civ3ptw': 'yboeRW',
        'civ4': 'y3D9Hw',
        'civ4macam': 'CWiCbk',
        'civ4mac': 'CWiCbk',
        'civ4am': 'y3D9Hw',
        'civ4xp3': 'lgNJU7',
        'civ4xp3am': 'lgNJU7',
        'civ4xp3d': 'lgNJU7',
        'civ4bts': 'Cs2iIq',
        'civ4btsjpam': 'Cs2iIq',
        'civ4btsd2d': '',
        'civ4btsjp': 'Cs2iIq',
        'civ4btsam': 'Cs2iIq',
        'civ4col': '',
        'civ4wrld': 'oQ3v8V',
        'civ4x': '',
        'civ4wrldcnam': 'oQ3v8V',
        'civ4wrldjpam': 'oQ3v8V',
        'civ4wrldmacam': 'QtCpWE',
        'civ4wrldcn': 'oQ3v8V',
        'civ4wrldjp': 'oQ3v8V',
        'civ4wrldmac': 'QtCpWE',
        'civ4wrldam': 'oQ3v8V',
        'civrevasiaps3': 'xUfwlE',
        'civconps3': 'hn53vx',
        'civrevasips3d': 'xUfwlE',
        'civconps3d': 'hn53vx',
        'wg_classic': '',
        'claw': 'ziPwZG',
        'jericho': '',
        'Clones': '',
        'CloningClyde': '',
        'close5dmo': 'V0tKnY',
        'ccombat3': 'TKuE2P',
        'close5': 'XBOEdl',
        'close4bb': 'alVRIq',
        'closecomftf': 'iLw37m',
        'closecomftfmac': 'iLw37m',
        'cloudywithachanceo': '',
        'CloverACT': '',
        'cpenguin2ds': '1XafMv',
        'cpenguin2wii': 'Nu3Uqi',
        'clubgameKORds': 'Jb3Tt1',
        'coh2pcam': 'J4b95X',
        'coh2pc': 'J4b95X',
        'codedarmspspam': 'E7Emxp',
        'codedarmspsp': 'E7Emxp',
        'cnpanzers': 'h3Tod8',
        'cnpanzers2cw': '2mEAh7',
        'cnpanzers2cwam': '2mEAh7',
        'cnpanzers2cwbam': 'uazO6l',
        'cnpanzers2cwb': 'uazO6l',
        'cnpanzers2cwd': '2mEAh7',
        'cpcw': '',
        'cnpanzers2': 'h3Tod8',
        'cneagle': 'HNvEAc',
        'cnoutbreak': 'Jg43a1',
        'cnoutbreakd': 'Jg43a1',
        'Cogs': '',
        'coldfear': '',
        'coldwinter': 'W9f5Cb',
        'cmr4pc': 't3F9f1',
        'cmr4pcd': 't3F9f1',
        'cmr5pc': 'hH3Ft8',
        'cmr5pcd': 'hH3Ft8',
        'cmr5ps2': 'hH3Ft8',
        'colcourseds': 'T9aQ3K',
        'Comanche4': '',
        'combat': 'p5kGh7',
        'combatarms': '',
        'CombatMissionAKd2d': '',
        'ComMissBarbaroBerl': '',
        'CombatMissionBOd2d': '',
        'combatzonepcam': '3NncWS',
        'combatzonepcd': '3NncWS',
        'combatzonepc': '3NncWS',
        'cc3tibwarsd': 'yGVzUf',
        'cc3dev': 'Ba77xN',
        'cc3devam': 'Ba77xN',
        'cc3xp1': 'BhcJLQ',
        'cc3xp1am': 'BhcJLQ',
        'cc3kw': 'TPLstA',
        'cc3xp1mb': 'BhcJLQ',
        'cc3tibwars': 'E4F3HB',
        'cc3tibwarsam': 'E4F3HB',
        'cc3tibwarscd': 'E4F3HB',
        'cc3tibwarscdam': 'E4F3HB',
        'cc3tibwarsmb': 'GmMKoK',
        'cncg': '',
        'cncgzh': '',
        'redalert3pc': 'uBZwpf',
        'redalert3pcb': 'uBZwpf',
        'cc3arenapc': 'gE7WcR',
        'cc3arenapcam': 'gE7WcR',
        'cc3arenapcd': 'gE7WcR',
        'redalert': 'QwZGex',
        'cc3kwcd': 'TPLstA',
        'cc3kwcdam': 'TPLstA',
        'cc3kwmb': 'TPLstA',
        'ccgenerals': 'h5T2f6',
        'ccgeneralsb': 'g3T9s2',
        'ccgenzh': 'D6s9k3',
        'RedAlert3Uprising': '',
        'ccrenegade': 'tY1S8q',
        'ccrenegadedemo': 'LsEwS3',
        'CommanderCotA': '',
        'CommanderCotADLC': '',
        'CommanderCotADLC_P': '',
        'commandpc': 'rSRJDr',
        'commandpcam': 'rSRJDr',
        'commandos2': 'V0tKnY',
        'commandos3': 'uukfJz',
        'cstrikef': '',
        '_common': '',
        'coh': '',
        'cohof': 'epROcy',
        'cohofbeta': 'LAedqA',
        'comrade': 'F72JWS',
        '_comrade': '',
        'conan': '4J8df9',
        'condemned2bs': 'kwQ9Ak',
        'condemned2bsam': 'kwQ9Ak',
        'condemned2bsd': 'kwQ9Ak',
        'condemnedco': '',
        'conflictzone': 'g7nLfZ',
        'c5': 'uQCWJs',
        'conflictdo': '',
        'globalstorm': '',
        'conflictsops2': 'vh398A',
        'conflictsopc': 'vh398A',
        'conquestfw': 'ORp4kG',
        'conquestfwd': 'ZIr0wW',
        'locksquestds': '30bDMu',
        'contactds': 'quPooS',
        'contactusds': 'pEldCc',
        'CM_Testing': 'IHReee',
        'contrads': 'bw215o',
        'contractjack': 'h3K8f2',
        'contractjackd': 'U3k2f8',
        'contractjackpr': 'U3k2f8',
        'cookingdash': '',
        'CMwrldkitwii': '24vlFy',
        'cossacks': 'p2vPkJ',
        'cstrike': 'ZIr1wX',
        's_cssource': 'EEpacW',
        'source': 'AYcFzB',
        'CoyotesTaleFireand': '',
        'cradleofpersia': '',
        'CradleOfRome': '',
        'CradleofRome2': '',
        'craftofgods': '',
        'crashnburnps2': 'gj7F3p',
        'crashnburnps2b': 'gj7F3p',
        'crashnitro': '3E8fT5',
        'CrashTime2': '',
        'crayonphys': '',
        'CrazyCatLove': '',
        'CrazyMachines2': '',
        'CrazyTaxi': '',
        'Create': '',
        'CreateaMall': '',
        'CrimeCraft': '',
        'crimson': 'YBLJwU',
        'cskies': 'Rp5kAG',
        'cskiesdemo': 'p2uPkK',
        'crimsonland': '',
        'CrossFire': '',
        'crc2005': '',
        'crttest': '',
        'crttestdead': '111111',
        'cryostasis': '',
        'crysisb': 'ZvZDcL',
        'crysis': 'ZvZDcL',
        'Crysis2': '',
        'crysis2pcam': 'XeS9dz',
        'crysis2ps3am': 'lhgvHv',
        'crysis2x360am': 'A3Xz9h',
        'crysis2pcd': 'XeS9dz',
        'crysis2ps3d': 'lhgvHv',
        'crysis2x360d': 'A3Xz9h',
        'crysis2pc': 'XeS9dz',
        'crysis2ps3': 'lhgvHv',
        'crysis2x360': 'A3Xz9h',
        'crysisd': 'ZvZDcL',
        'crysisspd': 'IWfplN',
        'crysiswarhead': '',
        'crysiswars': 'zKbZiM',
        'crystalw1wii': 'U9J7QC',
        'crystalw2wii': 'AqCvfz',
        'CrystalCavernsAmon': '',
        'csideadlyintent': '',
        'csidm': '',
        'CSIFatalConspiracy': '',
        'CSIHardEvidence': '',
        'CSINY': '',
        'cubetastic': '',
        'Cubology': '',
        'cuesportswii': 'rNBacr',
        'cueballworldd': 'uPkKyb',
        'culdceptds': '6qUoZg',
        'cultures': 'Ir1wXE',
        'draglade2ds': 'cTbHQV',
        'custoboeuds': 'hZCuTq',
        'Customrobods': 'MH0EK4',
        'cmanager': 'S6aiiO',
        'cmanager3': 'T3d8yH',
        'dday': 'B78iLk',
        'ddayd': 'B78iLk',
        'ddayxp1': 'B78iLk',
        'DWARFS': '',
        'daemonica': '',
        'DaggerdalePC': '1PnaZt',
        'DaggerdalePCam': '1PnaZt',
        'DaggerdalePS3': 'SDeeXi',
        'DaggerdalePS3am': 'SDeeXi',
        'bandbrosds': 'yvcEXe',
        'bandbrosEUds': 'WrU6Ov',
        'smashbrosxwii': '3AxIg4',
        'damnation': '',
        'damnationpcam': 'Jpxpfr',
        'damnationps3am': 'Jpxpfr',
        'damnationpcd': 'Jpxpfr',
        'damnationpc': 'Jpxpfr',
        'damnationps3': 'Jpxpfr',
        'dangeroushsgit': '',
        'DangerousWaters': '',
        'dangerwater': '',
        'daoc': 'TkAksf',
        'darkfalllightsout': '',
        'darkfallslostsouls': '',
        'jkmots': '6ajiPU',
        'jk': '9nUz45',
        'darkhorizon': '',
        's_darkmmm': 'ggXhvY',
        'darkmessiahofmight': '',
        'darkreign2': 'PwE7Nd',
        'darksalv': '',
        'darksector': '',
        'dv': 'O1Vodm',
        'darkvoid': '',
        'darkvoidzero': '',
        'darkesthourshearts': '',
        'darkdays': '',
        'DarkfallEU': '',
        'DarkfallUS': '',
        'darkheaven': 'G3i4Xk',
        'DW2TheDarkLineage': '',
        'DWInPursuitofLoath': '',
        'darkplanet': 'uPkJyb',
        's_darksiders': '',
        'Darkspore': '',
        'darkstar1': '',
        'darkstone': '3MHCZ8',
        'dartspartywii': 'xyHrNT',
        'DarwiniaD2D': '',
        'dawnofd': '',
        'dawnofdiscoverygol': '',
        'dawnofdvenice': '',
        'dawnheroesds': 'HpsSGM',
        'DawnOfMagic2': '',
        'dow_dc': 'RUgBVL',
        'dod': 'Hm31yd',
        'DCUniverseOnline': '',
        'DCS_Warthog': '',
        'DCSBlackShark': '',
        'dmhand': 'YJxLbV',
        'deadmeetslead': '',
        'deadrising2': '',
        'deadspace': '',
        'DeadSpace2': '',
        'dcas': '',
        'ddozenptd': 'G7b3Si',
        'ddozenpt': 'L3sB7f',
        'dond': '',
        'DeathandTheFly': '',
        'deathtorights2': '',
        'DeathtoSpies': 'LOhgNO',
        'dtspiesmot': '',
        'dtrackres': '',
        'decasport2wii': 'pSFeW6',
        'decsprt3euwii': 'BvkTE8',
        'decsprt3nawii': '6mMxER',
        'decasport3wii': 'rKsv8q',
        'Decathletesds': 'ry7e63',
        'ds9dominion': 'BkAg3a',
        'dhunterps2dis': 'G2Qvo9',
        'dh2003': 'hT40y1',
        'dh2004': 'E8j4fP',
        'dh2004d': 'E8j4fP',
        'dh2005': 'qW56m4',
        'dh2005d': 'qW56m4',
        'dh3': 'gbnYTp',
        'dh4': 'BeaPe2',
        'dh5': 'Ji2R2v',
        'defcon': '',
        'defenderofthecrown': '',
        's_DefenseGridDLC1': '',
        's_DefenseGridDLC2': '',
        's_DefenseGridDLC3': '',
        's_DefenseGridDLC4': '',
        's_DefenseGrid': '',
        'Defenstar': '',
        'deltaforce2': '',
        'dflandwarrior': '',
        'dfxtreme': '',
        'dforcex2': '',
        'dforcex2beta': '',
        'blkhwkdnt': 'sps2',
        'dforceblackhawkdow': '',
        'blkhwkdnps2': '7wM8sZ',
        'dftaskforcedagger': '',
        'Democracy2': '',
        'demoderby': 'Hl31yd',
        'demonforgepcam': 'XEuc92',
        'demonforgeps3am': '9Cpt5m',
        'demonforgepcd': 'XEuc92',
        'demonforgeps3d': '9Cpt5m',
        'demonforgepc': 'XEuc92',
        'demonforgeps3': '9Cpt5m',
        'demonstar': 'ziPwZF',
        'dental2dsam': 'NQP31X',
        'dental2ds': 'NQP31X',
        'derbydogwii': 'I8HL3T',
        'dstallionds': '1fNr6d',
        'descent': '',
        'descent3': 'feWh2G',
        'DesertRatsvsAfrika': '',
        'afrikakorpsd': 'tfHGsW',
        'desperados-2cooper': '',
        'destruction': 'vt3f71',
        'destructionam': 'vt3f71',
        'Determinance': '',
        'deusex': 'Av3M99',
        'deusexiw': '',
        's_DeusExHumanRevol': '',
        'devastation': 'b6Eo3S',
        'devastationd': 'y3Fk8c',
        'devilmaycry4': '',
        'dexterthegame': '',
        'newgamename': '3I7iFz',
        'newgamenameam': '3I7iFz',
        'diablo': 'blGjuM',
        'diablo2': 'hPU0tK',
        'DiamondDan': '',
        'dkracingds': 'VBr5Sm',
        'digbysdonuts': '',
        'digichampds': 'lDiK3f',
        'digichampKRds': 'KbWB9w',
        'digichampUSds': 'TiuO7K',
        'digistorydsam': 'n5t4VH',
        'digistoryds': 'n5t4VH',
        'digimonsleds': 'mB26Li',
        'digisunmoonds': '6DPXX9',
        'Digidwndskds': 'SEmI1f',
        'digiwrldds': 'MLh2Hn',
        'dimensity': '',
        'dimensitypcam': 'ZTcB4o',
        'dimensitypcd': 'ZTcB4o',
        'dimensitypc': 'ZTcB4o',
        'DinsCurse': '',
        'DinsCurseDemonWar': '',
        'dinerdash': '',
        'dinerdashwii': '4rTdD2',
        'DinerDash2': '',
        'DinerDash3': '',
        'DinerDashHometownH': '',
        'dinorunse': '',
        'dinokingUSds': '8DgStx',
        'dirt': '',
        'dirt2': '',
        'dirt2onliveam': 'sBl3VQ',
        'dirt2onlive': 'sBl3VQ',
        'dirtdemo': 'Twesup',
        'dtr': 'h7nLfZ',
        'dtracing': 'ipC912',
        'dtr2d': 'U4iX9e',
        'dtr2': 'MIq1wW',
        'dtrscdmo': 'p2vPkJ',
        'dtrsc': 'p2vPkJ',
        'dirt3': '',
        'disciples2': 'tKnYBL',
        'Disciples3': '',
        'disciples': 'hPV0uK',
        'disneydev': 'ZpO4Dp',
        'disneydevam': 'ZpO4Dp',
        'disfriendsds': 'VNTp6E',
        'dfriendsEUds': 'AoJWo6',
        'checkdive': '',
        'deepwateradventure': '',
        'divinity2ed': '',
        'Divinity2FlamesOfV': '',
        'Divinity2DragonKni': '',
        'dmania': 'Dn3H2v',
        's_DogFighter': '',
        'DoggieDash': '',
        'dogsofwar': 'Mbe3if',
        'dominion': '1zdybo',
        'doom3': 'kbeafe',
        'doraemonds': 'P6nKJz',
        'Doragureidods': 'x10zDJ',
        'DownInFlamesD2D': '',
        'downfall': '',
        'drmariowii': 'BvQyb2',
        'DrWhoA1and2': '',
        'DrWhoA3': '',
        'DrWhoA4': '',
        'dracula3': '',
        'DraculaOrigin': '',
        'dragladeds': 'wPb9aW',
        'dragladeEUds': 'fpEnOg',
        'dao': '',
        'dqmonjkr2plds': 'NhsIqO',
        'dqmonjokerds': '5dOqvD',
        'dqmonjoker2ds': 'MXsuQS',
        'dragquestsds': 'r6ToyA',
        'dsakurads': 'Sw2t7F',
        'dragonthrone': 'p5jAGh',
        'dragoncrwnwii': 'y4QTvo',
        'dragonbzwii': 'oHk248',
        'dragonbzUSwii': '5tRJqr',
        'Drains': '',
        'drainworksam': 'E2quA4',
        'DrnWrk(iphon)am': 'C0RtRF',
        'drainworks': 'E2quA4',
        'drakan': 'zCt4De',
        'drakensang2': '',
        'drakensangtde': '',
        'dreamchronwii': '2Q2ePF',
        'DreamChronicles': '',
        'DreamChronicles2': '',
        'DreamfallTLJ': '',
        'driftmoon': '',
        'DRODRPGTendrysTale': '',
        'DRODJtoRootedH': '',
        'DRODTheCityBeneath': '',
        'droplitz': '',
        'druidking': 'p5kGg7',
        'dsnattest': 'L74dSk',
        'dsnattest2': 'L74dSk',
        'DSwars2ds': 'fF4Wtd',
        'ducatimotods': 'i9Duh0',
        'duelfield': '8mELiP',
        'duke4': '8n2Hge',
        's_DukeNukemForever': '',
        'dukes': 'dvRTOR',
        'dungeonbandits': '',
        'dundfniphoneam': 'x8evHv',
        'dundefndpcam': 'ZNrGzP',
        'dundefndps3am': 'B1UcDx',
        'dundfniphone': 'x8evHv',
        'dundefndpc': 'ZNrGzP',
        'dundefndps3': 'B1UcDx',
        'dexplorerds': '8mqApN',
        'dungeonlords': '74dBl9',
        'dungeonr': 'RibMFo',
        'dungeonsiege': 'H3t8Uw',
        'dsiege2': 'tE42u7',
        'dsiege2am': 'tE42u7',
        'dsiege2bw': 'A3GXsW',
        's_DungeonSiege3': '',
        'dungeons': '',
        'dndo': '',
        'dwctest': 'd4q9GZ',
        'dynamiczanwii': 'JKoAWz',
        'dynaztrialwii': 'QyQTgC',
        'dynastyofegypt': '',
        'dynwar4h': '',
        'dynwar6': '',
        'earth2150': '1wXEX3',
        'moonproject': 'YDXBNE',
        'Earthrise': '',
        'EarthwormJim': '',
        'EarthwormJim3D': '',
        'EastIndiaCompany': '',
        'eicbattleoftrafalg': '',
        'EastIndiaCompanyPB': '',
        'EastIndiaCompanyPr': '',
        'EastSideStory': '',
        'echelon': 'uPkKya',
        'echelonww': 'uPkKya',
        'echelonwwd': 'ORp4jG',
        'ecocreatureds': '61JwLu',
        'ecomatch': '',
        'ecolisEUds': 'uCaiU4',
        'ecorisds': 'dL9zd8',
        'EggvsChicken': '',
        'ejammingmac': 'Sd7a9p',
        'ejammingpc': 'Sd7a9p',
        'ekorisu2ds': 'FzODdr',
        'elderscrollsVskyri': '',
        'elebitsds': 'bVEhC3',
        'elemonsterds': '26pNrL',
        'elementalsthemagic': '',
        'elements': '',
        'elementsofdestruct': '',
        'elementsofwar': '',
        'ElfBowling': '',
        'ElfBowlingHawaiian': '',
        'stef1exp': 'zgsCV2',
        'ElizabethFindMDSea': '',
        'elizabethfindmedmy': '',
        'EllipticTwist': '',
        'ellipticpcam': 'dmuAnq',
        'ellipticpc': 'dmuAnq',
        'elvenlegacy': '',
        'ElvenLegacyMagicEx': '',
        'ElvenLegacyRangerE': '',
        'ElvenLegacySiegeEx': '',
        'Emberwind': '',
        'EmeraldCityConfide': '',
        'Emergency2012': '',
        'emergency3': '',
        'emperorbfd': 'X3rAIt',
        'empireearth': 'ybneQW',
        'EmpireEarth2Platin': '',
        'eearth2': 'h3C2jU',
        'eearth2d': 'h3C2jU',
        'eearth2xp1': 'h3C2jU',
        'ee3': 'dObLWQ',
        'eearth3': 'Fk6hTz',
        'empireearthiii': '',
        'eearth3am': 'Fk6hTz',
        'eearth3d': 'Fk6hTz',
        'eearth3dam': 'Fk6hTz',
        'ee3alpha': 'VQibCm',
        'ee3beta': 'tvbRKD',
        'eearth3b': 'Fk6hTz',
        'eearth3bam': 'Fk6hTz',
        's_emtotalwar': '',
        'empiresam': 'GknAbg',
        'empires': 'GknAbg',
        'empiresdam': 'GknAbg',
        'empiresd': 'GknAbg',
        'quakewarset': 'i0hvyr',
        'quakewarsetb': 'i0hvyr',
        'quakewarsetd': 'i0hvyr',
        's_enginedriverdriv': '',
        'epochwars': '',
        'epochwarspcam': 'Dfd5DE',
        'epochwarspc': 'Dfd5DE',
        'EscapeFromParadise': '',
        'escaperosecliffisl': '',
        'EscapetheEmeraldSt': '',
        'escviruswii': 'gWke73',
        'escapewhispervalle': '',
        'eschalonbook2': '',
        'EschalonBookI': '',
        'eforcesr': 'xQEvFD',
        'etforces': 'GKPQiB',
        'eternalforcesam': 'xQEvFD',
        'eternalforces': 'xQEvFD',
        'etherlords': '6ajiOV',
        'etherlordsd': '6ajiOV',
        'etherlordsbeta': '6ajiOV',
        'ETROMTAE': '',
        'eufloria': '',
        'europaurome': '',
        'EuropaUniversalis3': '',
        'EU3HeirtotheThrone': '',
        'EU3Chronicles': '',
        'EuropaUniversalisR': '',
        'eawar': 'MIq1wW',
        'evaspacewii': 'm5yEnm',
        'eveonline': '',
        'eq': 'AnoMKT',
        'everquest2': 'vPmJGO',
        'EQ2_Extended': '',
        'EQII_DoV': '',
        'Everquest2SF': '',
        'eqFaydwer': '',
        'EverQuestTAE': '',
        'everydaygeniussqua': '',
        'everydayshooter': '',
        'EvilGenius': '',
        'evolva': 'DV24p2',
        'excessive': 'Gn3aY9',
        'exciteracewii': 'WLrMtU',
        'efte': '',
        'expertpool': 'cRu7vE',
        'expl': 'omÃ¢',
        'explomaen': 'fZDYBN',
        'explomÃ¤n': '',
        'exploeman': '8dv',
        'pb4': 's82J1p',
        'EyesBandegades': '',
        's_FEAR3': '',
        'fearxp': '',
        'feard2d': '',
        'FEARUltimateXP': '',
        'FEARUltimateXP2': '',
        'FEARUltimate': '',
        'f1comp': 'g7W1P8',
        'f12002': 'DXBOFd',
        'F1_2010': '',
        'Fable3': '',
        'facesofwar': 'Shp95z',
        'facesow': 'qgiNRG',
        'facesofwaram': 'Shp95z',
        'facesofward': 'Shp95z',
        'facesofwarxp1am': 'QQxWKm',
        'facesofwarxp1': 'QQxWKm',
        'FaeryLegendsofAval': '',
        'fahrenheitdc': '',
        'fairstrike': 'y4Ks2n',
        'fairstriked': 'y4Ks2n',
        'fairytalesth': '',
        'fairyfightpcam': 'R6JnVy',
        'fairyfightspcam': 'BqQzb9',
        'fairyfightps3am': 'qTLu9D',
        'fairyfightpcd': 'R6JnVy',
        'fairyfightspcd': 'BqQzb9',
        'fairyfightps3d': 'qTLu9D',
        'fairyfightpc': 'R6JnVy',
        'fairyfightspc': 'BqQzb9',
        'fairyfightps3': 'qTLu9D',
        'Falcon4.0AlliedFor': '',
        'fallenearth': '',
        'Fallout': '',
        'fallout2': '',
        'fallout3': 'iFYnef',
        's_FalloutNewVegas': '',
        's_falloutNV_DeadMo': '',
        'falloutbos': 'fQW78d',
        'FalloutTactics': '',
        'falloutbosd': 'JwUhCT',
        'familyfarm': '',
        'familyfeud': '',
        'familyfeudii': '',
        'famfishwii': 'oG4QPH',
        'famstadiumwii': 's75Uvn',
        'famista2010ds': 'bdhXZm',
        'fantcubewii': '2wDUcM',
        'fstarzerods': 'knJOIz',
        'farcry': 'HkXyNJ',
        'farcry2': '',
        'fargate': 'nhwchs',
        'farm2': '',
        'FarmCraft': '',
        'farmcraft2': '',
        'Farmscapes': '',
        'FashionForward': '',
        'FastLanesBowling': '',
        'finertiaps3am': '3vEcPe',
        'finertiaps3': '3vEcPe',
        'Fatale': '',
        'fatedragon': 'sCV34o',
        'fatedragond': '6UN9ag',
        'fateofthepharaoh': '',
        'FateOfTheWorld': '',
        'fear2demo': '',
        'fear2': '',
        'FEAR2Reborn': '',
        'poriginpcjpam': 'w2OQ5I',
        'poriginps3jpam': 'MF2kB1',
        'poriginpcam': 'yAnB97',
        'poriginps3am': 'Rl6qAT',
        'poriginpcjpd': 'w2OQ5I',
        'poriginps3jpd': 'MF2kB1',
        'poriginpcd': 'yAnB97',
        'poriginps3d': 'Rl6qAT',
        'poriginpcjp': 'w2OQ5I',
        'poriginps3jp': 'MF2kB1',
        'fear2ol': 'dDPDXC',
        'poriginpc': 'yAnB97',
        'poriginps3': 'Rl6qAT',
        'fearxp2': 'rDAg9r',
        'fearxp1': 'n3V8cj',
        'fear': 'n3V8cj',
        'fearcb': 'n3V8cj',
        'fearob': 'n3V8cj',
        'fearobsc': 'n3VBcj',
        'feard': 'n3V8cj',
        'FieldOps': 'AK8zHT',
        'fblackjack': 'NeVbEa',
        'Fiesta': '',
        'fifa08': '',
        'fifa08ds': 'zLTgc4',
        'fifa09': '',
        'fifa09ds': '5VxqMN',
        'fifa10': '',
        'fifa11': '',
        'FIFAmanager09': '',
        'fifaman10': '',
        'FIFAManager11': '',
        'fifasoc10ds': 'ZULq4H',
        'fifasoc11ds': '7NLfQN',
        'fstreetv3ds': 'd46hQk',
        'fightclubps2': 't3d8cK',
        'Chat14': 'xQ7fp2',
        'figlandds': 'eIDvPq',
        'fileplanet': 'fZDYBN',
        'ffccechods': 'qO9rGZ',
        'ffantasy3ds': '6cidXe',
        'ffantasy3euds': '9zRsJF',
        'ffantasy3usds': '6Ta8ww',
        'ffxiultimatecollec': '',
        'ffcryschronds': 'z9WMZJ',
        'firecapbay': 'VJMdlD',
        'fireemblemds': 'pTLtHq',
        'firearmsevopcam': 'WrgNsZ',
        'firearmsevopc': 'WrgNsZ',
        'FishTycoon': '',
        'Fishdom': '',
        'fishdom2': '',
        'FishdomH2O': '',
        'FishdomH2O_D2D': '',
        'FishdomSpookySplas': '',
        'fmasterwtwii': '07pDGe',
        'fivecarddeluxe': '',
        'flashanzands': '61pARy',
        'flatoutps2': 'ms83Ha',
        'flatout': 'SxdJel',
        'flatout2': '',
        'flatout2pc': 'GtGLyx',
        'flatout2ps2': 'VL6s2n',
        'flatultcarn': '',
        'fltsim2k': 'TKuE2P',
        'fsx': 'y3Fd8H',
        'fltsim98': 'OU0uKn',
        'fsxa': 'edkTBp',
        'fsxaam': 'edkTBp',
        'flipwords2': '',
        'flock': '',
        'FlockPCam': '84z6J4',
        'FlockPSNam': '84z6J4',
        'FlockPCd': '84z6J4',
        'FlockPSNd': '84z6J4',
        'FlockPC': '84z6J4',
        'FlockPSN': '84z6J4',
        'flyinghero': '9mELiP',
        'FlyingRedBarrel': '',
        'footballmanager200': '',
        'fballman2010': '',
        'FootballManager201': '',
        'FootballMogul2007': '',
        'fortheglory': '',
        'sweawfocd': 'qafBXM',
        'FordRacingOffRoad': '',
        'fordvchevyps2': 'i79DwE',
        'foreverbwii': 'K7bZgf',
        'foreverbl2wii': 'Ly8iAL',
        'forsaken': 'znoJ6k',
        'fortzombie': '',
        'fortix2': '',
        'Fortrix': '',
        'FreeRunning': '',
        'fforce': 'ys3k4d',
        'freedomforce': 'lHjuMc',
        'ffvsttr': '5tQqw9',
        'ffvsttrd': '5tQqw9',
        'freessbalpha': 'qXtSmt',
        'FromDust': '',
        's_FrontMissionEvol': '',
        'frontlinesfow': 'ZEmOuj',
        'ffowbeta': 'wqhcSQ',
        'ffwcbeta': 'oZTTQy',
        'fuelpcam': 'UOXvsa',
        'fuelps3am': 'T8IuLe',
        'fuelps3ptchdam': 'T8IuLe',
        'fuelpc': 'UOXvsa',
        'fuelps3': 'T8IuLe',
        'fuelps3ptchd': 'T8IuLe',
        'fuelpcd': 'UOXvsa',
        'fuelps3d': 'T8IuLe',
        'fullautops3d': 'kC5tJA',
        'fullautops3': 'kC5tJA',
        'fswpc': 'R5pZ29',
        'fullspecwarr': '',
        'fswps2jp': '6w2X9m',
        'fswps2kor': '6w2X9m',
        'fswps2pal': '6w2X9m',
        'fswps2': '6w2X9m',
        'FullSpectrumWarrio': '',
        'fsw10hps2kor': '6w2X9m',
        'fsw10hps2pal': '6w2X9m',
        'fsw10hpc': '6w2X9m',
        'fsw10hps2': '6w2X9m',
        'fullmatcgds': 'fGRd5f',
        'furfighters': 'JwUhCT',
        'furfiighters': 'JwUhCT',
        'furdemo': '3rAJtH',
        'furaishi3wii': 'xK58W8',
        'fury': 'KOMenT',
        'fushigidunds': 'VVNqVT',
        'fushigidun5ds': 'T3uWSz',
        'shirends2ds': 'T5gnTX',
        'futurewars': '',
        'fuusuibands': 'Gu3FCH',
        'fxtrainingds': 'tXkDai',
        'fxtrainlvds': 'N543Aq',
        'GForce': '',
        'gicombat1': 'JyblGj',
        's_GalacticBowli': 'gKjcjK',
        's_GalacticBowling': 'gKjcjK',
        'GalacticCommandES': '',
        'Galaxemail': '',
        'GalaxyOnline': '',
        'gamepopulator': 'h3Ks61',
        'gamepopulatoram': 'h3Ks61',
        'gamebot': 'G4mBo7',
        'gloftpokerwii': 'NtKG3P',
        'glracerwii': 'kAM5wF',
        'gamespy2': 'd4kZca',
        'gslive': 'Xn221z',
        'gsarcadetour': '',
        'gsbgammon': 'PbZ35N',
        'brigades': 'nUAsKm',
        'gscheckers': 'PbZ35N',
        'gschess': 'BQMZIq',
        'E3_2003': 'jvaLXV',
        'am': 'ato4Lc',
        'd': 'ato4Lc',
        'gamespy1pc': 'ato4Lc',
        'gamespy2pcam': '3PIv0T',
        'gamespy2pc': '3PIv0T',
        'gshearts': 'PbZ35N',
        'gsiphonefw': 'FaI3pa',
        'gspylite': 'mgNUaC',
        'livewire': 'wuyvAa',
        'gspoker': 'PbZ35N',
        'gsreversi': 'ItHo0r',
        'gsspades': 'PbZ35N',
        'gspyweb': '08NHv5',
        'gsyarn': 'm31ydy',
        'g__gamespy': '',
        'GameSpy.com': 'xbofQW',
        'g_gsdaily': '',
        'gangland': 'y6F39x',
        'ganglandd': 'y6F39x',
        'gangsters2': 'NEek2p',
        'GarageInc': '',
        'GardenDefense': '',
        'Gardenscapes': '',
        'GarshaspTheMonster': '',
        'GatlingGears': '',
        'gauntletds': 'wUq7fL',
        'gauntletps2': 'y2Fg39',
        'geargrinder': '',
        'cusrobousds': 'pO5zuq',
        'gemshop': '',
        'genetrooperpc': 'eK4Xh7',
        'genetrooperps2': 'eK4Xh7',
        'genesisrbeta': 'tZRxNP',
        'cruciform': 'TgsP47',
        'genesisr': 'sbCDkj',
        'cruciformam': 'TgsP47',
        'gsTiaKreisDS': 'p4oT53',
        'gwgalaxiesds': '85buOw',
        'gwgalaxieswii': 'o3G7J2',
        'getmede': '3MHCZ8',
        'ghostrecon': 'p5jAGh',
        'ghostraw': 'Cybhqm',
        'greconawf2g': 'pdhHKC',
        'ghostrecond': 'KyblGj',
        'greconfswii': 'pGGdAd',
        'ghostreconislandth': '',
        'greconawf': 'Fn5GLL',
        'greconawf2': 'qvOwuX',
        'greconawf2am': 'qvOwuX',
        'greconawf2b': 'qvOwuX',
        'greconawf2bam': 'qvOwuX',
        'greconawf2d': 'qvOwuX',
        'greconawfd': 'Fn5GLL',
        'ghostreconds': 'EX3rAI',
        'ghostsquadwii': 'lq8to9',
        'GhostbustersSOS': '',
        'ghostbusters': '',
        'giants': 'z8erKA',
        'giftshop': '',
        'girlsds': 'hKe82J',
        'girlssecretds': 'kNcVft',
        'girlskoreads': 'QiFGmi',
        'Gish': '',
        'GlobalAgenda': '',
        'globalops': 'AdN3L9',
        'globalopsd': 'u3Pa87',
        'globalopspb': 'CHANGE',
        'st_rank': '53Jx7W',
        'st_ladder': 'KwFJ2X',
        'glowfish': '',
        'GodsAndHeroes': '',
        'godswaronline': '',
        'godzilla2ps2': 'bi9Wz4',
        'godzillaps2': '',
        'gokuidsi': 'yQLxLL',
        'GoldenTrails2TheLo': '',
        'goldentrailstnwr': '',
        'golemcrusades': '',
        'gopetsvids': 'DQ5xwk',
        'gore': 'NYZEAK',
        'goreAVam': 'oKOLBm',
        'goreAVd': 'oKOLBm',
        'goreAV': 'oKOLBm',
        'goredemo': 'uW0xp1',
        'gored': 'k2X9tQ',
        'goreav': 'NYZEAK',
        'gorese': 'NYZEAK',
        'gotcha': '9s34Pz',
        'gotchad': '9s34Pz',
        'Gothic2Gold': '',
        'gothic3': '',
        'Gothic3FG': '',
        'GovernorofPoker': '',
        'gradiusrbwii': 'ZXCd6z',
        'grandagesrome': '',
        'grandagesromereign': '',
        'gp500': 'cvSTOR',
        'gta3pc': 'Hu3P1h',
        'gta4pcam': 't3nTru',
        'gta4ps3am': 't3nTru',
        'gta4xam': 't3nTru',
        'gta4pc': 't3nTru',
        'gta4ps3': 't3nTru',
        'gta4x': 't3nTru',
        'gta4pcdevam': 't3nTru',
        'gta4ps3devam': 't3nTru',
        'gts4xdevam': 't3nTru',
        'gta4pcdev': 't3nTru',
        'gta4ps3dev': 't3nTru',
        'gts4xdev': 't3nTru',
        'gta4ps3grmam': 't3nTru',
        'gta4xgrmam': 't3nTru',
        'gta4ps3grm': 't3nTru',
        'gta4xgrm': 't3nTru',
        'gta4ps3test': 't3nTru',
        'gta3': '',
        'GrandTheftAuto4': '',
        'gtasaps2': 'Bn73c9',
        'gtacwarspspam': 'UXrDJm',
        'gtacwiphoneam': '3NQ6vh',
        'gtacwiphoned': '3NQ6vh',
        'gtacwarspspd': 'UXrDJm',
        'gtacwarsds': 'nm4V4b',
        'gtacwiphone': '3NQ6vh',
        'gtacwarspsp': 'UXrDJm',
        'gtavc': '',
        'GrannyinParadise': '',
        'GratuitousSpaceBat': '',
        'GratuitousSBOrder': '',
        'GratuitousSBTribes': '',
        'gravitronwii': 'V9q1aK',
        'Gravity': '',
        'GrayMatter': '',
        'gbrome': 'hEf6s9',
        'gbromeam': 'hEf6s9',
        'gcracing': 'LziPwZ',
        'greedbbdemo': '',
        'greedblackborder': '',
        'ghpballps2': '9tcGVE',
        'hastpaint2wii': 'yt6N8J',
        'ghpaintballps2': '',
        'greysanatomy': '',
        'gridrunnerrev': '',
        'GrotesqueTactics': '',
        'groundcontroldarkc': '',
        'groundcontrol2': 'L3f2X8',
        'gc2demo': 'L3f2X8',
        'group': '72Ha31',
        'gruntz': 'alVRIq',
        'gsttestgame': 'bHngAu',
        'gta4eflb': '',
        'gtasa': '',
        'gticsfestwii': 'DN9tTG',
        'GTIRacing': 'BADBAD',
        'GTRevolutioncomple': '',
        'GTREvolutionExpans': '',
        'guildwars': '',
        'guildwarsfactions': '',
        'GuildWarsNightfall': '',
        'guinnesswripham': 'euFh7c',
        'guinnesswriphd': 'euFh7c',
        'guinnesswrds': 'iwTBGk',
        'guinnesswriph': 'euFh7c',
        'guinnesswrwii': 'x0oPvh',
        'guitarh3wii': 'O5imMd',
        'guitarh3xpwii': 'xkrTOa',
        'ghero4wii': 'xcJsPA',
        'gh4ghitswii': 'lUHbE5',
        'gh4metalwii': 'm8snqf',
        'gh4vhalenwiiam': 'yDGso1',
        'gh4vhalenwii': 'yDGso1',
        'gulfwarham': 'YDXBOF',
        'GumboyTournament': '',
        'gun': '',
        'gunnylamacwii': 'CeF2yx',
        'gunman': 'W78dvR',
        'GunzPremiumStarter': '',
        'GwentheMagicNanny': '',
        'HackerEvolution': '',
        'hackerevolutionunt': '',
        'hail2chimps3am': 'mDeBg3',
        'hail2chimps3d': 'mDeBg3',
        'h2cdigitalps3d': 'HlgicF',
        'hail2chimps3': 'mDeBg3',
        'h2cdigitalps3': 'HlgicF',
        'hail2chimps3ram': 'mDeBg3',
        'hail2chimps3r': 'mDeBg3',
        'tf15': 'V0tKnY',
        'halflife': 'V0tKnY',
        'halo': 'QW88cv',
        'halod': 'yG3d9w',
        'halomacd': 'e4Rd9J',
        'halomac': 'e4Rd9J',
        'halom': 'e4Rd9J',
        'halor': 'e4Rd9J',
        'HamiltonsGreatAdve': '',
        'hammerfight': '',
        'hankhaneysworldgol': '',
        'Happinuds': 'DqO198',
        'HappyTreeFriendsFA': '',
        'hardtruckapocalyps': '',
        'hardtruck': 'PGWCwm',
        'harbunkods': 'renLKS',
        'harley3': 'KdF35z',
        'harleywof': 'bofRW8',
        'harrypotteradhp1': '',
        'HarryPotterADHP2': '',
        'harvfishEUds': 'ZGwLfc',
        'harmoon2kordsam': 'Gn1cxG',
        'harmoon2kords': 'Gn1cxG',
        'harmooniohds': 'iCyIlW',
        'harmoon2ds': '5rNkAv',
        'harvestme': '',
        'oldscrabble': 'Pz4Veb',
        'backgammon': 'VCypJm',
        'checkers': '2hfuJA',
        'chess': 'g11Aig',
        'connect4': '2Pnx6I',
        'cribbage': 'TKuE2P',
        'dominos': 'VFHX8a',
        'freepark': 'alVRIq',
        'frogger': 'ZIq0wX',
        'ginrummy': '9rIEUi',
        'hearts': '9SKI3t',
        'millebourn': 'kD072v',
        'parcheesi': 'PHCviG',
        'pente': 'NeB26l',
        'racko': 'U8QYlf',
        'rook': 'Bc1Zmb',
        'spades': 'YvPBIM',
        'hauntedhouse': '',
        'hazenthedarkwhispe': '',
        'heartsofiron': '',
        'HeartsOfIron2Dooms': '',
        'heartsofiron2': '',
        'HeartsOfIron3': '',
        'hoi3': '',
        'HeartsOfIron3Mothe': '',
        'HeartsOfIron3Sempe': '',
        'HeartsOfIronIIIDLC': '',
        'heavygear2': 'hCTBQM',
        'fakk2': 'YDYBNE',
        'HeavyWeapon': '',
        'HectorBadgeofCarna': '',
        'haegemonia': 'LiQwZF',
        'haegemoniaxp': 'LiQwZF',
        'HegemonyPhilip': '',
        'heiseikyods': '4zBVda',
        'heistpcam': 'BLhZD9',
        'heistps3am': 'BLhZD9',
        'heistpcd': 'BLhZD9',
        'heistpc': 'BLhZD9',
        'heistps3': 'BLhZD9',
        'helldorado': '',
        'hkofbeta': '',
        'heretic2': '2iuCAS',
        'heroeswii': 'vaKmz5',
        'homm4': '6ajhPU',
        'heroes3': '5Un7pR',
        'heroes3arm': 'vPkKya',
        'heroesmom5': '',
        'HoM5HammersofFate': '',
        'HoMMVTofTheE': '',
        'HeroesOfNewerth': '',
        'hotpacificps2': 'yB7qfv',
        'hotpaceudps2': 'yB7qfv',
        'hotpacnadps2': 'yB7qfv',
        'hotpacificpc': 'yB7qfv',
        'hotpacificpcd': 'yB7qfv',
        'HeroesOverEurope': '',
        'hexenworld': '6SeXQB',
        'hd2ss': 'k3Ljf9',
        'hd2': 'sK8pQ9',
        'hd2b': 'T1sU7v',
        'hd2d': 'sT3p2k',
        'hd': 'MIq1wX',
        'hhbball2000': 'zfsDV2',
        'hhbball2001': '5TN9ag',
        'hhball2003': 'cvSTOR',
        'hhbball2002': 'YBNEdl',
        'hsmusicalds': 'Em72Cr',
        'champgamesps3': 'dwg55x',
        'hotrodwiiam': 'L0kIVL',
        'hotrodwii': 'L0kIVL',
        'hlwarriors': 'H5rW9v',
        'exitds': 'Ip6JF2',
        'hinterland': 'FZNxKf',
        'hitmanc47': '',
        'hitmansa': '',
        'hitmanbm': '',
        's_Hoard': '',
        'hobbitdsam': 'mfcBBz',
        'hobbitds': 'mfcBBz',
        'hokutokenwii': 'dRn94f',
        'HolidayExpress': '',
        'HollywoodPictures2': '',
        's_Homefront': '',
        'HomelandDefense': '',
        'homeworld2': 't38kc9',
        'homeworld2d': 't38kc9',
        'homeworld2b': 't3Fd7j',
        'hrollerzds': 'ih5ZOl',
        'hoodzps2': 'f6eP9w',
        'hookagainwii': '7LR7m6',
        'hookedEUwii': 'qLaV1p',
        'hookedJPNwii': 'm4JMgN',
        'hookedfishwii': 'q7ghtd',
        'hooploopwii': '4b2QnG',
        'hoopworldwii': 'mZSW86',
        'horserace': 'y4fR91',
        'hotncoldds': 'ngPcan',
        'hotdish2': '',
        'hdogking': '',
        'hotrod2': 'AaP95r',
        'hotrod': 'Tg4so9',
        'hotwheels2pcd': 'u3Fx9h',
        'hwbasharena': 'CSBQMI',
        'hotwheels2pc': 'u3Fx9h',
        'hotwheels2ps2': 'u3Fx9h',
        'HotdogHotshot': '',
        'housemd': '',
        'hoyleblackjackseri': '',
        'HoyleCasino3D': '',
        'hoylepokerseries': '',
        'hunterdanwii': '55Fqd5',
        'HuntingUnlimited20': '',
        'huntunlim2010': '',
        'hustleps2am': 'ni9hdV',
        'hustleps2': 'ni9hdV',
        's_Hydrophobia': '',
        'ioftheenemy': 'uPkKya',
        'ImNotAlone': '',
        'ifluid': '',
        'icebreakers': '',
        'iwdale': 'LfZDYB',
        'iwd2': 'Q3yu7R',
        'iwdalehow': 'h3U3Kz',
        'kentomashods': 'feZytn',
        'idraculawii': 'v1xcTU',
        'projectigi2r': 'j4F9cY',
        'projectigi2': 'j4F9cY',
        'projectigi2d': 'j4F9cY',
        'igowii': 'ikN1qM',
        'ihraracing': 'Zbmu4a',
        'Ikaro': '',
        'ikaropcam': 'kG5bEO',
        'ikaropcd': 'kG5bEO',
        'ikaropc': 'kG5bEO',
        'ilrosso': 'Y3f9Jn',
        'il2sturmovik': 'ajiPU0',
        'il2s1946': '',
        's_il2sturmovikcod': '',
        'il2sturmovikd': 'zfsDV2',
        'il2sturmovikfb': 'h53Ew8',
        'il2s1946EU': '',
        'ImagineChampionRid': '',
        'imagineartds': 'Jb87QW',
        'imaginejdds': 'Co6Ih6',
        'otonatrainds': 'G8skCH',
        'cotnOriginal': '',
        'ImmortalDefense': '',
        'impglory': 'eCYHgP',
        'improm': '',
        'ImperiumRomanumGol': '',
        'IncaBall': '',
        'incomingforces': 'MIr0wW',
        'iwar2': 'Bk3a13',
        'IJonesandtheFateAt': '',
        'IJandtheLastCrusad': '',
        'indigoproph': '',
        'itycoon2': 'JeW3oV',
        'irl2000': 'U7tb4Z',
        'indycarps2': 'L4H7f9',
        'infectedpsp': 'eRq49L',
        'infectedpspam': 'eRq49L',
        'infernal': '',
        'influence': 'QbFENO',
        'influencepcam': 'r3fiCS',
        'influencepc': 'r3fiCS',
        'ingenious': 'HiBpaV',
        'insane': 'QxZFex',
        'insanedmo': '3rAJtI',
        'InsaniquariumDelux': '',
        'insecticidepart1': '',
        'Insectoid': '',
        'trackfieldds': 'zC5kgT',
        'im1pcam': 'uRd8zg',
        'im1pc': 'uRd8zg',
        'im1pcd': 'uRd8zg',
        'IRShipShooter': '',
        'igwarlord': '',
        'ironman': '',
        'ironstorm': 'y5Ei7C',
        'ironstormd': 'h9D3Li',
        'IroncladsAmericanC': '',
        'IroncladsAnglo-Rus': '',
        'ironcladschinchais': '',
        'ironcladshighseas': '',
        'IroncladsSchleswig': '',
        'itadakistwii': 'vr0klL',
        'itadakistds': '5AesfG',
        'jackkeane': '',
        'jacknick6': 'q7zgsC',
        'JackofallTribes': '',
        'jadeemp': '',
        'jbond08wii': '50hs18',
        'jbond2009ds': 'asL1Wh',
        'jbondmv2dsam': '4AiRCn',
        'jbondmv2ds': '4AiRCn',
        'JamesBondBloodston': '',
        'jbnightfire': 'S9j3L2',
        'jamestownlegendoft': '',
        'janefightpcam': 'OkkoMA',
        'janefightpc': 'OkkoMA',
        'janefightps3am': 'dLDgtJ',
        'janefightps3': 'dLDgtJ',
        'janesattack': 'dvSTOR',
        'janesf15': 'XEX3rA',
        'janesf18': 'hPV0uK',
        'janesfa': 'OFek1p',
        'janesusaf': '6aiiPU',
        'janesww2': 'wUhCTB',
        'jkmosith1': 'kD072v',
        'starwarsjediknight': '',
        'jk3': 'e4F2N7',
        'jeopardyps2': 't9iK4V',
        'jetfighter4': 'M3pL73',
        'JewelCraft': '',
        'jewelkeeperseaster': '',
        'jewelquest4heritag': '',
        'jewelquestIII': '',
        'jewelquestmysterie': '',
        'jewelquestsolitair': '',
        'jewelquestthesleep': '',
        'JewelsoftheNile': '',
        'JigWords': '',
        'jikkyonextwii': '6WH0CV',
        'jikkyoprowii': 'TKmp3m',
        'jikkyopprowii': 'FVeCbl',
        'cueballworld': 'sAJtHo',
        'jissenpachwii': '5tc98w',
        'daikatana': 'fl8aY7',
        'jopscomarms': '',
        'JointOpsTyphoonRis': '',
        'JollyRover': '',
        'JournalistJourney': '',
        'judgedredddi': 't3D7Bz',
        'JudgeDreddDreddvsD': '',
        'judgedredd': 't3D7Bz',
        'juicedpc': 'g3J8df',
        'juicedps2': 'g3J8df',
        'juiced2hin': '',
        'juicedpalps2': 'g3J8df',
        'jumpsstars2ds': 'VXkOdX',
        'jnglspeedwii': 'sPCqp8',
        'blahblahtest': 'uH88tT',
        'blahmasterid': 'uH88tT',
        'blahtest': 'uH88tT',
        'justcause': '',
        's_justcause2': '',
        's_justcause2demo': '',
        'justsingds': 'hwg1XV',
        'jyankenparwii': 't2ge59',
        'kaihatsuds': 'gW0gp9',
        'kqmateDS': '8dEm7s',
        'kaiwanowads': 'NelyD3',
        'knelynch2ddolam': 'iSF88P',
        'knelynch2ddol': 'iSF88P',
        'kanelynch2': '',
        'kandldm': '',
        'kaosmpr': '6cQWlD',
        'kaosmpram': '6cQWlD',
        'kaosmprd': '6cQWlD',
        'KaptainBraweEpisod': '',
        'karajoy3wii': 'D4B7zM',
        'spectrobes2ds': 'uBRc5a',
        'kateifestds': 'kJcEq8',
        'kkhrebornwii': '76Trpf',
        'katekyohitds': '9kXaZG',
        'keenracerswii': '9McTZh',
        'kenteitvwii': 'uGRdPx',
        'keuthendev': 'TtEZQR',
        'keuthendevam': 'TtEZQR',
        'GunMahjongZds': 'XL3iSh',
        'kidslearnwii': 'ws94sA',
        'kingarthurdemo': '',
        'KingArthurDruids': '',
        'KingArthurTheRPW': '',
        'kingclubsds': 'rL9dOy',
        'kingtigerspcam': 'E4hD2t',
        'kingtigerspcd': 'E4hD2t',
        'kingtigerspc': 'E4hD2t',
        'kingsbountyarmprin': '',
        'KingsBountyGOTY': '',
        'kbcrossworlds': '',
        'KingsQuestCollecti': '',
        'KingdomElemental': '',
        'kingpin': 'QFWxY2',
        'kingsbounty': '',
        'kinoone': '',
        'kissdc': '9tFALe',
        'kiss': '9tFALe',
        'KivisUnderworld': '',
        'knightsoh': '9f5MaL',
        'knightsohd': '9f5MaL',
        'kott2pc': 'p3iWmL',
        'kott2ps2': 'p3iWmL',
        'kodawar2010ds': 'dXZiwq',
        'kohanexp': 'Kbao3a',
        'kohanIIkowd2d': '',
        'kohankow': 'uE4gJ7',
        'kohankowd': 'uE4gJ7',
        'kohan': 'Kbao3a',
        'kohanag': 'dl1p7z',
        'kohanagdemo': 'Kbao3a',
        'kohandemo': 'Kbao3a',
        'koinudewii': 'GyW0xG',
        'konsportswii': 'sJEymO',
        'konascrate': '',
        'konductrads': 'odc8Ps',
        'Konung3': '',
        'kororinpa2wii': 'aWybXG',
        'puzzlemojiwii': '0Um7ap',
        'KrabbitWorldOrigin': '',
        'krabbitpcmacam': 'Jf9OhT',
        'krabbitpcmacd': 'Jf9OhT',
        'krabbitpcmac': 'Jf9OhT',
        'KrissX': '',
        'krissxpcam': 'T8dDn4',
        'krissxpc': 'T8dDn4',
        'Kudos2': '',
        'KudosRockLegend': '',
        'kumawar': 'y3G9dE',
        'kurikurimixds': 'Q25SLf',
        'kurikinds': '2ZaR1q',
        'kuros': '',
        'lanoirepcam': 'sx37ex',
        'lanoireps3am': 'yPpSqe',
        'lanoirex360am': 'fKw37T',
        'lanoirepcd': 'sx37ex',
        'lanoireps3d': 'yPpSqe',
        'lanoirex360d': 'fKw37T',
        'lanoirepc': 'sx37ex',
        'lanoireps3': 'yPpSqe',
        'lanoirex360': 'fKw37T',
        's_LaraCroft_Guardi': '',
        'laserarena': 'TBQMIr',
        'laserarenad': 'TBQMIr',
        'laurajonestgogae': '',
        'laurajonestslont': '',
        'lawordcrimdo': '',
        'lazgo2demo': 'MIq0wW',
        'leadfoot': 'uNctFb',
        'leadfootd': 'uNctFb',
        'LeageOfLegends': 'RUWLbe',
        'legkaindef': '',
        'leghandgod': '',
        'le_projectx': 't3F9vY',
        'blademasters': 'B3Avke',
        'legendary': '',
        'legendarypcam': 'WUp2J6',
        'legendaryps3am': '9HaHVD',
        'legendarypc': 'WUp2J6',
        'legendaryps3': '9HaHVD',
        'legendarypcd': 'WUp2J6',
        'legendsmm': '5Kbawl',
        'legendsmmbeta': '5Kbawl',
        'legendsmmbeta2': '5Kbawl',
        'legofwrex360am': 'VuPdJX',
        'Legio': '',
        'legionarena': 'Gd4v8j',
        'legobricktopia': '',
        'LEGOHarryPotter': '',
        'legoindianaj2': '',
        'LEGOIndianajones2t': '',
        'LEGOSW3CloneWars': '',
        'legoswcs': '',
        'legouniverse': 'HPaWTu',
        'LIGTheOriginalAdve': '',
        'LeisureSuitLarry-B': '',
        'lslmcluu': '',
        'LeisureSLC': '',
        'lslbob': '',
        'BrokenSwordSotT_DC': '',
        'lettersfromnowhere': '',
        'LightofAltair': '',
        'liightwii': 'VveRkG',
        'vietnamso': 'E8d3Bo',
        'vietnamsod': 'y3Ed9q',
        'LineRider2Unbound': '',
        'lineage2': '',
        'linksds': '9TKvyS',
        'links2001': '8cvSTO',
        'links2001dmo': 'xZGexS',
        'links2004': 'jG3d9Y',
        'linksext': 'Fdk2q7',
        'links98': 'J8yc5z',
        'links99': 'iQxZFe',
        'links2000': 'MIr1wW',
        'lionheart': 'h5R3cp',
        'LionheartKC_DLC1': '',
        'LionheartLegacyoft': '',
        'lionheartkc': '',
        'lbookofbigsds': 'zTtFaT',
        'littlefarm': '',
        'lilpetshop': '',
        'LockOn': '',
        'lockonfc2': '',
        'lonposUSwii': 'AtQIeu',
        'lonposwii': 'L08ik8',
        'LOOM': '',
        'lotro': '',
        'lotrbme2r': 'g3Fd9z',
        'lotrbme': 'h3D7Lc',
        'lotrbme2': 'g3Fd9z',
        'lotrbme2wk': 'g3Fd9z',
        'wotr': 'e8Fc3n',
        'lordsoftherealmIII': '',
        'lotr3': 'y2Sc6h',
        'lotr3b': 'y2Sc6h',
        'lostmagicds': 'eI0Rml',
        'lostmagicwii': 'hQrVFm',
        'lostplanet2': '',
        'lostplanetecce': '',
        'lost': '',
        'luchalibrepcam': 'dGu4VZ',
        'luchalibreps3am': 'DNbubV',
        'luchalibrewiiam': '56nk2f',
        'luchalibrepcd': 'dGu4VZ',
        'luchalibreps3d': 'DNbubV',
        'luchalibrepc': 'dGu4VZ',
        'luchalibreps3': 'DNbubV',
        'luchalibrewii': '56nk2f',
        'lucidity': '',
        'luckystar2ds': 'BFxkaz',
        'ludicrousmacam': 'P99WDn',
        'ludicrouspcam': 'JH70r6',
        'ludicrousmacd': 'P99WDn',
        'ludicrouspcd': 'JH70r6',
        'ludicrousmac': 'P99WDn',
        'ludicrouspc': 'JH70r6',
        'Lugaru': '',
        'lume': '',
        'luminarcUSds': 'aI8FCJ',
        'luminarc2ds': 'e8O5aA',
        'luminarc2EUds': 'lJsN7I',
        'luminarc2USds': '9kIcv6',
        'lumark3eyesds': '65yvsC',
        'luxor': '',
        'luxor2': '',
        'Luxor3': '',
        'luxoradventures': '',
        'luxormahjong': '',
        'LuxorQuest': '',
        'luxoramunrising': '',
        'LylianEp1': '',
        'machinarium': '',
        'machines': 'xS6aii',
        'madden07': '',
        'madden08': '',
        'madden08ds': 'wFuf7q',
        'madden09ds': 'yOuECC',
        'madeinoreds': '6vwCT1',
        'mafia2pcam': 'HgPhRC',
        'mafia2ps3am': 'cn3EpM',
        'mafia2pc': 'HgPhRC',
        'mafia2ps3': 'cn3EpM',
        's_Mafia2': '',
        'mafia': 'dxboeR',
        'mageknight': 'IZNkpb',
        'mageknighta': '',
        'mageknightd': 'IZNkpb',
        'magmay2': 'QW88dv',
        'magmay2d': 'ORp4kG',
        'magicacademy': '',
        'magicacademyII': '',
        'MagicTGBattlegroun': '',
        'mtgbgrounds': 'y3Fs8K',
        's_Magicka': '',
        'magnetis': '',
        'mahjongkcds': 'eBtrQN',
        'mahjongroadshow': '',
        'MajesticForest': '',
        'majesty2': '',
        'Majesty2PCam': 'aKwmX5',
        'Majesty2PCd': 'aKwmX5',
        'Majesty2PC': 'aKwmX5',
        'Majesty2BOA': '',
        'majesty2x': '',
        'Majesty2MonsterKin': '',
        'majestyx': 'wUhCTC',
        'MajestyGoldx': '',
        'majesty': 'qik37G',
        'MajestyGold': '',
        'mlb2k11wii': '2RHvyx',
        'mlb2k9ds': '8Z34m5',
        'MLBallstarsds': 'KT8yGE',
        'mleatingJPwiiam': '4T0Tcg',
        'mleatingwii': 'lcUrQg',
        'mleatingJPwii': '4T0Tcg',
        'makebouncybouncy': '',
        'makibamonods': '',
        'MakingHistoryGold': '',
        'MakingHistory2': '',
        'mallapalooza': '',
        'manhunt': '',
        'manhunt2': '',
        'monkmayhemwii': 'wMe9tQ',
        'MEGUContentsUnderP': '',
        'mparkemp': '',
        'ms2012wii': 'Obdwap',
        'MSolympicds': 'kK9ibq',
        'MSolympicwii': 'i6lEcz',
        'mswinterds': 'uyEG4g',
        'mswinterwii': 'O53Z7t',
        'mariokartds': 'yeJ3x8',
        'mariokartdsam': 'yeJ3x8',
        'mariokartkods': 'Uu2GJ4',
        'mariokartwii': '9r3Rmy',
        'mparty1ds': 'rUpE9b',
        'mariosprtwii': 'TpMQw7',
        'mschargedwii': 'B4LdGW',
        'mvsdk25ds': 'ko7R42',
        'marvlegpcam': 'eAMh9M',
        'marvlegps2am': 'eAMh9M',
        'marvlegps3am': 'eAMh9M',
        'marvlegjpps3am': 'eAMh9M',
        'marvlegnpspam': 'eAMh9M',
        'marvlegpspam': 'eAMh9M',
        'marvlegps2pam': 'eAMh9M',
        'marvlegpcd': 'eAMh9M',
        'marvlegpc': 'eAMh9M',
        'marvlegps2': 'eAMh9M',
        'marvlegps3': 'eAMh9M',
        'marvlegjpps3': 'eAMh9M',
        'marvlegnpsp': 'eAMh9M',
        'marvlegpsp': 'eAMh9M',
        'marvlegpcdam': 'eAMh9M',
        'marvlegps3pam': 'eAMh9M',
        'marvlegps2p': 'eAMh9M',
        'marvlegps3p': 'eAMh9M',
        'marveltcardds': 'GkWfL7',
        'marveltcard': 'GkWfL7',
        'marveltcardps': 'GkWfL7',
        'mua2wii': 'QizM3A',
        'mass': '',
        'masseffect2': '',
        'massiveassault': '',
        'MassiveAssaultNetw': '',
        'maprenaissance': '',
        'masterdefensedemo': '',
        'moo3': 'g4J72d',
        'moo3a': 'g4J72d',
        'masterrally': 'p5jGg6',
        'matahari': '',
        'mmtest': 'F24ooQ',
        'mmtestam': 'F24ooQ',
        'matrixo': '',
        'matrixproxy': 'm6NwA2',
        'maxmagicmarker': '',
        'maxpayne': '',
        'mpayne2': '',
        'maxpayne3x360am': '28xd4T',
        'maxpayne3pcam': 'qyAD44',
        'maxpayne3ps3am': 'QN8v5P',
        'maxpayne3x360d': '28xd4T',
        'maxpayne3pcd': 'qyAD44',
        'maxpayne3ps3d': 'QN8v5P',
        'maxpayne3x360': '28xd4T',
        'maxpayne3pc': 'qyAD44',
        'maxpayne3ps3': 'QN8v5P',
        'MayhemIntergalacti': '',
        'mcdcrewds': '8qTI8b',
        'MDK': '',
        'MDKCollection1': '',
        'MDKCollection2': '',
        'MDK2': '',
        'mebiuswii': 'T0zyn9',
        'mech3': 'z8vRn7',
        'mechamotedsiam': 'Wws1g2',
        'mechamotedsi': 'Wws1g2',
        'mechcomm': 'Ir0wXE',
        'mcomm2': '7JsQ0t',
        'mechcomm2': '6ajiPV',
        'mcommgold': 'xS6aji',
        'dogalo': 'MZIr0w',
        'mech3pm': 'TORp4k',
        'mech4merc': 'q7zgsC',
        'mech4': 'uNbXef',
        'mech4st': 'tFcq8m',
        'mech4bkexp': 'csFbq9',
        'mech4bwexpd': 'Fel1q7',
        'MedalOfHonor': '',
        'mohaa': 'M5Fdwc',
        'mohaabd': 'y32FDc',
        'MedalOfHonorB': '',
        'MedalOfHonorMultip': '',
        'mohairborne': 'TjNJcy',
        'MOHADemo': 'rcLGZj',
        'mohaasd': '2vPkJy',
        'mohaamac': 'M5Fdwc',
        'mohaab': 'y32FDc',
        'mohaabdm': 'y32FDc',
        'mohaad': 'M5Fdwc',
        'mohaas': '2vPkJy',
        'mohaasmac': 'h2P1c9',
        'mohaabmac': 'y32FDc',
        'mohpa': 'S6v8Lm',
        'mohpad': 'S6v8Lm',
        'medarotds': 'n8UPyi',
        'medarotkudsam': 'S7azQU',
        'medarotkuds': 'S7azQU',
        'medieval2am': 'G23p7l',
        'medieval2d': 'yVjUSz',
        'medieval2': 'G23p7l',
        'medieval2king': '',
        'medievalvi': 'w5R39i',
        'medieval': 'L3d8Sh',
        'megaman10wii': 'th2moV',
        'megaman9wii': 'r6PBov',
        'megamansfeuds': '8wlN9C',
        'megamansfds': 'r2zQPw',
        'memansf2EUDS': 'ZqlkTy',
        'memansf2USDS': 'ZAO34c',
        'acejokerUSds': 'ZS4JZy',
        'mmartracewii': 'NCAq3G',
        'mekurucawii': 'fUq0HT',
        'menofvalor': 'h3Fs9c',
        'menofvalord': 'kJm48s',
        'MenofWar': 'AkxMQE',
        'menofwarpcam': 'KrMW4d',
        'menofwarpcbam': 'mER2kk',
        'menofwarpc': 'KrMW4d',
        'menofwarpcb': 'mER2kk',
        'menofwarpcdam': 'z4L7mK',
        'menofwarpcd': 'z4L7mK',
        'menofwarrt': '',
        'menofwaras': 'aGkHH7',
        'menofwarasr': '2zcgZn',
        'menofwarasam': 'aGkHH7',
        'menofwar:as': 'aGkHH7',
        'menofwar:asam': 'aGkHH7',
        'menofwar:nam': 'Wa621Q',
        'menofwar:namam': 'Wa621Q',
        'menofwarnam': 'Wa621Q',
        'menofwarnamam': 'Wa621Q',
        'MenofWarVietnamSpe': '',
        'menofwarvse': '',
        'merc2': '',
        'merc2demo': '',
        'mercenarywarsdemo': '',
        'merchant2': 'zdybne',
        'metalcrush3': 'KvE2Pk',
        'MetalDrift': '',
        'mfatigue': 'nfRW88',
        'metalfight3dsam': '2zAHRT',
        'metalfight3ds': '2zAHRT',
        'mfightbbultds': 'v2cC6e',
        'mfightbbueuds': '3wN0b2',
        'mfightbbukdsam': 'tmVmhR',
        'mfightbbukds': 'tmVmhR',
        'mfightbbunads': 'XN3D12',
        'metalfightds': 'noSUQC',
        'metalmax3dsam': 'wpDayd',
        'metalmax3ds': 'wpDayd',
        's_Metro2033': '',
        'metprime3wii': 'i8sP5E',
        'mprimeds': 'Dh1PpC',
        'mevoatgrooveriders': '',
        'mezasetm2wii': 'hfBxDP',
        'tsurimasterds': 'BM8WEh',
        'micchannelwii': 'wkvBfX',
        'CrazyComputers': '',
        'cfs': 'ydxbnf',
        'fltsim2002': 'uKnYBL',
        'msgolf99': 'alVRIq',
        'mclub2pc': 'y6E3c9',
        'mclub2ps2': 'h4Rx9d',
        'mclub3ps2': 'g7J2cX',
        'mclub4ps3am': 'GQ8VXR',
        'mclub4xboxam': 'GQ8VXR',
        'mclub4ps3': 'GQ8VXR',
        'mclub4xbox': 'GQ8VXR',
        'mclub4ps3devam': 'GQ8VXR',
        'mclub4xboxdevam': 'GQ8VXR',
        'mclub4ps3dev': 'GQ8VXR',
        'mclub4xboxdev': 'GQ8VXR',
        'midclub2': '',
        'midnightmysteriess': '',
        'midnightmysteriest': '',
        'MidnightNowhere': '',
        'moutlawned': 'OwQcZv',
        'moutlawne': '4o2uPk',
        'streetracer': 'ydxboe',
        'midmad': '8gEaZv',
        'midmad2': '7nLfZD',
        'midmad2dmo': 'sAJtHo',
        'midmaddemo': '3MHCZ8',
        'midwayatd2d': '',
        'mk9test': 'a0GZNV',
        'mk9testam': 'a0GZNV',
        'mk9testd': 'a0GZNV',
        'migalley': 'wUhCSC',
        'mmadnesswii': 'Ok1Lrl',
        'mini4wdds': 'XMGZia',
        'mmvdkds': 'd8Wm37',
        'mninjas': '',
        'mdamiiwalkds': '8c2EoW',
        'Jyotrainwii': 'bRtr3p',
        'miredge': '',
        'Mishap2SE': '',
        'Mishap2CE': '',
        'mmessagesds': '5wFQve',
        'MLB2K11': '',
        'mlb2k9': '',
        'MLBfrontofficemana': '',
        'MLB2k10d2d': '',
        'rallychamp': 'TKuE2P',
        'mobileforces': 'g3H6eR',
        'mobileforcesd': 'g3H6eR',
        'MoleControl': '',
        'molecontrolpcam': 'LqpHUN',
        'molecontrolpc': 'LqpHUN',
        'momoden16wii': 'TuDtif',
        'momotarodends': 'gro5rK',
        'momotaro20ds': 'gPy2cd',
        'momo2010wii': '2lbGXb',
        'elecraildsam': 'MTT5av',
        'elecrailds': 'MTT5av',
        'MI2SELeChucksReven': '',
        'lithdev': 'vFQNfR',
        'lithdevam': 'vFQNfR',
        'monopoly': 'alVRIq',
        'mt2003': 'TORp4j',
        'monopoly3': 'vPkKya',
        'monopolyty': 'YDXBNE',
        'monsterball': '',
        'monsterfarmds': 'Qhcw9n',
        'monfarm2ds': 'IvFJw0',
        'monhunter3wii': 'mO984l',
        'mh3uswii': 'IwkoVF',
        'monhuntergwii': 'hyCk2c',
        'monsterjam': '',
        'monlabwii': '8Lypy2',
        'mmadnessexps3am': 'M2ydAr',
        'mmadnessexps3': 'M2ydAr',
        'mmadexps3d': 'M2ydAr',
        'monracersds': 'Uo295H',
        'mtruckm2': 'TKuE2P',
        'mtmdemo': '6I2vIO',
        'mooncommander': 'ziQwZF',
        'moritashogids': 'rqz1dU',
        'mk9ps3am': 'Holr4e',
        'mk9ps3': 'Holr4e',
        'mkdeceppalps2': '2s9Jc4',
        'mkdeceptionps2': '2s9Jc4',
        'mkvsdcEUps3am': 'r7TauG',
        'mkvsdcps3am': 'XqrAqV',
        'mkvsdcxboxam': 'XqrAqV',
        'mkvsdcEUps3b': 'r7TauG',
        'mkvsdcEUps3': 'r7TauG',
        'mkvsdcps3': 'XqrAqV',
        'mkvsdcxbox': 'XqrAqV',
        'mkvsdcps3bam': 'XqrAqV',
        'mkvsdcps3b': 'XqrAqV',
        'mkarmps2': 'VZvp7J',
        'mkarmpalps2': 'VZvp7J',
        'MortalOnline': '',
        'mosbyscond2d': '',
        'moscowtoberlinrs': '',
        'mostwanted': 'H3kEn7',
        'motogp09pcam': 'qOspfz',
        'motogp09ps3am': 'nQF5x3',
        'motogp09pcd': 'qOspfz',
        'motogp09ps3d': 'nQF5x3',
        'motogp09pc': 'qOspfz',
        'motogp09ps3': 'nQF5x3',
        'motogp2': 'y3R2j7',
        'mcmad': 'aW7c9n',
        'mmadness2': 'MZIq1w',
        'mcm2demo': 'ajhOU0',
        'mcmaddemo': '3MHCZ8',
        'mcmania': 'BAbas9',
        'mcmaniadmo': 'TCQMIr',
        'motogp2d': 'y3R5d1',
        'motogp2007': 'oXCZxz',
        'motogp2007am': 'oXCZxz',
        'motogp08d2d': '',
        'motogp08ps3': 'ZvH4b3',
        'motogp3': 'lelcPr',
        'motogp3d': 'U3ld8j',
        'motogp4ps2': 'OCNxy3',
        'MotoGP08PCam': 'ZvH4b3',
        'MotoGP08PS3am': 'ZvH4b3',
        'MotoGP08PC': 'ZvH4b3',
        'motoracer3': 'rAItHo',
        'mrwtour': 'W78cvR',
        'mountbladed2d': '',
        'mountbladewbd2d': '',
        'mphearts': 'vStJNr',
        'mplayer': '3xYjaU',
        'mrpantsqm': 'g3R2ii',
        'mrrobotd2d': '',
        'allegiance': 'YghTwJ',
        'cfs2': 'uPkKya',
        'gamevoice': 'Agm3a1',
        'mtxmototrax': 'VKQslt',
        'mototrax': 'T2g9dX',
        'mukoubuchids': '2yK3lC',
        'mta': 'Y4f9Jb',
        'Multiwinia': '',
        'musaicboxd2d': '',
        'musicmakerwii': 'wDFJt2',
        'mxravenpspam': 'FPpfou',
        'mxravenpsp': 'FPpfou',
        'mxun05ps2am': 'u3Fs9n',
        'mxvsatvutps2am': '8GnBeH',
        'mxvatvutEUwii': '9vF1oO',
        'mxvsatvutps2': '8GnBeH',
        'mxvsatvutwii': 'fuA9hK',
        'mxvatvuPALps2am': 'cps6m8',
        'mxvatvuPALps2': 'cps6m8',
        's_MXvsATV_Reflex': '',
        'mxun05pcam': 'v8XaWc',
        'mxun05pc': 'v8XaWc',
        'mxun05ps2': 'u3Fs9n',
        'mfcoachwii': '9q49yB',
        'mykingdomforthepri': '',
        'pocketwrldds': '7Lx2fU',
        'mysecretsds': 'Cz5NpG',
        'mysimsflyerds': 'intJay',
        'simsflyerswii': 'd5wfc2',
        'mysimsflyEUds': 'AhABRa',
        'simspartywii': 'fZ3lCM',
        'simsracingds': 'iRs4Ck',
        'simsraceEUds': 'HmxBFc',
        'simsraceJPNds': 'fN26Ba',
        'simsportsds': 'Qw1de8',
        'simsportswii': 'T18tBM',
        'mysimsd2d': '',
        'mdungeonds': 'KqfKOx',
        'shirenUSEUds': 'bo4NTp',
        'mysteryofmortlakem': '',
        'MysteryofSharkIsla': '',
        'mysterypiSE': '',
        'mysteryville': '',
        'mysteryville2': '',
        'myth3demo': 'rAItIo',
        'myth3': 'W7LHE8',
        'MythicMarbles': '',
        'nplusds': 'qX9Muy',
        'nakedbrbndds': 'd5ZTKM',
        'namcotest': 'hNdo7u',
        'namcotestam': 'hNdo7u',
        'namcotestd': 'hNdo7u',
        'fherjwkk': 'RADpDr',
        'dogsrunamock': 'p2vPkJ',
        'nameneverds': 'oL7dO2',
        'nancydrewgdml': '',
        'nancydrewhc': '',
        'nancydrewhcm': '',
        'nancydrewpv': '',
        'nancydrewrtd': '',
        'nancydrewdossierli': '',
        'nancydrewckc': '',
        'nancydrewdd': '',
        'nancydrewddi': '',
        'nancydrewltbmc': '',
        'nancydrewlocs': '',
        'nancydrewsoc': '',
        'nancydrewssh': '',
        'NancyDrewSAW': '',
        'NandyDrewTCC': '',
        'nancydrewcbm': '',
        'nancydrewwwic': '',
        'nancydrewtott': '',
        'NancyDrewSCK': '',
        'Nanny911': '',
        'nanostray2ds': 'grOpw9',
        'nanost2EUds': 'Soz92T',
        's_napoleontw': '',
        'narutorpg3ds': 'bBPaXO',
        'narutoex4wii': 't1galt',
        'narutor3euwii': '64ncJ9',
        'narutorev3wii': '2bLXrL',
        'Narutonin2ds': 'c0DRrn',
        'naruto5ds': 'TZlbyZ',
        'nascar5': 'j3Do2f',
        'nrs2003': 'f3RdU7',
        'nsr0405': 'Q6vu91',
        'nthunder2003': 'Ld5C9w',
        'nthunder2004': 'g3J7sp',
        'nthunder2004d': 'g3J7sp',
        'NatGeoLostCityofZ': '',
        'na2rowpcam': 'mxw6bp',
        'na2rowpc': 'mxw6bp',
        'na2runpcam': 'eDCC2L',
        'na2runpc': 'eDCC2L',
        'NationRed': '',
        'NationalGeographic': '',
        'NN2Simple': 'FTmNOH',
        '688IHunterKiller': '',
        'FleetCommand': '',
        'subcommand': 'iPwZGe',
        'nba2k10': '',
        'nba2k10wii': 'qWpDTI',
        'NBA2K11': '',
        'nba2k11wiiam': 'LX3m8L',
        'nba2k11wii': 'LX3m8L',
        'bllrs2004ps2': 't3w6k8',
        'bllrs2005ps2d': '4StbWm',
        'bllrs2005ps2': '4StbWm',
        'bllrs2004ps2d': 't3w6k8',
        'bllrs2004pal': 't3w6k8',
        'ballers3ps3am': 'lu5P4Q',
        'ballers3ps3d': 'lu5P4Q',
        'ballers3ps3': 'lu5P4Q',
        'necrovision': 'sgcRRY',
        'necrovisionpcam': 'Rn3Ptn',
        'necrovisionpdam': 'Rn3Ptn',
        'necrovisionpcd': 'Rn3Ptn',
        'necrovisionpc': 'Rn3Ptn',
        'necrovisionpd': 'Rn3Ptn',
        'necrolcpcam': 'JFKyCM',
        'necrolcpcd': 'JFKyCM',
        'necrolcpc': 'JFKyCM',
        'nfsmwucoverds': 'qxwQMf',
        'nfsprostreet': '',
        'nfsprostds': '1Xq6Ru',
        'nfsshift': '',
        'NFSShift2': '',
        'nfsunder': '',
        'NFSWorld': '',
        'NFSHotPursuit': '',
        'nfs6': 'ZIr1wX',
        'neighborsfhov': '',
        'neighborsfhov2': '',
        'celtickingspu': 'WxaKUc',
        'neopetspapcam': 'MOEXUs',
        'neopetspapcd': 'MOEXUs',
        'neopetspapc': 'MOEXUs',
        'nerfarena': 'zEh7ir',
        'netathlon': 'nYALJv',
        'netathlon2': 'RW88dv',
        'nwn': 'ZIq1wW',
        'nwnmac': 'Adv39k',
        'nwn2': 'wstKNe',
        'nwn2macam': 'm8NeTP',
        'nwn2mac': 'm8NeTP',
        'nwn2MaskOfTheBetra': '',
        'nwn2MysteriesofWes': '',
        'nwn2StormOfZehir': '',
        'nwnlinux': 'Adv39k',
        'nwnxp2': 'ZIq1wW',
        'nwnxp1': 'ZIq1wW',
        '_news': 'BADBAD',
        'blitz2004ps2': 'w3Rk7F',
        'blitz2004ps2b': 'y3G9dJ',
        'blitz2004ps2e': 't3Fg7C',
        'nhl2009': '',
        'nhl2k10wii': 'UzhSDM',
        'nhl2k11wiiam': 'iBcCbU',
        'nhl2k11wii': 'iBcCbU',
        'hitz2004ps2': 't3E8Fc',
        'nightatthemuseum2': '',
        'NightOfTheScarecro': '',
        'nights2wii': 'Wo9FKJ',
        'NightSky': '',
        'nikopold2d': '',
        'ninjablade': '',
        'ninjagaidendsds': '',
        'ninjagaidends': '4VMtoU',
        'ninTest/': 'EdD7Ve',
        'ninTest/am': 'EdD7Ve',
        'ninTest0': 'EdD7Ve',
        'ninTest0am': 'EdD7Ve',
        'ninTest9': 'EdD7Ve',
        'ninTest9am': 'EdD7Ve',
        'ninTest': '',
        'ninTest:': 'EdD7Ve',
        'ninTest:am': 'EdD7Ve',
        'ninTest;': 'EdD7Ve',
        'ninTest;am': 'EdD7Ve',
        'ninTest<': 'EdD7Ve',
        'ninTest<am': 'EdD7Ve',
        'ninTest=': 'EdD7Ve',
        'ninTest=am': 'EdD7Ve',
        'ninTest>': 'EdD7Ve',
        'ninTest>am': 'EdD7Ve',
        'ninTest?': 'EdD7Ve',
        'ninTest?am': 'EdD7Ve',
        'ninTest@': 'EdD7Ve',
        'ninTest@am': 'EdD7Ve',
        'ninTest-': 'EdD7Ve',
        'ninTest-am': 'EdD7Ve',
        'ninTest.': 'EdD7Ve',
        'ninTest.am': 'EdD7Ve',
        'ninTest1': 'EdD7Ve',
        'ninTest1am': 'EdD7Ve',
        'ninTest2': 'EdD7Ve',
        'ninTest2am': 'EdD7Ve',
        'ninTest3': 'EdD7Ve',
        'ninTest3am': 'EdD7Ve',
        'ninTest4': 'EdD7Ve',
        'ninTest4am': 'EdD7Ve',
        'ninTest5': 'EdD7Ve',
        'ninTest5am': 'EdD7Ve',
        'ninTest6': 'EdD7Ve',
        'ninTest6am': 'EdD7Ve',
        'ninTest7': 'EdD7Ve',
        'ninTest7am': 'EdD7Ve',
        'ninTest8': 'EdD7Ve',
        'ninTest8am': 'EdD7Ve',
        'nindev': 'EdD7Ve',
        'ninsake': 'TpSP5q',
        'nitrofamily': 't3Jw2c',
        'nitrosample': 'abcdef',
        'nitrobikeps2am': 'ApD3DN',
        'nitrobikeps2': 'ApD3DN',
        'nitrobikewii': 'viBXma',
        'nomansland': 'DLziQw',
        'nolf': 'Jn3Ab4',
        'nolf2': 'g3Fo6x',
        'nolf2d': 'dHg7w3',
        'noahprods': 'aP8x4A',
        'nobuyabou2ds': 'izfHO0',
        'nobunagapktds': 't8SaPD',
        'noitulove2devoluti': '',
        'nostradamustlpd2d': '',
        'Nushizurids': 'nKShDp',
        'nvchess': 'YDXBOF',
        'NyxQuestKindredSpi': '',
        'orb': 'Ykd2D3',
        'orbb': 'Ykd2D3',
        'oasis': '',
        'obiwon': 'UnEhYr',
        'Obulis': '',
        'oceanexpress': '',
        'octoEUwii': 'vRdiaE',
        'OddworldExoddus': '',
        'OddworldOddysee': '',
        'OddworldMunchsOddy': '',
        'OddworldStrangersW': '',
        'officers': '',
        'officersgwupc': 'xSK6e5',
        'officersgwupcam': 'xSK6e5',
        'oishiids': 'mpmTyO',
        'okirakuwii': 'LdIyFm',
        'otrspode1d2d': '',
        'omfbattle': 'Abm93d',
        'omfbattleb': 'Abm93d',
        'omfbattlecp': 'Abm93d',
        'omfbattled': 'Abm93d',
        'onslaughtpc': '8pLvHm',
        'onslaughtpcam': '8pLvHm',
        'onslaughtpcd': '8pLvHm',
        'openseasonds': 'MpxbPX',
        'opblitz': 'gOlcku',
        'blockade': '3sAJtI',
        'ofdragris': '',
        'ofdragrisd2d': '',
        'opflash': 'h28Doi',
        'opflashd': 'DV24o2',
        'OperationFlashpoin': '',
        'opflashr': 'Y3k7x1',
        'opmatriarchyd2d': '',
        'steeltide': 'zgsDV2',
        'opfor': 'YDYBNE',
        'orderofwarpcam': 'P8pcV7',
        'orderofwarpcd': 'P8pcV7',
        'orderofwarpc': 'P8pcV7',
        'originalwar': 'CV34p2',
        'owar': 'xS6aii',
        'osmos': '',
        'othellowii': 'uV8aBd',
        'othellods': 'VrRUK1',
        'otonazenshuds': 'nWsT7z',
        'olg2ps2': 'Yb3pP2',
        'outlawsdem': 'k37G3M',
        'oltps2': 'cH92pQ',
        'olvps2': '7w2pP3',
        'outlaws': 'TKuE2P',
        'outpostkaloki': '',
        'outrun06': '',
        'overload': '',
        'overlord2': '',
        'OverlordRaisingHel': '',
        'overturnwii': 'GLXJR8',
        'PacManPizzaParlor': '',
        'Pac_man': '',
        'pachgundamwii': 'w101rF',
        'pacfight': '',
        'pacstorm': '',
        'PacificStormAllies': '',
        'painkiller': 'k7F4d2',
        'PainkillerBlackEdi': '',
        'painkillerd': 'k7F4d2',
        'painkillert': 'k7F4d2',
        'painkillerod': 'zW4TsZ',
        'poverdose': '',
        'pkodgermanam': 'wK54dt',
        'pkodgermand': 'wK54dt',
        'pkodgerman': 'wK54dt',
        'painkillerodam': 'zW4TsZ',
        'painkillerodd': 'zW4TsZ',
        'painkilleroddam': 'zW4TsZ',
        'PainkillerRedempti': '',
        'painkillerr': '',
        'painkresurrpcam': 'tmQ4wN',
        'painkresurrpcd': 'tmQ4wN',
        'painkresurrpc': 'tmQ4wN',
        'paintball': 'kCVbAZ',
        'pandeponds': 'y0zg9C',
        'pangmagmichds': 'ccXnxb',
        'panzergen2': 'DLiPwZ',
        'ptacticsds': 'Wcs0GP',
        'parabellumpcam': 'CXabGK',
        'parabellumps3am': 'CXabGK',
        'parabellumpcdam': 'CXabGK',
        'parabellumpcd': 'CXabGK',
        'parabellumpc': 'CXabGK',
        'parabellumps3': 'CXabGK',
        'pbellumr1': 'CXabGK',
        'pbellumr2': 'CXabGK',
        'pbellumr3': 'CXabGK',
        'ParadiseBeach': '',
        'ParadiseBeach2Arou': '',
        'paradisecity': 'TCD6mz',
        'paraworld': 'EUZpQF',
        'paraworldam': 'EUZpQF',
        'paraworldd': 'EUZpQF',
        'pariahpc': 'D3Kcm4',
        'pariahpcd': 'D3Kcm4',
        'ironstrategy': 'ZDYBNF',
        'PartyDown': '',
        'patchtest': 'BlIpIG',
        'pathologic': '',
        'Patrician4': '',
        'patrician3': '',
        'PatricianIV_RoaD': '',
        'PawsandClawsPamper': '',
        'pba2001': 'Kbay43',
        'pbrootcd2d': '',
        'Pe2DiveBomber': '',
        'peacemaker': '',
        'PeggleDeluxe': '',
        'PeggleNights': '',
        'penginhimidsam': 'cAA9Kl',
        'penginhimids': 'cAA9Kl',
        'penubrabp': '',
        'PenumbraCollection': '',
        'PenumbraColBlackP': '',
        'PenumbraColRequiem': '',
        'POvertureEpisode1': '',
        'PenumbraRequiem': '',
        'peoplesgen': 'el1q7z',
        'perimeter': 'FRYbdA',
        'Perimeter2NewEarth': '',
        'perimeterd': 'FRYbdA',
        'pethoteltycoon': '',
        'petpalsanimaldocto': '',
        'petpalsnewleashonl': '',
        'PetShopHop': '',
        'petz09ds': 'kLg8PL',
        'phoenix': 'GknAbg',
        'phylon': 'rbKTOq',
        'phybaltraiwii': 'nb1GZR',
        'picrossds': '5TLWnF',
        'picrossEUds': '1rAhgD',
        'pictureka!mmd2d': '',
        'PinballYeah': '',
        'PipeMania': '',
        'phunter': '',
        'PiratePoppers': '',
        'PiratesOfBlackCove': '',
        'piratesburn': '',
        'potbs': 'GIMHzf',
        'potco': 'wnYrOe',
        'PiratesOTCaribbean': '',
        'pitcrewwii': 'M2FFnb',
        'pizzadeliciozo': '',
        'plainsight': '',
        'PlanItGreen': '',
        'planecrazy': 'p5jGh6',
        'pbfqm': 'g3R2ii',
        'pbfqm2': 'P7RTY8',
        'pbfqmv': '9wk3Lo',
        'planetside': 'yQzrrQ',
        'PlantTycoon': '',
        'plantasia': '',
        'plantsvzombies': '',
        'PlantsvsZombiesGOT': '',
        'playboym': '',
        'PlayboyMansionPP': '',
        'playgrounddsam': 'o6JWLk',
        'playgroundds': 'o6JWLk',
        'PlayPets101BunnyPe': '',
        'PlayPets101DinoPet': '',
        'PlayPets101KittyPe': '',
        'PlayPets101PonyPet': '',
        'PlayPets101PuppyPe': '',
        'plunderpcam': 'NmLqNN',
        'plunderps3am': 'RbMD9p',
        'plunderps3d': 'RbMD9p',
        'plunderpcd': 'NmLqNN',
        'pogo': '',
        'pokebattlewii': 'TzRgSc',
        'pokemondpds': '1vTlwb',
        'pokedngnwii': 'AKikuw',
        'pokedungeonds': 'SVbm3x',
        'pokemonplatds': 'IIup73',
        'pokerangerds': 'v4yMCT',
        'PokerPop': '',
        'PokerSimulator': '',
        'pquestcol': '',
        'por2': '9agW5H',
        'poolshark2pc': 'teH26Z',
        'poolshark2ps2': 'teH26Z',
        'popwii': 'cQbQkV',
        'populoustb': 'qik37G',
        'PortRoyale2': '',
        's_PostApocalypticM': '',
        'postal2': 'yw3R9c',
        'postal2d': 'yw3R9c',
        'POSTAL2ApocalypseW': '',
        'POSTAL2SharethePai': '',
        'POSTALClassicandUn': '',
        'postpetds': '126D8H',
        'potionbar': '',
        'PowaPPocketds': 'Mz5dau',
        'PowerOfDefense': '',
        'powerkoushds': 'nTHkC7',
        'koshien2ds': 'UKdPFf',
        'ppkpocket11ds': 'cstLhz',
        'propocket12ds': '98gFV2',
        'powprokundsiam': 'ntDCsp',
        'powprokundsi': 'ntDCsp',
        'powerpinconds': 'za0kET',
        'powerslide': 'nx6I2v',
        'PoxNora': '',
        'praetorians': 'm31zdx',
        'praetoriansd': 'EX3rAJ',
        'prey': 'znghVS',
        'preyd': '75rDsD',
        'preystarsds': 'NrSO9m',
        'PrideOfNations': '',
        'princeofpersia': '',
        'popsot': '',
        'poptheforgottensan': '',
        'popttt': '',
        'popww': '',
        'prismgs': '3Zxgne',
        'prismgsd': '3Zxgne',
        'PrisonTycoon3Lockd': '',
        'pristyc4': '',
        'privateer': 'Yh3o2d',
        'bangler2003': 'hCTCQM',
        'ProCyclingManagerS': '',
        'ProCManager2009': '',
        'ProCManager2010': '',
        'evosoccer08ds': 'fI2bz5',
        'evosoc08EUwii': 'de5f31',
        'evosoc08USds': 'nV87bl',
        'evosoc08USwii': '94lupD',
        'famista09ds': 'OkJhLi',
        'proyakyuds': 'Nv5Em6',
        'pssake': 'H8s0Pw',
        'plandmajinds': 'BThDbL',
        'SF3XboxPSrv': 'HtxcaM',
        'SF3PS3PSrvam': 'HtxcaM',
        'SF3PS3PSrv': 'HtxcaM',
        'SF3XboxPSrvam': 'HtxcaM',
        'SF3PS3PSrvmb': 'HtxcaM',
        'SF3XboxPSrvmb': 'HtxcaM',
        'projectaftermath': '',
        'projecteden': 'TORp5k',
        'pnomads': 'FexS6a',
        'protocolwii': 'Hd4g3T',
        'prototype': '',
        'psiops': '',
        'psychonauts': '',
        'psyintdevpcam': 'u6vgFK',
        'psyintdevpcd': 'u6vgFK',
        'psyintdevpc': 'u6vgFK',
        'ptboatskots': '',
        'pubdartswii': 'nzFWQs',
        'puffinsds': 'ckiZ8C',
        'punchoutwii': 'yJz8h0',
        'pured2d': '',
        'puyobomberds': 'rU1vT5',
        'puyopuyods': '9bx1UP',
        'puyopuyo7ds': '1SeVl7',
        'puyopuyo7wii': 'h9HtSg',
        'puzzlechronicles': '',
        'PuzzleExpress': '',
        'puzzshangwii': '33NTu6',
        'puzzlekingdoms': '',
        'ppirates': 'VGFzVf',
        'PuzzlePirates': '',
        's_PuzzleQuest2': '',
        'puzzleqt2ds': 'hMqc5z',
        'pqgalactrix': '',
        'pqcotwd2d': '',
        'puzquestds': 'nW1e6h',
        'Puzzlegeddon': '',
        'puzzlernumds': 'JpBkl8',
        'wg_puzzles': '',
        'Pyroblazer': '',
        'qlione': 'pNClNp',
        'quake3': 'paYVJ7',
        'q3tafull': 'Ah3mb4',
        'q3tademo': 'ek2p7z',
        'quake4': 'ZuZ3hq',
        'quake2': 'rtW0xg',
        'quake1': '7W7yZz',
        'quakeworld': 'FU6Vqn',
        'qsolace': 'MjcwlP',
        'quantz': '',
        'quizmagicds': 'zi1Kob',
        'quizmagic2ds': 'JGqTW6',
        's_ruse': '',
        'Rabgohomewii': 'sngh8x',
        'race07': '',
        'racedriverds': 'AJQu6F',
        'racedriver2': 'UEzIlg',
        'racedriver2ps2': 'n5oS9f',
        'racedriver2d': 'M29dF4',
        'racedriver3pcd': 'BPAfNv',
        'rdriver3ps2d': 'BPAfNv',
        'racedriver3pc': 'BPAfNv',
        'rdriver3ps2': 'BPAfNv',
        'racedriverd': 'P4f3Hw',
        'gridretail': '',
        'rdgridds': '81TpiD',
        'racecaterham': '',
        'rachelwood': 'L2muET',
        'radiohitzwii': 'NzBSQr',
        'ragunonlineds': 'DBDrfl',
        'ragonlineKRds': 'fhZRmu',
        'ragonlinenads': 'k6p7se',
        'railty2': 'T8nM3z',
        'rrt2scnd': 'fZDYBN',
        'railty3': 'w4D2Ha',
        'railsam': 'sFcq99',
        'railsamd': 'GjuMct',
        's_Railworks2': '',
        'RainbloodTownofDea': '',
        'rainbowislwii': 'TpzO6m',
        'rain6lockd': '',
        'rainbowsixv': 'GUePbj',
        'rainbowsixv2': '',
        'rscovertops': 'yK2A0x',
        'ravenshield': 'csFbq9',
        'roguespear': 'kqeEcz',
        'roguespeard': 'S6ajhP',
        'rallychampx': 'h6nLfY',
        'rally': 'xdNbQZ',
        'rallytrophy': 'CSCQMI',
        'RareTreasuresDTC': '',
        'ravenshieldas': 'vMJRUd',
        'ravensquad': '',
        'raycatcher': '',
        'rayravrab': '',
        'raymanrr2wii': 'Dd8tS2',
        'raymanRR3wii': 'QDgvIN',
        'Razor2': '',
        'revolt': 'fa5lhE',
        'rfts': 'jiPV0u',
        'rnconsole': 'Jba3n1',
        'realwar': '78dvRT',
        'realwarrs': '8cvSTO',
        'realwarrsd': '5jAGh7',
        'realwarfare1242d2d': '',
        'ras': '0r5UN9',
        'redalert2': 'ajhOV0',
        'redalert2exp': 'eRW78c',
        'redalert3pcam': 'uBZwpf',
        'redalert3pccdam': 'uBZwpf',
        'redalert3ps3am': 'uBZwpf',
        'redalert3pcbam': 'uBZwpf',
        'redalert3pcd': 'uBZwpf',
        'redalert3pcdam': 'uBZwpf',
        'redalert3pcmb': 'uBZwpf',
        'redalert3pccd': 'uBZwpf',
        'redalert3ps3': 'uBZwpf',
        'redalert3pcbmb': 'uBZwpf',
        'redalert3demo': '',
        'redalert3pcdmb': 'uBZwpf',
        'ra3uprising': '',
        'redbaronww1': 'aMETX7',
        'redbaronps3am': 'aMETX7',
        'redbaronps3': 'aMETX7',
        'rdr2ps3am': '5aL4Db',
        'rdr2x360am': 'H1Dgd3',
        'rdr2ps3': '5aL4Db',
        'rdr2x360': 'H1Dgd3',
        'redfaction': '',
        'redfaction2': '',
        'rfgrlaonlive': 'DhQP9t',
        'rfgrlaonliveam': 'DhQP9t',
        'redfactionwii': 'OyLhJI',
        's_RedFactionArmage': '',
        'redfactguer': '',
        'redorchestra': '6md8c4',
        'redsteel2wii': 'eAmAH0',
        'redline': 'OFek2p',
        'redlinenet': 'OFek2p',
        'redneckracers': '',
        'rdpoker': 'GjuMct',
        'reichpcam': 'bWwGZn',
        'reichps3am': 'bWwGZn',
        'reichpc': 'bWwGZn',
        'reichps3': 'bWwGZn',
        'ReignConflictOfNat': '',
        'Reload': '',
        'reloadpc': 'cy4nky',
        'reloadpcam': 'cy4nky',
        'reloadtdwiiam': '0Pto9s',
        'reloadtdwii': '0Pto9s',
        'remedy': '',
        'RSSHuntingAfrica': '',
        'renegadebf': 'Rt7W9x',
        'republictherevolut': '',
        'ReservoirDogs': '',
        'resevil5': '',
        'resevildrkwii': 'qBhaV0',
        'rempire': '',
        'rempire2': '',
        'rtcw': 'Gj3aV2',
        'rtcwtest': '78dvST',
        'returntomysterious': '',
        'RevengeOfTheTitans': '',
        'revolution': 'G1h3m2',
        'RevolutionUnderSie': '',
        'rhem3d2d': '',
        'RHEM4': '',
        'RideemLow': '',
        'RIFT': '',
        'RighteousKill': '',
        'righteouskill2rotp': '',
        'rafcivatwar': 'h98Sqa',
        'rfcivaw': '',
        'rafcivatwaram': 'h98Sqa',
        'rafcivatwart': 'h98Sqa',
        'rafcivatwartam': 'h98Sqa',
        'riseofflight': '',
        'rof': 't5LqW4',
        'rofam': 't5LqW4',
        'riseofnations': 'H3kC6s',
        'riseofnationsam': 'H3kC6s',
        'ronb': 'H3kC6s',
        'ronbam': 'H3kC6s',
        'rontpam': 'H3kC6s',
        'rontp': 'H3kC6s',
        'riseofprussia': '',
        'riseofprussiademo': '',
        'rotargonauts': '',
        'risen': '',
        'risingeaglepc': '9cy8vc',
        'risingeagleg': 'qVcJOg',
        'riskingdoms': 'K3x9vc',
        'riskingdomsam': 'K3x9vc',
        'riskingdomsd': 'K3x9vc',
        'riskps2dis': 'Hg3u2X',
        'risk': 'nx6I2v',
        'risk2': 'xboeRW',
        'risksa': '',
        'RKMvalleyds': '3lwaZW',
        'roadwars': 'ORp5kG',
        'robolypsewii': 'qy0bIP',
        'rbeaverdefwii': '6k1gxH',
        'robotarena2': 'h4Yc9D',
        'robotech2': 'w3D2Yb',
        'rock': 'HnVZ1u',
        'ra2': '9z3312',
        'ra3': 'JnEfae',
        'rockmanBSDds': 'bNM3ah',
        'rockmanwds': 'sdJvVk',
        'rockstardev': '1a8bBi',
        'rockstardevam': '1a8bBi',
        'rockstarsclub': '2MJPhH',
        'rockstarsclubam': '2MJPhH',
        'rmth3': 'EvBDAc',
        'rogerwilco': 'rW17Ko',
        'rsblackthorn': 'Gh2W6n',
        'rsblackthornd': 'BLJvUh',
        'rsurbanops': '4nHpA3',
        'rtrooper': '',
        'rtrooperpcam': 'jK7L92',
        'rtrooperpc': 'jK7L92',
        'rtrooperps2': 'jK7L92',
        'roguewarpcam': 'ey8w3N',
        'roguewarps3am': 'bHtwt6',
        'roguewarpcd': 'ey8w3N',
        'roguewarps3d': 'bHtwt6',
        'roguewarpc': 'ey8w3N',
        'roguewarps3': 'bHtwt6',
        'rollcallps2': '',
        'rctycoon': '',
        'rctycoon2': '',
        'RollercoasterTycoo': '',
        'RollerCTycoon2Wack': '',
        'RomanceOfRome': '',
        'rof3kingXI': '',
        'rometw': 's8L3v0',
        'Roogoo': '',
        'rooms': '',
        'RoyalEnvoy': '',
        'g_rpg': '',
        'rpgtkooldsi': 'NaGK7x',
        'rtlwsportswii': 'flKPhR',
        'rtlwspor11wiiam': 'lGM9Xg',
        'rtlwspor11wii': 'lGM9Xg',
        'rubikguidewii': 'nTLw4A',
        'rulesotg': 'iQxZGe',
        'runawayara': '',
        'RunawayATwistofFat': '',
        'RunawayTDoTT': '',
        'rune': 'V5Hm41',
        'runedemo': 'V5Hm41',
        'runefactoryds': 'dBOUMT',
        'rfactory2ds': 'lo8Vq8',
        'rfactory3ds': 'JpHDcA',
        'rfactoryEUds': 'CK8ylc',
        'rfactoryKRds': 'dBJ0km',
        'runefantasyds': '58Ae2N',
        'rfberlin': '3vhvcH',
        'rftbomb': 'xpoRNK',
        'ryantest': 'RakTQT',
        'ryantestam': 'RakTQT',
        'rman2blkredds': 'c2ZOsn',
        'scsdw': 'PohZyA',
        'scsdwd': 'agGBzE',
        'scsdws': 'hmhQeA',
        'STALKERcop': '',
        'stalkersc': 't9Fj3M',
        'stalkercs': 'PQ7tFU',
        'swine': 'SwK4J2',
        's_hl2dm': 'FqmlZJ',
        'saadtest': '1a2B3c',
        'saadtestam': '1a2B3c',
        'saboteur': '',
        'sacred2': '',
        'sacredplus': '',
        'sacrifice': 'sCV34o',
        'safecracker': '',
        'sagad2d': '',
        'SailSimulator2010': '',
        'SailSimulator5Delu': '',
        'srow2pcam': 'odvimE',
        'srow2ps3dam': 'iWKxFZ',
        'srow2xb360am': 'XfwkNR',
        'srow2pc': 'odvimE',
        'srow2ps3': 'iWKxFZ',
        'srow2ps3d': 'iWKxFZ',
        'srow2xb360': 'XfwkNR',
        'srow2ps3am': 'iWKxFZ',
        'srow2digital': '',
        'sakatsukuds': 'OwGy5R',
        'sakwcha2010ds': 'a92bdC',
        'sakuraTDDds': 'Kw2K7t',
        'samanthaswiftandth': '',
        'samanthaswiftandtm': '',
        'sdamigowii': 'gLq68v',
        'SampAppTest': '38u7Te',
        'SampAppTestam': '38u7Te',
        's_Sanctum': '',
        'sandbags': 'wXEX3r',
        'taisends': 'SNyrMR',
        'sangotends': 'yln2Zs',
        'sanity': '7AeTyu',
        'sanitydemo': '7AeTyu',
        'sanitybeta': '7AeTyu',
        'saspcam': 'fewePZ',
        'saspc': 'fewePZ',
        'saturdayns': 'psZhzd',
        'saturdaynsd': 'psZhzd',
        'saw': '',
        'sawpcam': 'ik9k6R',
        'sawps3am': 'HtiBX3',
        'sawpcd': 'ik9k6R',
        'sawps3d': 'HtiBX3',
        'sawpc': 'ik9k6R',
        'sawps3': 'HtiBX3',
        'sbkUSpcam': '6Q9XqQ',
        'sbkUSps3am': 'q8Bupt',
        'sbkUSpcd': '6Q9XqQ',
        'sbkUSps3d': 'q8Bupt',
        'sbkUSpc': '6Q9XqQ',
        'sbkUSps3': 'q8Bupt',
        'sbk08pcam': 'Xhg4AV',
        'sbk08ps3am': 'Xhg4AV',
        'sbk08pcd': 'Xhg4AV',
        'sbk08pc': 'Xhg4AV',
        'sbk08ps3': 'Xhg4AV',
        'sbk09pcam': 'pQAyX6',
        'sbk09ps3am': 'hxVmss',
        'sbk09usps3am': 'PGo4HU',
        'sbk09usps3d': 'PGo4HU',
        'sbk09ps3': 'hxVmss',
        'sbk09usps3': 'PGo4HU',
        'sbk09pc': 'pQAyX6',
        'SBK2011': '',
        'SBKXSuperbikeWorld': '',
        'sbkxpcam': 'P8ThQm',
        'sbkxps3am': 'BCvlzO',
        'sbkxpcdemoam': '2MMChW',
        'sbkxpcdemo': '2MMChW',
        'sbkxpcd': 'P8ThQm',
        'sbkxps3d': 'BCvlzO',
        'sbkxpc': 'P8ThQm',
        'sbkxps3': 'BCvlzO',
        'sbkxps3demoam': 'ESDiC8',
        'sbkxps3demo': 'ESDiC8',
        'sbkxusps3': 'pvWq9y',
        'sbkxusps3am': 'pvWq9y',
        'Scarface': '',
        'scotttest': 'RPzJL7',
        'scotttestam': 'RPzJL7',
        'scrabble3': '4o2vPk',
        'scrabbledel': 'mZfoBF',
        'scrabbleo': 't2Dfj8',
        'scrabble': 'Pz3Vea',
        'scratchdjpcam': 'yE9lKE',
        'scratchdjpc': 'yE9lKE',
        'ScratchesDirectors': '',
        'scribnautsds': 'd4dJKr',
        'scribnauteuds': '5aGp82',
        'scribnautjpds': 'NKW4G3',
        'scribnaut2dsam': '17kV2E',
        'scribnaut2pcam': '6P7Qdd',
        'scribnaut2ds': '17kV2E',
        'scrbnateu2ds': 'sHp6mA',
        'scrbnatot2ds': 'FypuGp',
        'scribnaut2pc': '6P7Qdd',
        'scribnaut2wii': 'bnh1ku',
        'SeaJourney': '',
        'seafarmwii': 'tNQRr7',
        'secondlife': 'wpIwVb',
        'SecretFiles2Purita': '',
        'section8': '',
        'section8pcam': '2UMehS',
        'section8ps3am': 'RGZq4i',
        'section8x360am': 'fB8QDw',
        'section8pcd': '2UMehS',
        'section8ps3d': 'RGZq4i',
        'section8x360d': 'fB8QDw',
        'section8pc': '2UMehS',
        'section8ps3': 'RGZq4i',
        'section8x360': 'fB8QDw',
        'section8pcbam': '2UMehS',
        'section8pcbd': '2UMehS',
        'section8pcb': '2UMehS',
        'Section8Prejudice': '',
        'SEGABassFishing': '',
        'SGCCollection3': '',
        'SGCCollection4': '',
        'SGCAlexKidd': '',
        'SGCAlienSoldier': '',
        'SGCAlienStorm': '',
        'SGCAlteredBeast': '',
        'SGCBioHazardBattle': '',
        'SGCBonanzaBros': '',
        'SGCColumns': '',
        'SGCColumns3': '',
        'SGCComixZone': '',
        'SGCCrackDown': '',
        'SGCDecapAttack': '',
        'SGCDrRobotnikMeanB': '',
        'SGCEcco2': '',
        'SGCEccoJr': '',
        'SGCEccoDolphin': '',
        'SGCESwat': '',
        'SGCEternalChampion': '',
        'SGCFatalLabyrinth': '',
        'SGCFlicky': '',
        'SGCGainGround': '',
        'SGCGalaxyForceII': '',
        'SGCGoldenAxe': '',
        'SGCGoldenAxe2': '',
        'SGCGunstarHeroes': '',
        'SGCKidChameleon': '',
        'SGCLightCrusader': '',
        'SGCRistar': '',
        'SGCShadowDancer': '',
        'SGCShiningForce': '',
        'SGCShiningForce2': '',
        'SGCShiningInTheDar': '',
        'SGCShinobi3': '',
        'SGCSonic3DBlast': '',
        'SGCSonicSpinball': '',
        'SGC_Sonic': '',
        'SGCSonic2': '',
        'SGCSpaceHarrier2': '',
        'SGCStreetsOfRage': '',
        'SGCStreetsOfRage2': '',
        'SGCSuperThunderBla': '',
        'SGCSwordOfVermilio': '',
        'SGCVectorman': '',
        'SGCVirtuaFighter2': '',
        'SGCWonderboy3': '',
        'SEGARally': '',
        'srally2dmo': 'kD072v',
        'segarally2': 'ajiPV0',
        'segaralrev': '',
        'segaracingds': 'HQKW0J',
        'segaracingwii': '4ue8Ke',
        'segatennisps3': 'RvJsgM',
        'segatennisps3am': 'RvJsgM',
        'heroesmanads': '8lrZB5',
        'sekainodokods': 'cS9uS9',
        'sengo3wiijp': 'w2ZVnz',
        'sengo3wii': 'Esqv7G',
        'serioussamps2': 'yG3L9f',
        'serioussam2d': '8dA9mN',
        'serioussam2': '8dA9mN',
        'serioussamfdemo': '',
        'SeriousSamGold': '',
        's_SeriousSam1HD': '',
        's_SeriousSam2HD': '',
        'ssamdemo': 'Gn3a12',
        'serioussamse': 'AKbna4',
        'serioussamsed': 'AKbna4',
        'serioussam': 'AKbna4',
        'SpyNote': 'spynot',
        '7kingdoms': 'WEX3rA',
        'SFGSoccer': '',
        'scompany': 'EyzWAv',
        'shadowforce': 'A3p54Q',
        's_ShadowHarvest': '',
        'shadowgrounds': '',
        'ShadowgroundsSurvi': '',
        'swtakoronwii': 'xvf3KV',
        'shamanodysseytropi': '',
        'sharpshooter': '9gV5Hl',
        'ShatteredSuns': '',
        'shatteredunion': 't2Gx8g',
        'sunion': '',
        'ShaunWhiteSkateboa': '',
        'swsnow2wii': '2cPMrL',
        'swsnowboard': '',
        'shellshock2': '',
        'sherlockholmesvsjt': '',
        'chocotokids': 'yfVdWO',
        'shikagariwii': 'IrKIwG',
        'ShipSimulatorExtre': '',
        'ShipSimExtremesFer': '',
        'ShipSimExtremesSig': '',
        'shogiwii': 'AtQf1n',
        'shogo': 'MQMhRK',
        'shootantowii': 'nsgl14',
        'wg_sicktwisted': '',
        'santietam': 'zfsCV2',
        'civ4coljpam': '5wddmt',
        'civ4colpcam': '2yheDS',
        'civ4colpcd': '2yheDS',
        'civ4coljp': '5wddmt',
        'civ4colpc': '2yheDS',
        'civrevods': 'o3WUx2',
        'civrevoasiads': 'QXhNdz',
        's_CivilizationV': '',
        'smgettysbu': '3MHCZ8',
        'gettysburg': 'PwZFex',
        'sidmpirates': '',
        'sidmrailroads': '',
        'smrailroads': 'h32mq8',
        'smrailroadsjp': 'h32mq8',
        'smrailroadsjpam': 'h32mq8',
        'shillhome': '',
        'silenthillhomed2d': '',
        'silenthunter2': 'bnfRW8',
        'silenthunter5': '',
        'silenthunteriii': '',
        'shwop': '',
        'SHWPacificUBoatMis': '',
        'silverfall': '',
        'SimCity4Deluxe': '',
        'simcitywii': 'tLpVr1',
        'simcitysoc': '',
        'simcitysocd': '',
        'ssmahjongwii': 'r0AyOn',
        'wwkuzushiwii': '8EzbpJ',
        'simplejudowii': 't4wmAP',
        'thecombatwii': 'VM5pGy',
        'wwpuzzlewii': 'lWG4l1',
        'sin': 'Ij1uAB',
        'sinpunish2wii': 'B2Tcgk',
        'sinpun2NAwii': 'cVXGtt',
        'sinmac': '3Ka5BN',
        'singlesao': '',
        'singles2': '',
        'singles': '',
        'Singularity': '',
        'sinkingisland': '',
        'skateitds': 'eOpDft',
        'SlamItPinballBigSc': '',
        'slavezero': 'Xrv9zn',
        'slugfest06ps2': 'e8Cs3L',
        'slugfestps2': 'e8Cs3L',
        'svsr11ps3am': '8TMLdH',
        'svsr11x360am': '4q9ULG',
        'svsr11ps3d': '8TMLdH',
        'svsr11x360d': '4q9ULG',
        'svsr11ps3': '8TMLdH',
        'svsr11x360': '4q9ULG',
        'svsr11ps3devam': 'gSTArg',
        'svsr11x360devam': 'h5DZhP',
        'svsr11ps3dev': 'gSTArg',
        'svsr11x360dev': 'h5DZhP',
        'fbackgammon': 'Un3apK',
        'smugglersivdoomsda': '',
        'snackdsi': 'zrSxhe',
        'snapshotadventures': '',
        'sneeziesdswam': 'fl2idL',
        'sneeziesdsw': 'fl2idL',
        'sneezieswiiw': 'mIvWS5',
        'SniperElite': '',
        'sniperelpc': 'hP58dm',
        'sniperelps2': 'f3Tk3s',
        'SniperGhostWarrior': '',
        'snooker2003': 'ZIq1wX',
        'ufc2010iphoneam': 'v770LP',
        'soccerjamds': 'vTgXza',
        'SoldierFront': '',
        'sof': 'nJ0rZz',
        'sof2': 'F8vZed',
        'sof2demo': 'F8vZed',
        'sofpayback': '',
        'sofretail': 'iVn3a3',
        'soa': 'H3pD7m',
        'soad': 'K3e8cT',
        'soldiersww2': 'qdSxsJ',
        'solitairepop': '',
        'sonicallstarsracin': '',
        'sonic2010dsam': '63ckbN',
        'sonic2010wiiam': 'LhuHFv',
        'sonic2010ds': '63ckbN',
        'sonic2010wii': 'LhuHFv',
        'sonicadventuredx': '',
        'sonicbkwii': '1SWPIm',
        'sonicdlwii': 'DkJwkG',
        'sonicmegacoll': '',
        'sonriders2wii': 'm2F95I',
        'sonicrushads': 'so70kL',
        'sonicrkords': 'PrnrAp',
        'sonoatest': 'QkEwkn',
        'sonoatestam': 'QkEwkn',
        'southpark': 'yoI7mE',
        'spacechannel5part2': '',
        'spaceemp4d': '',
        'spaceempiresv': '',
        'spacegiraffe': '',
        'SpaceHack': '',
        'siextremeds': '69EvKG',
        'spaceremixds': 'Gs1FlI',
        'spinvgewii': 'qbD03S',
        'spacepodd': 'y3R2cD',
        'spbobbleds': 'OFA2iI',
        'spacequestcollecti': '',
        'spacerang1': '',
        'spacerang2': '',
        'spacesiege': '',
        'SpaceTrader': '',
        'spacewarcommander': '',
        'sballrevwii': 'emMKr3',
        'spacefighters': '',
        'SpaceforceCaptains': '',
        'SpaceForceRogueUni': '',
        'spacepod': '8cvRTO',
        'sparkle': '',
        'sparta2pc': 'JfHMee',
        'sparta2pcam': 'JfHMee',
        'sparta2pcd': 'JfHMee',
        'spartaawd': '09mczM',
        'spartan': 'GjuMct',
        'spartand': 'JdQvnt',
        'specops': 'adyYWv',
        'sforces': 'V4f02S',
        'specialforces': 'V4f02S',
        'spectro2wii': 'KgKm2x',
        'spellforce2swars': '',
        'Spellforce2DragonS': '',
        'spellforce': 'T8g3Ck',
        'spellforced': 'T8g3Ck',
        'spheratheinnerjour': '',
        'spiritofwanderingt': '',
        'SpiritsofMetropoli': '',
        'splintercell': '',
        'splintcellchaos': 'UgzOGy',
        'splintercellconvic': '',
        'spcell3coop': 'QdVGhj',
        'splitsecond': '',
        'SPOGSracing': '',
        'spoilsofwar': 'nZ2e4T',
        'spoilsofwaram': 'nZ2e4T',
        'spore': '',
        'sporeds': '5kq9Pf',
        'sporecc': '',
        'sporecctrial': '',
        'sporega': '',
        'sporearenads': 'mhxKle',
        'SporeCreepyCute': '',
        'sportballchallenge': '',
        'g_sport': '',
        'wg_sports': '',
        'springbonus': '',
        'springwidgets': 'tQfwTW',
        'springwidgetsam': 'tQfwTW',
        'spyvsspyps2': 'y3F7Gh',
        'TEST2': 'ZIr1wW',
        'StalinVMartians': '',
        'stalkercoppcam': 'LTU2z2',
        'stalkercoppcd': 'LTU2z2',
        'stalkercoppc': 'LTU2z2',
        'stalkercsam': 'PQ7tFU',
        'stalkercsd': 'PQ7tFU',
        'stalkerscd': 't9Fj3M',
        'stalkerscb': 't9Fj3M',
        'StarAssault': '',
        'StarDefender2': '',
        'StarDefender3': '',
        'starraiders': 'n76Cde',
        'StarRuler': '',
        'ssoldierrwii': '4w5JoH',
        'startrekmacam': 'nbxWDg',
        'kacademy': 'blGjuN',
        'startreklegacyd': '',
        'startrekobeta': '',
        'stef1': 'H28D2r',
        'armada2': 'N3a2mZ',
        'armada2beta': 'N3a2mZ',
        'armada2d': 'N3a2mZ',
        'bcommander': 'Nm3aZ9',
        'startrekmac': 'nbxWDg',
        'stefdemo': 'H28D2r',
        'stef2': 'MIr1wX',
        'startreklegacy': 'jMaWnz',
        'stlegacy': 'x9qTsK',
        'stnw': '8cvRTO',
        'swbfront2ps2': 'y3Hd2d',
        'swbfront2ps2j': 'hMO2d4',
        'swbfront2pc': 'hMO2d4',
        'swbfront2pcb': 'hMO2d4',
        'swbfront2pcd': 'hMO2d4',
        'swbfront3pcam': 'y3AEXC',
        'swbfront3pcCam': 'y3AEXC',
        'swbfront3pc': 'y3AEXC',
        'swbfront3ps3': 'y3AEXC',
        'swbfffpsp': 'fytErP',
        'swgbcc': 'RTORp4',
        'starwarsg': '',
        'swg': 'wICOeH',
        'jk2': '6ajhOV',
        'rebellion': 'TKuE2P',
        'swrcommando': 'y2s8Fh',
        'swrcommandod': 'vMPtab',
        'swrcommandoj': 'y2s8Fh',
        'swrcommandot': 'y2s8Fh',
        'starwarsstarfighte': '',
        'starwarstheclonewa': '',
        'swbfrontpc': 'y3Hd2d',
        'swbfrontps2p': 'y3Hd2d',
        'swbfrontps2': 'y3Hd2d',
        'swbfespspam': 'wLfbMH',
        'swbfespspd': 'wLfbMH',
        'swbfespsp': 'wLfbMH',
        'swbf3pspam': 'U8yNSx',
        'swbf3psp': 'U8yNSx',
        'swbfront3wii': 'ILAvd9',
        'starwarsdarkforces': '',
        'sweaw': '',
        'swempire': 't3K2dF',
        'swempiremacam': 'yTNCrM',
        'swempiream': 't3K2dF',
        'swempiremac': 'yTNCrM',
        'swempirexp1': '2WLab8',
        'sweawfoc': 'oFgIYB',
        'swgb': 'XEX3sA',
        'swgbd': 'AGh6nM',
        'StarWarsKOTOR': '',
        'StarWarsFU2': '',
        'starwarsfu': '',
        'StarWolves3': '',
        'starcraft': 'LfYDYB',
        'starcraft2wolbeta': '',
        'starcraftdmo': 'NFel1q',
        'starcraftexp': 'DKiPxZ',
        'Stardrone': '',
        'sfc': 'OV0tKn',
        'sfc2dv': 'k7tEH3',
        'sfcdemo': 'MZIr1w',
        'sfc2opdv': 'Gj2k7A',
        'sfc3': 'q3k7xH',
        'sfc3dv': 'Gi7C8s',
        'strfltcmd2': '8cvSTO',
        'strfltcmd2d': 'gW5Hm4',
        'sfc2op': 'EX3rAJ',
        'starfoxds': 'RR7XGH',
        'stargateresistance': '',
        'starlancer': 'qik37G',
        'slancerdc': 'UbNea2',
        'Starpoint_gemini': '',
        'Starscape': '',
        'starpballwii': 'oDN3tk',
        'starsiege': 'MZIq1w',
        'tribes': 'z83fc2',
        'startopia': 'r5UN9g',
        'starwrsfrc': 'p4jGh6',
        'statesmen': 'j8K3l0',
        'st_highscore': 'KS3p2Q',
        'stlprincessds': 'M1LDrU',
        'stlprinEUds': '7SnIvW',
        'stlprinKORds': 'fufc4q',
        's_cstrikecz': 'izVsOs',
        's_l4d': 'sPEFlr',
        's_watchmenein': '',
        'steelfury': '',
        'sptouzokuds': '4TxC2h',
        'Stormrise': '',
        'stormrisepcam': '6zyt4S',
        'stormrisepcd': '6zyt4S',
        'stormrisepc': '6zyt4S',
        'StrangeAttractors2': '',
        'StrangeCases': '',
        'stranglehold': '',
        'StrategicCommandET': '',
        'strategistwii': 'sP7muH',
        'g_strategy': '',
        'StreetCricket': '',
        'SF3RemixPS3am': 'illWHA',
        'SF3RemiXboxam': 'illWHA',
        'SF3RemixXboxam': 'Qvskuu',
        'SF3RemixPS3': 'illWHA',
        'SF3RemiXbox': 'illWHA',
        'SF3RemixXbox': 'Qvskuu',
        'SF3RemixPS3mb': 'illWHA',
        'SF3RemiXboxmb': 'illWHA',
        'streetfight4': '',
        'srsyndpc': 'A9Lkq1',
        'srsyndps2': 'A9Lkq1',
        'strifeshadow': '99mEKi',
        'strifeshadowd': '99mEKi',
        'strikefighters1': 'PwZFex',
        'strongbadscgfape1h': '',
        'strongbadscoolgame': '',
        'stronghold': 'QwZFex',
        'stronghold2': 'Lc83Jm',
        'strongholdcd': 'kAGh6n',
        'strongholdd': 'Rp5kGg',
        'strongholdl': 'LXkm3b',
        'StrongholdLegends': '',
        'strongholdce': 'UWmLcS',
        'strongholdc': 'fYDXBO',
        'stubbs': '',
        'slclothingdsam': 'uab2ul',
        'slclothingds': 'uab2ul',
        'stylelabds': 't8C5o0',
        'stitans': 'V5Hl31',
        'stitandemo': '9mDKzi',
        'subwayscramble': '',
        'suddenstrike': 'vUhCSB',
        'suddenstrike3': 'QNiEOS',
        'sudstrikegold': '',
        'suddenstrike2': 'Iq0wWE',
        'suddenstrikethelas': '',
        'suguri': '',
        'suitelifeds': 'q3Vrvd',
        'suitelifeEUds': '7AyK8d',
        'sukashikds': 'uk8Nda',
        'snightxds': 'sJZwCL',
        'SunAge': '',
        'suparobods': 'fJgMKq',
        'sbubpop': 'u2K9p5',
        'SuperGranny3': '',
        'SuperGranny4': '',
        'SuperGranny5': '',
        'SuperGranny6': '',
        'SuperMeatBoy': '',
        'smball2ipham': 'cqWhHg',
        'smball2iphd': 'cqWhHg',
        'smball2iph': 'cqWhHg',
        'superpower2': 'yYw43B',
        'srgakuendsam': 'cK86go',
        'srgakuends': 'cK86go',
        'Superslamhapc': 'g5idbh',
        'Superslamhapcam': 'g5idbh',
        'sshafricawiiam': '9FVEkx',
        'sshafricawii': '9FVEkx',
        'SuperStreetFighter': '',
        'SuperSwap!': '',
        'superchargedrobotv': '',
        'Supercow': '',
        'ballarenaps3d': 'W8bW5s',
        'bballarenaps3': 'W8bW5s',
        'bballarenaps3am': 'W8bW5s',
        'bbarenaEUps3': 'w6gFKv',
        'bbarenaEUps3am': 'w6gFKv',
        'bbarenaEUps3d': 'w6gFKv',
        'bbarenaJPNps3': 'CwiTIz',
        'bbarenaJPNps3am': 'CwiTIz',
        'bbarenaJPps3d': 'CwiTIz',
        'supv8ncusps3': 'CoGo8A',
        'supv8ncusps3am': 'CoGo8A',
        'SuperstarsV8NextCh': '',
        'superv8ncpcam': '4fKWpe',
        'superv8ncps3am': 'eLgtAp',
        'superv8ncpcd': '4fKWpe',
        'superv8ncps3d': 'eLgtAp',
        'superv8ncpc': '4fKWpe',
        'superv8ncps3': 'eLgtAp',
        'superv8pcam': 'GfQdlV',
        'superv8ps3am': '0vzJCz',
        'superv8usps3am': 'XUuoVH',
        'superv8pcd': 'GfQdlV',
        'superv8ps3d': '0vzJCz',
        'superv8usps3d': 'XUuoVH',
        'superv8pc': 'GfQdlV',
        'superv8ps3': '0vzJCz',
        'superv8usps3': 'XUuoVH',
        'superv8USpcam': 'MmEMpy',
        'superv8USpc': 'MmEMpy',
        'Supple1ThePromotio': '',
        'supcomm': 'UMEjry',
        'supcommb': 'pPhzeh',
        'supremecfa': '',
        'supcommdemo': 'plfinb',
        'supcomfabeta': 'xvuHpR',
        'supruler2010': 'cEuCxb',
        'SupremeRuler2020': '',
        'SupremeRuler2020Go': '',
        'SupremeRuler2020GC': '',
        'SupremeRulerColdWa': '',
        'surfsupds': 'vTS4gO',
        'surkatamarwii': 'TgGSxT',
        'survivor': 'H2du2',
        'survivorm': 'ZDXBOF',
        'swat4': 'tG3j8c',
        'swat4d': 'tG3j8c',
        'swat4xp1': 'tG3j8c',
        'swat4xp1_tmp': 'tG3j8c',
        'sweetopia': '',
        'swinedemo': 'SwK4J2',
        'switchball': '',
        'swordotnw': 'TkDsNE',
        'swordots': 'Z5gR9Z',
        'SwordotsCompleteC': '',
        'SwordotsUltimateC': '',
        'SwordotSArgosNaval': '',
        'swordotsbob': '',
        'syachi2ds': 'tXH2sN',
        'T-72': '',
        'tgmasterds': 'cHgbU3',
        'tablegamestds': 'Tk2MJq',
        'tgstadiumwii': 'w1pKbR',
        'tachyonthefringe': '',
        'tacticalops': 'uMctFb',
        'ut': 'Z5Nfb0',
        'takameijinwii': 'mgiHxl',
        'takeda': '6TN9gW',
        'twc': 'iPxZFe',
        'twc2': 'PYxfvt',
        'takoronKRwii': 'N5yalP',
        'takoronUSwii': '3hzhvW',
        'DragonMountainTheS': '',
        'talesofgrawii': 'WEp7vX',
        'TalesOfMonkeyEp1': '',
        'TalesOfMonkeyEp2': '',
        'TalesOfMonkeyEp3': '',
        'TalesOfMonkeyEp4': '',
        'TalesOfMonkeyEp5': '',
        'tankbattlesds': 'kJl1BG',
        'tankbeatEUds': 'Zc4TGh',
        'tankbeatds': 'LxDL6t',
        'tankbeatusds': '8UdAVm',
        'tankbeat2ds': 'aAbi3S',
        'tankuniversal': '',
        'tapraceam': 'xJRENu',
        'taprace': 'xJRENu',
        'tarlawdartwiiam': 'uu6z8k',
        'tarlawdartwii': 'uu6z8k',
        'TarrChronicles': '',
        'tastyplanet': '',
        'mogumonwii': 'yKTavT',
        'tataitemogwii': 'qND9s1',
        'tatvscapwii': 'eJMWz4',
        'tcghostreconaw': 'wLCSvJ',
        'teamfactor': 'RW78cv',
        's_tf2': 'AYcFzB',
        'tecmoblkickds': 'wdh5FE',
        'tcounterwii': 'HzKrFV',
        'tmntds': 'XZr5Nr',
        'tttexashold': '',
        'tenchuds': 'dfOICS',
        'tenchu4wii': 'z2VBXP',
        'terminator3d': 'y3Fq8v',
        'terminator3': 'y3Fq8v',
        'terminator': '',
        'terminus': 'z9uima',
        'TerroristT2': 'VSlLZK',
        'terrortkdwn2': 'VSlLZK',
        'terrortkdwn2am': 'KmqStH',
        'terrortkdwn2d': 'KmqStH',
        'test': 'Hku6Fd',
        'test071806': '7bxOC2',
        'gmtestcdam': 'HA6zkS',
        'gmtestam': 'HA6zkS',
        'gmtestcd': 'HA6zkS',
        'gmtest': 'HA6zkS',
        'TEST1': 'sCV34p',
        'testam': 'Hku6Fd',
        'tdriveu': '',
        'testdriveub': 'BeTTbz',
        'testdriveuak': 'k7r85E',
        'testdriveu': 'P5eUD8',
        'tdubeta': 'VsReXT',
        'testdriveud': 'xueb6u',
        'unavailable': 'j39DhU',
        'jefftest': 'f6Ylm1',
        'tempunavail': '9h1UHk',
        'tstgme': 'gkWzAc',
        'test1': 'ThAO8k',
        'tetrisds': 'JJlSi8',
        'tetriskords': 'KrMqE6',
        'tetpartywii': 'IZyry6',
        'tetrisdeluxds': 'LEtvxd',
        'tetrisworlds': 'D3pQe2',
        'tetrisppwii': 'p8a6oW',
        'botbattles': 'Admg3p',
        'texasholdwii': 'PEsKhp',
        'TG09PC': 'OGmgyP',
        'TG09PCam': 'OGmgyP',
        'TG09PS3': 'MwxZZo',
        'TG09PS3am': 'MwxZZo',
        'TG09360': '6KEbIA',
        'TG09360am': '6KEbIA',
        'TheAbbey': '',
        'theamazingbraintra': '',
        'TheApprenticeLosAn': '',
        'theasskickers': '',
        's_Ball': '',
        'BardsTale': '',
        'bfme': '',
        'bfme2': '',
        'boardgamesds': 'fFgBAt',
        'cardgamesds': '6iGEJe',
        'theblackwellconver': '',
        'blkuzushiwii': 'Fi1p8K',
        'cheetah3ds': '4aCzFd',
        'thechosenwellofsou': '',
        'coraoda': '',
        'theclub': '',
        'TheColorofMurderAC': '',
        'conduitwii': 'GTd9OX',
        'conduit2wii': 'io3vKi',
        'TheCryptics': '',
        'thedig': '',
        'dshard': 'g3D8Sc',
        'dshardam': 'g3D8Sc',
        'tes4obliviond': '',
        'tesoblivionkightso': '',
        'tesoblivionshivisl': '',
        'entente': 'LqrTlG',
        'TheEquestrian': '',
        'ffurtdriftps2am': 'Bso8LK',
        'ffurtdriftps2': 'Bso8LK',
        'thefirsttemplar': '',
        'g__network': '',
        'g__store': '',
        'godfatherii': '',
        'thegodfatherthegam': '',
        'TheGoldenCompass': '',
        'guild2': '',
        'Guild2Piratesotes': '',
        'Guild2Renaissance': '',
        'TheHistoryBattlefo': '',
        'TheHistoryGreatBat': '',
        'HumansMeetTheAnces': '',
        'idolmasterds': 'oIRn8T',
        'ImmortalsOfTerra': '',
        'incredhulk': '',
        'theislandcastaway': '',
        's_KillingFloor': '',
        'kingbeetlesds': '9mTZtW',
        'laststorywii': '2sapf3',
        'lozphourds': 't8RsDb',
        'lotrconquest': '',
        'thelostcasesofsher': '',
        'TheLostCrownd2d': '',
        'themark': 'C69nBX',
        'themarkam': 'C69nBX',
        'Maw': '',
        'MawDLC1BruteForce': '',
        'MawDLC2RiverRedire': '',
        'MawDLC3SpeederLane': '',
        'TheMovies': '',
        'TheMoviesSE': '',
        'MysteryOfTheDragon': '',
        'MysteryoftheMaryCe': '',
        'thenextbigthing': '',
        'nexttetris': 'KVWE12',
        'TheNightshiftCode': '',
        'TheOilBlue': '',
        'ThePath': '',
        'ThePrincessBrideGa': '',
        'theracewii': '6JbTWP',
        'regimentpc': 'u6qPE9',
        'regimentps2': 'u6qPE9',
        'RiseOfAtlantis': '',
        'lotrbfme2': 'PvzwZF',
        'scourgeproject': '',
        'scourgepcam': 'NExdfn',
        'scourgeps3am': 'NExdfn',
        'scourgepcd': 'NExdfn',
        'scourgeps3d': 'NExdfn',
        'scourgepc': 'NExdfn',
        'scourgeps3': 'NExdfn',
        'scourgerpc': 'HXogqO',
        'scourgerpcam': 'HXogqO',
        'thescruffs': '',
        'TheSecretofHildega': '',
        'thesecretofmonkeyI': '',
        'sethokings': '',
        'Thesettlersroae': '',
        'settlers7ptakbeta': '',
        'settlers7': '',
        'thesettlersroaeer': '',
        'TheShivah': '',
        'thesactionwii': 'zKsfNR',
        'Sims2ApartmentLife': '',
        'Sims2BestOfBusines': '',
        'Sims2BonVoyage': '',
        'sims2dd': '',
        'Sims2FreeTime': '',
        'sims2ep9': '',
        'Sims2IKEA': '',
        'Sims2MansionAndGar': '',
        'Sims2TeenStyle': '',
        'Sims2UniversityLif': '',
        'sims3': '',
        'Sims3LateNight': '',
        'sims3worldadv': '',
        'Sims3Ambitions': '',
        'Sims3_FastLane': '',
        'Sims3HighEnd': '',
        'Sims3OutdoorLiving': '',
        'Sims3TownLifeStuff': '',
        'SimsMedieval': '',
        'SimsMedievalPirate': '',
        'stalinsub': 'HOqpUo',
        'thestalinsubwayd': '',
        'stalinsubd': 'y3Kc9s',
        'TheStalinSubwayRed': '',
        'strategistpcam': 'a3Nydp',
        'strategistpsnam': 'Ep4yXH',
        'strategistpcd': 'a3Nydp',
        'strategistpsnd': 'Ep4yXH',
        'strategistpc': 'a3Nydp',
        'strategistpsn': 'Ep4yXH',
        'suffering': '',
        'sufferingttb': '',
        'sumofallfears': '4kGh6m',
        'sumofallfearsd': 'RW78cv',
        'TheTarotsMisfortun': '',
        'TheTinyBangStory': '',
        'thetsuriwii': 'LhtR3d',
        'TheTudors': '',
        'TuttlesMadcapMisad': '',
        'UnderGarden': '',
        'thevoid': '',
        'thewhisperedworld': '',
        'witcher': 'OaHhFk',
        'Witcher2': '',
        'thewonderfulendoft': '',
        'theawar': '',
        'theatreofwar2kd2d': '',
        'TheatreofWar3Korea': '',
        'thiefdshad': '',
        'ThreeCardstoMidnig': '',
        'thrillvilleotr': '',
        'Tidalis': '',
        'twoods08ds': 'nNgv7v',
        'tw2008': '',
        'TigerWoodsPGATour1': '',
        'TimeGentlemenPleas': '',
        'tofshadows': '',
        'timestandstillacrm': '',
        'timeshiftg': 'PAWCeH',
        'timeshiftd': 'rHKFnV',
        'timeshiftps3d': 'rHKFnV',
        'timeshift': 'rHKFnV',
        'timeshiftps3': 'rHKFnV',
        'tiumeshiftu': 'NhcH1f',
        'timeshiftx': 'rHKFnV',
        'timeshiftb': 'rHKFnV',
        'titanquest': 'Te3j7S',
        'titanquestit': 'orNtwo',
        'tqexp1': 'ZCe2KH',
        'tqexp1am': 'ZCe2KH',
        'tmntsmashwii': 'IXIdNe',
        'racedriver': 'Hl31zd',
        'tokyoparkwii': '4Fx0VT',
        'tolmamods': 'sLFfpP',
        'tcendwar': 'wNPcIq',
        'hawxdemo': '',
        'tchawx': '',
        'tcHAWX2': '',
        'hawxpc': 'h6dGAg',
        'tcHAWX2DLC1': '',
        'rb6': '49qmcl',
        'splintercchaos': '',
        'splintercellda': '',
        'traidunder': '',
        'TombRaiderAnnivers': '',
        'TombRaiderChronicl': '',
        'traidlegend': '',
        'tomenasawii': 'r15HmN',
        'TommyTronic': '',
        'tongaribouidsam': 'G2ke4q',
        'tongaribouids': 'G2ke4q',
        'thps3pcr': 'KsE3a2',
        'thps3media': 'tRKg39',
        'thawpc': 'v8la4w',
        'thdhilljamds': '6gJBca',
        'thps3pc': 'KsE3a2',
        'thps3ps2': 'hD72Kq',
        'thps5ps2': 'G2k8cF',
        'thps6pc': 'AdLWaZ',
        'thps4pcram': 'L3C8s9',
        'thps4pc': 'L3C8s9',
        'thps4pcr': 'L3C8s9',
        'thps4ps2': 'H2r8W1',
        'thawds': 't4Vc7x',
        'thps7ps2': 'y3L9Cw',
        'THPGds': 'oucE6T',
        'thps5pc': 'AdLWaZ',
        'thps6ps2': '3Rc9Km',
        'topanglerwii': '2SbZew',
        'topspin': 'sItvrS',
        'topspinps2': 'sItvrS',
        'topspinps2am': 'sItvrS',
        'topspin2': '',
        'topspin2pc': 'tTp6Pn',
        'topspin3euds': 'ETgvzA',
        'topspin3usds': '8R4LgD',
        'topspin4wii': '7AzniN',
        'torchlight': '',
        'torchlightd2d': '',
        'toribashwii': '3wygG8',
        'TortugaPiratesNewW': '',
        'TortugaTwoTreasure': '',
        'taking': 'p5kGg7',
        'ta': 'vPqkAc',
        'takingdoms': 'kJyalH',
        'tacore': '1ydybn',
        's_TotalWarShogun2': '',
        'tothrainbowds': 'lA7Urd',
        'touchpanicds': 'zHToa5',
        'bombls2ds': '8BuVqr',
        'touchmast4dsi': 'TGJei2',
        'toystory3': '',
        'trkmaniads': 'VzwMkX',
        'trkmaniawii': '9mdZHR',
        'trackmania2ds': 'iaukpU',
        'tmnations': '',
        'tmuforever': '',
        'Tradewinds2': '',
        'TradewindsCaravans': '',
        'TradewindsClassic': '',
        'TradewindsLegends': '',
        'tradewindsodyssey': '',
        'trainzsimulator12': '',
        'trainzsimulator200': '',
        'trainzsimulator201': '',
        'trainzsimulatorccc': '',
        'trainzsimulatormur': '',
        'TransformersWFC': '',
        'TrappedDead': '',
        'Trash': '',
        'TravelAgency': '',
        'treadmarks': 'u27bAA',
        'TreasureIsland': '',
        'TreasureIsland2': '',
        'treasurewldds': 'cKei7w',
        'tribes2': 'DAM4Kv',
        'tribes2demo': 'AdF313',
        'tribesvb': 'y3D28k',
        'tribesvd': 'y3D28k',
        'tribesv': 'y3D28k',
        'tribesvengeance': '',
        'TriJinxAKristineKr': '',
        'trine': '',
        'TriviaMachine': '',
        'trivialppcfr': 'c45S8i',
        'trivialppcsp': 'c45S8i',
        'trivialppc': 'c45S8i',
        'trivialpps2': 'h3U6d9',
        'trivialppalpc': 'c45S8i',
        'trivialppalps2': 'h3U6d9',
        'trivialppcgr': 'c45S8i',
        'trivialppcit': 'c45S8i',
        'trivialppcuk': 'c45S8i',
        'tron20': 't9D3vB',
        'tron20d': 't9D3vB',
        'tron20mac': 't9D3vB',
        'tronevolution': '',
        'th2003d': 'G4i3x7',
        'rmth2003': 'Y4kC7S',
        'tropico': '',
        'tropico2piratecove': '',
        'tropico3': '',
        'tropico3abpower': '',
        'tropico4': '',
        'truecrime': 'G8d3R5',
        'turningpointfol': '',
        'tpfolpcBam': 'svJqvE',
        'tpfolEUpcam': 'ltSs4H',
        'tpfolEUpcBam': 'ltSs4H',
        'tpfolEUps3am': 'svJqvE',
        'tpfolpcam': 'svJqvE',
        'tpfolps3am': 'svJqvE',
        'tpfolpcBd': 'svJqvE',
        'tpfolEUpcd': 'ltSs4H',
        'tpfolEUpcBd': 'ltSs4H',
        'tpfolpcd': 'svJqvE',
        'tpfolpcB': 'svJqvE',
        'tpfolEUpc': 'ltSs4H',
        'tpfolEUps3': 'svJqvE',
        'tpfolEUpcB': 'ltSs4H',
        'tpfolpc': 'svJqvE',
        'tpfolps3': 'svJqvE',
        'turok2': 'RWd3BG',
        'tvmanager2premiume': '',
        'tvmanager2': '',
        'tvshwking2wii': 'pNpvGC',
        'twoworlds': '',
        'TwoWorlds2': '',
        'tycoonnyc': 'VgxCbC',
        'tzar': 'byTPgq',
        'usingwii': '6vcnoA',
        'ubisoftdev': 'K4wfax',
        'ubisoftdevam': 'K4wfax',
        'UEFAEuro2008': '',
        'ufc09ps3am': 'DCLItd',
        'ufc09x360am': 'Fuf44V',
        'ufc09ps3d': 'DCLItd',
        'ufc09x360d': 'Fuf44V',
        'ufc09ps3': 'DCLItd',
        'ufc09x360': 'Fuf44V',
        'ufc10ps3am': 'WFpvzz',
        'ufc10x360am': 'oEwztT',
        'ufc10ps3d': 'WFpvzz',
        'ufc10x360d': 'oEwztT',
        'ufc2010iphone': 'v770LP',
        'ufc2010iphoam': 'v770LP',
        'ufc10ps3': 'WFpvzz',
        'ufc10x360': 'oEwztT',
        'ufc10x360devam': 'h2SP6e',
        'ufc10ps3DEVam': '2gN8O2',
        'ufc10x360devd': 'h2SP6e',
        'ufc10ps3DEVd': '2gN8O2',
        'ufc10x360dev': 'h2SP6e',
        'ufc10ps3DEV': '2gN8O2',
        'ufcfitwiiam': 'V9lDW2',
        'ufcfitwii': 'V9lDW2',
        'ufoafter': '',
        'UFOextraterrestria': '',
        'uotd': 'CpJvsG',
        'UltimaOnlineMondai': '',
        'ultimaonlinestygia': '',
        'ultibandwii': 'F8KfNf',
        'ubraingamesds': 'MzT7MD',
        'ucardgamesds': 'PpmQVg',
        'ultimateknightwind': '',
        'ultimateMKds': 'irQTn8',
        'streetjam': 'jAGh7n',
        'unbballswii': 'lZTqHE',
        'UCAWASpecialEditio': '',
        'unicombat': '',
        'UniversalCombatGol': '',
        'UCAWorldApart': '',
        'UniversalCombatSE': '',
        'UniversalCombatSEM': '',
        'uawea': '',
        'UnlikelySuspects': '',
        'uno': 'MZIq0w',
        'unodsi': 'w2G3ae',
        'unowii': '2hUZSq',
        'unreal': 'DAncRK',
        'unreal2d': 'Yel30y',
        'unreal2demo': 'Yel30y',
        'unreal2': 'Yel30y',
        'Unreal2Anthology': '',
        'UnrealGold': '',
        'ut2': 'Lw7x0R',
        'ut2d': 'y5e8Q3',
        'ut2004': 'y5rP9m',
        'ut2004d': 'y5rP9m',
        'ut3': 'UebAWH',
        'ut3pc': 'nT2Mtz',
        'ut3pcam': 'nT2Mtz',
        'ut3ps3am': 'nT2Mtz',
        'ut3pcdam': 'nT2Mtz',
        'ut3pcd': 'KTiJdD',
        'ut3ps3d': 'nT2Mtz',
        'ut3ps3': 'nT2Mtz',
        'ut3demo': 'KTiJdD',
        'ut3jppcam': 'nT2Mtz',
        'ut3jpps3am': 'nT2Mtz',
        'ut3jppc': 'nT2Mtz',
        'ut3jpps3': 'nT2Mtz',
        'ut3onlive': '7cxD9c',
        'ut3onliveam': '7cxD9c',
        'utdc': 'KbAgl4',
        'uplinkhe': '',
        'uprising2': 'ALJwUh',
        'upwords': 'itaKPh',
        'uchaosrrps2am': 'KPd0V9',
        'uchaosrrps2': 'KPd0V9',
        'URUagesbeyondMYST': '',
        'VacationQuestTheHa': '',
        'valknightswii': 'N5Mf0P',
        'vampirehunters': '',
        'vampmasqb': '',
        'vampireville': '',
        'vancouver2010': '',
        'vanguardsoh': 'QVrtku',
        'vanguardbeta': 'TorchQ',
        'velocitypc': 'Qmx73k',
        'velocityps2': 'Qmx73k',
        'velvetassassin': '',
        'Venetica': '',
        'venomworld': 'Jg43a1',
        'victoriacomplete': '',
        'victoria2': '',
        'vietcong': 'bq98mE',
        'vietcong2': 'zX2pq6',
        'vietcong2d': 'zX2pq6',
        'vietcong2pd': 'zX2pq6',
        'vietcongd': 'bq98mE',
        'vietkong': 'bq98mE',
        'viper': 'SSzOWL',
        'virtuatennis2009': '',
        'virtuatennis4': '',
        'virtuaten4wiiam': 'UETpVJ',
        'virtuaten4wii': 'UETpVJ',
        'vtennisacewii': 'ptSNgI',
        'VirtualFamilies': '',
        'virtualpool3': 'NA3vu0',
        'VirtualVillagers-A': '',
        'VirtualVillagers-T': '',
        'vv4TheTreeOfLife': '',
        'vv5NewBelievers': '',
        'voiceapp': 'sD3GkC',
        'voodoodice': '',
        'vvvvvv': '',
        'wosin': '',
        'wosinmac': 'yX02mQ',
        'WallaceAndGromitEp': '',
        'wantedwof': '',
        'coteagles': 'cEb84M',
        'warfronttp': 'LTOTAa',
        'coteaglessp': 'cEb84M',
        'coteaglesam': 'cEb84M',
        'wlclashpcam': 'qcU8MT',
        'wlclashpcd': 'qcU8MT',
        'wlclashpc': 'qcU8MT',
        'wotrb': 'e8Fc3n',
        'WarBirdsDogfights': '',
        'WarBirdsRedBaron': '',
        'warcraft2bne': 'gW5Hl4',
        'warfare': '',
        's_whamdow2': '',
        'whammer40ktds': '9Tkwd4',
        'whammer40kdc': 'Ue9v3H',
        'whammer40kdcam': 'Ue9v3H',
        'dow': 'VLxgwe',
        'dowd': '',
        'whammer40000': 'uJ8d3N',
        'whammer40000am': 'uJ8d3N',
        'whamdowfram': 'pXL838',
        'whamdowfrb': 'pXL838',
        'whamdowfrbam': 'pXL838',
        'whamdowfr': 'pXL838',
        'dowwad': '',
        's_whamdow2cr': '',
        'whammer40kb': 'uJ8d3N',
        'whammer40kbam': 'uJ8d3N',
        's_whamdow2Ret': '',
        'wh40kp': 'uJ8d3N',
        'fwarriorpc': 'n2X8ft',
        'fwarriorps2': 'r3D7s9',
        's_Warhammer40kSpac': '',
        'whtacticspspam': 'KcKyRP',
        'whtacticspsp': 'KcKyRP',
        'whammer40kwa': 'Ue9v3H',
        'whammer40kwaam': 'Ue9v3H',
        'wh40kwap': 'Ue9v3H',
        'whammer40kt': 'uJ8d3N',
        'wh40kdow2crol': 'BlTqbc',
        'wh40kdow2crolam': 'BlTqbc',
        'wmarkofchaos': 'nGmBcN',
        'wmarkofchaosd': 'nGmBcN',
        'wmarkofchaosdam': 'nGmBcN',
        'whoaor': '',
        'whoaorbeta': '',
        'whammermoc': 'rnbkJp',
        'whammermok': 'rnbkJp',
        'whammermocbm': 'EACMEZ',
        'whammermocbmam': 'EACMEZ',
        'whammermocbmd': 'EACMEZ',
        'whammermocam': 'rnbkJp',
        'whammermocd': 'rnbkJp',
        'whammermocdam': 'rnbkJp',
        'whammermoct': 'rnbkJp',
        'whammermoctam': 'rnbkJp',
        'ritesofwar': '2p7zgs',
        'warlordsb': '9gV5Hm',
        'warlordsb2': 'Gg7nLf',
        'warlordsb2d': 'tKnYBL',
        'warbatcry3': '',
        'warlordsdr': 'exS6aj',
        'warlords4hoe': '',
        'warmonger': 'I1WnEQ',
        'warnbriads': 'mmOyeL',
        'warriorkings': 'hCSCQM',
        'wkingsb': 'agV5Hm',
        'wkingsbd': 'agV5Hm',
        'WarriorsOfElysiaD': '',
        'warorochi': '',
        'wz2100demo': 'AGg7mM',
        'wz2100': 'kD072v',
        'wastelandangel': '',
        'waterbugs': '',
        'wtrwarfarewii': 'R3zu4t',
        'waterloo': 'CTCQMZ',
        'waytogobowling': '',
        'webgames': 'cvSTOR',
        'werewolf': '81zQQa',
        'Westward': '',
        'westward2': '',
        'westward3': '',
        'WestwardIVAllAboar': '',
        'WestwardKingdoms': '',
        'wofps2': 'dF39h3',
        'wot': 'RSSSpA',
        'wheelman': '',
        'wickeddefense2demo': '',
        'wiibombmanwii': 'xx7Mvb',
        'chesswii': 'X8qanS',
        'wiilinkwii': 'Be3reo',
        'lovegolfwii': 'mToBwA',
        'wiinat': '4Fuy9m',
        'wildwings': 'PbNDFL',
        'WildlifeParkTycoon': '',
        'f1teamdriver': 'QwZFex',
        'winemakerextraordi': '',
        'wingsofpreyd': '',
        'wingsofwar': 'sWSqHB',
        'wingsofward': 'sWSqHB',
        'wincircleds': '2ckCbe',
        'weleplay09wii': 'Eamkm6',
        'winelev10wii': 'cZzNkJ',
        'winel10jpnwii': '1mJhT4',
        'winel10jpnwiiam': '1mJhT4',
        'winelev11wii': 'uts5zc',
        'WinterChallenge200': '',
        'winters3nawiiam': 'TJxCoW',
        'winters3nawii': 'TJxCoW',
        'girlssecEUds': 'nySkKx',
        'winx2010ds': 'JP9RGe',
        'Witch-botMeglilo': '',
        'wizbang': '',
        'wofor': 'mxw9Nu',
        'woforam': 'mxw9Nu',
        'woford': 'mxw9Nu',
        'wofordam': 'mxw9Nu',
        'fear2olam': 'dDPDXC',
        'wolfenstein': '',
        'rtcwet': 'jpvbuP',
        'rtcwett': 't3R7dF',
        'WoodyTwoLegs': '',
        'wordjongFRds': 'XAIqLK',
        'wordjongds': 'V6dC1l',
        'WordWhompUndergrou': '',
        'wordjongeuds': '3rwTkL',
        'wordzap': 'q7zfsD',
        'airhockeywii': 'vhxMTl',
        'wcpokerps2': 't3Hd9q',
        'wcpoker2pc': 't3Hd9q',
        'wcpokerpalps2': 't3Hd9q',
        'wcpool2004pc': 'ypQJss',
        'wcsnkr2004pc': 'DQZHBr',
        'wcsnkr2004ps2': 'K3f39a',
        'wcsnkr2005': 'cPw49v',
        'wcsnkr2005ps2': 'cPw49v',
        'wicb': 'SITsUf',
        'wic': 'mtjzlE',
        'wicd': 'taMBOb',
        'wicsa': '',
        'wrldgoowii': 'Nz4tSw',
        'WorldOfGooD2D': '',
        'woosc': 'Y4nD9a',
        'wooscd': 'Y4nD9a',
        'wow': '',
        'wofzoo': '',
        'wptps2pal': 'jL2aEz',
        'wptps2': 'jL2aEz',
        'wracing1': 't3Hs27',
        'wracing2': 'hY39X0',
        'wsoppc': 'u3hK2C',
        'wsoppcam': 'u3hK2C',
        'wsopps2': 'u3hK2C',
        'wsopps2am': 'u3hK2C',
        'wsoppsp': 'u3hK2C',
        'wsoppspam': 'u3hK2C',
        'wcpool2004ps2': 'g3J7w2',
        'wsc2007': 'xKCMfK',
        'wsc2007pc': 'L6cr8f',
        'wsc2007ps2': 'bpDHED',
        'wsc2007ps3': 'm2bcKK',
        'socelevends': 'IwZXVX',
        'elevenkords': 'qiM82O',
        'WSWeleven07ds': 'sb2kFV',
        'WSWelevenwii': 'aFJW2D',
        'WorldVoyage': '',
        'ww2frontline': 'blHjuM',
        'WorldWarOneGold': '',
        'worldshiftpcam': '7gBmF4',
        'worldshiftpcd': '7gBmF4',
        'worldshiftpc': '7gBmF4',
        'worldshiftpcbam': '7gBmF4',
        'worldshiftpcb': '7gBmF4',
        'wormspspam': 'mpCK9u',
        'wormswiiwaream': 'nQV5pT',
        'wormspsp': 'mpCK9u',
        'wormswiiware': 'nQV5pT',
        'worms2': 'IOrDfP',
        'worms3': 'fZDYBO',
        'worms4': 'Bs28Kl',
        'worms4d': 'Bs28Kl',
        'wormsarm': 'p2uPkK',
        'wormsforts': 'y3Gc8n',
        'wormsow2ds': 'PHK0dR',
        's_WormsReloaded': '',
        'wormsasowii': 'UeJRpQ',
        'Sin': 'Kd29DX',
        'wrcpcam': 'GeVTw8',
        'wrcps3am': 'e14AcM',
        'wrcpcd': 'GeVTw8',
        'wrcps3d': 'e14AcM',
        'wrcpc': 'GeVTw8',
        'wrcps3': 'e14AcM',
        'wrcfiawrc2010': '',
        'legofwreps3am': 'PyTirM',
        'legofwreps3': 'PyTirM',
        'legofwrex360': 'VuPdJX',
        'smackdnps2kor': 'k7cL91',
        'smackdnps2pal': 'k7cL91',
        'smackdnps2palr': 'k7cL91',
        'smackdnps2r': 'k7cL91',
        'smackdnps2': 'k7cL91',
        'smackdn2ps2': 'JyWnL2',
        'smackdn2ps2kor': 'JyWnL2',
        'smackdn2ps2pal': 'JyWnL2',
        'svsr09ps3': 'Pzhfov',
        'svsr09x360': 'Pzhfov',
        'svsr10ps3am': 'XcUkIx',
        'svsr10x360am': 'ONqHu9',
        'svsr10ps3d': 'XcUkIx',
        'svsr10x360d': 'ONqHu9',
        'svsr10ps3': 'XcUkIx',
        'svsr10x360': 'ONqHu9',
        'raw2009wii': 'hCcmdR',
        'ww2btanks': 'NcQeTO',
        'xblades': '',
        'XComApocalypse': '',
        'xcomenforcer': 'M3A2rK',
        'XComInterceptor': '',
        'XComTerrorFromtheD': '',
        'XcomUFOdefense': '',
        'xmenlegps2': '47uQsy',
        'xmenleg2': '',
        'xmenleg2ps2': '',
        'xmenlegps2pal': '47uQsy',
        'xmenlegps2pals': '47uQsy',
        'xmenlegpc': '47uQsy',
        'xmenleg2psp': 'g3Hs9C',
        'xwingtie': 'Lc8gW5',
        'x2threat': '',
        'x3r': '',
        'xboxtunnel': '8dvSTO',
        'xenocellpc': 'zPCFap',
        'xenocellpcam': 'zPCFap',
        'XIIIcenturygoldedi': '',
        'XpandRally': '',
        'ysstrategyds': 'gq2bHQ',
        'yahoo': '',
        'yakumands': 'dNte7R',
        'yakumanwii': 'vcBUtC',
        'yarsrevenge': '',
        'yetisportswiiam': '9kZgSg',
        'yetisportswii': '9kZgSg',
        'YouAreEMPTY': '',
        's_YouDontKnowJack': '',
        'youdafarmer': '',
        'youdafarmer2saveth': '',
        'youdafarmer3season': '',
        'youdalegendtcotad': '',
        'youdalegendtgbop': '',
        'YoudaMarina': '',
        'youdasafari': '',
        'youdasurvivor': '',
        'youdasushichef': '',
        'yugioh5dds': 'lwG6md',
        'yugioh5dwii': 'bTL9yI',
        'yugiohWC07ds': 'QgkE62',
        'yugiohgx2ds': '1A1iB2',
        'yugiohwc08ds': 'X6i4ay',
        'yugiohwc10ds': 'TuaRVH',
        'yugiohwc11ds': '7NFzQf',
        'Yumsters2Aroundthe': '',
        'zsteel': '4p2uPk',
        'zatikon': '',
        'zax': 'J3An3s',
        'zdoom': 'MIr0wW',
        'Zeit2': '',
        'zenerchi': '',
        'zenoclash': '',
        'zeroGds': 'ViuPw7',
        'zombiebowlorama': '',
        'zombiedriver': '',
        'ZombiePirates': '',
        'ZombieShooter': '',
        'ZombieShooter2': '',
        'ZumaDeluxe': 'bxYYnG',
        'zumasrevenge': ''}


# Based on http://aluigi.altervista.org/papers.htm#peerchat
class GsPeerchat:
    def __init__(self, chall=b"0" * 16, gamekey=b"Cs2iIq"):
        self.i1 = 0
        self.i2 = 0
        self.crypt = bytearray(256)
        assert(len(chall) == 16)
        chall = bytearray(chall)
        gamekey = bytearray(gamekey)
        challenge = bytearray(16)
        for i in range(0, 16):
            challenge[i] = chall[i] ^ gamekey[i % len(gamekey)]
        for i in range(0, 256):
            self.crypt[i] = 255 - i
        tl = 0
        for i in range(0, 256):
            tl = (tl + self.crypt[i] + challenge[i % 16]) % 256
            self.crypt[tl], self.crypt[i] = self.crypt[i], self.crypt[tl]

    def __call__(self, data):
        data = bytearray(data)
        for i in range(0, len(data)):
            self.i1 = (self.i1 + 1) % 256
            self.i2 = (self.i2 + self.crypt[self.i1]) % 256
            self.crypt[self.i1], self.crypt[self.i2] = self.crypt[self.i2], self.crypt[self.i1]
            t = (self.crypt[self.i1] + self.crypt[self.i2]) % 256
            data[i] ^= self.crypt[t]
        return bytes(data)


def create_directory(path):
    if not os.path.isdir(path):
        os.makedirs(path)


class Channel(object):
    def __init__(self, server, name):
        self.server = server
        self.name = name
        self.members = set()
        self._topic = ""
        self._key = None
        if self.server.statedir:
            self._state_path = "%s/%s" % (
                self.server.statedir,
                name.replace("_", "__").replace("/", "_"))
            self._read_state()
        else:
            self._state_path = None

    def add_member(self, client):
        self.members.add(client)

    def get_topic(self):
        return self._topic

    def set_topic(self, value):
        self._topic = value
        self._write_state()

    topic = property(get_topic, set_topic)

    def get_key(self):
        return self._key

    def set_key(self, value):
        self._key = value
        self._write_state()

    key = property(get_key, set_key)

    def remove_client(self, client):
        self.members.discard(client)
        if not self.members:
            self.server.remove_channel(self)

    def _read_state(self):
        if not (self._state_path and os.path.exists(self._state_path)):
            return
        data = {}
        exec(open(self._state_path), {}, data)
        self._topic = data.get("topic", "")
        self._key = data.get("key")

    def _write_state(self):
        if not self._state_path:
            return
        (fd, path) = tempfile.mkstemp(dir=os.path.dirname(self._state_path))
        fp = os.fdopen(fd, "w")
        fp.write("topic = %r\n" % self.topic)
        fp.write("key = %r\n" % self.key)
        fp.close()
        os.rename(path, self._state_path)


class Client(object):
    __linesep_regexp = re.compile(r"\r?\n")
    # The RFC limit for nicknames is 9 characters, but what the heck.
    # in gs it is atleast 20
    __valid_nickname_regexp = re.compile(
        r"^[][\-`_^{|}A-Za-z][][\-`_^{|}A-Za-z0-9]{0,50}$")
    __valid_channelname_regexp = re.compile(
        r"^[&#+!][^\x00\x07\x0a\x0d ,:]{0,50}$")

    def __init__(self, server, client_socket):
        self.server = server
        self.socket = client_socket
        self.channels = {}  # irc_lower(Channel name) --> Channel
        self.nickname = None
        self.user = None
        self.realname = None

        self.gamename = None
        self.in_crypt = None
        self.out_crypt = None

        (self.host, self.port) = client_socket.getpeername()
        self.__timestamp = time.time()
        self.__readbuffer = ""
        self.__writebuffer = ""
        self.__sent_ping = False
        if self.server.password:
            self.__handle_command = self.__pass_handler
        else:
            self.__handle_command = self.__registration_handler

    def get_prefix(self):
        return "%s!%s@%s" % (self.nickname, self.user, self.host)
    prefix = property(get_prefix)

    def __str__(self):
        return self.prefix

    def check_aliveness(self):
        now = time.time()
        if self.__timestamp + self.server.ping_timeout < now:
            text = 'ping timeout'
            if self.server.debug:
                text = 'ping timeout [{} - {} = {} > {}]'.format(now, self.__timestamp,
                                                                 now - self.__timestamp,
                                                                 self.server.ping_timeout)
            self.disconnect(text)
            return
        if not self.__sent_ping and self.__timestamp + self.server.ping_interval < now:
            if self.__handle_command == self.__command_handler:
                # Registered.
                self.message("PING :%s" % self.server.name)
                self.__sent_ping = True
            else:
                # Not registered.
                self.disconnect("ping timeout [not registered]")

    def write_queue_size(self):
        return len(self.__writebuffer)

    def __parse_read_buffer(self):
        #DECODING DATA
        #if client doesn't have gamename set then he doesnt need encoding
        if self.gamename is not None and self.in_crypt is not None:
            self.__readbuffer = self.in_crypt(self.__readbuffer)
            #print "data decoded:",self.__readbuffer
            #sys.stdout.flush()

        lines = self.__linesep_regexp.split(self.__readbuffer)
        # Put last line back into the readbuffer as we don't know if it is complete yet.
        self.__readbuffer = lines[-1]
        lines = lines[:-1]
        for line in lines:
            if not line:
                # Empty line. Ignore.
                continue
            x = line.split(" ", 1)
            command = x[0].upper()
            if len(x) == 1:
                arguments = []
            else:
                if len(x[1]) > 0 and x[1][0] == ":":
                    arguments = [x[1][1:]]
                else:
                    y = string.split(x[1], " :", 1)
                    arguments = string.split(y[0])
                    if len(y) == 2:
                        arguments.append(y[1])
            self.__handle_command(command, arguments)

    def __pass_handler(self, command, arguments):
        server = self.server
        if command == "PASS":
            if len(arguments) == 0:
                self.reply_461("PASS")
            else:
                if arguments[0].lower() == server.password:
                    self.__handle_command = self.__registration_handler
                else:
                    self.reply("464 :Password incorrect")
        elif command == "QUIT":
            self.disconnect("Client quit")
            return

    def __registration_handler(self, command, arguments):
        server = self.server
        if command == "NICK":
            if len(arguments) < 1:
                self.reply("431 :No nickname given")
                return
            nick = arguments[0]
            if server.get_client(nick):
                self.reply("433 * %s :Nickname is already in use" % nick)
            elif not self.__valid_nickname_regexp.match(nick):
                self.reply("432 * %s :Erroneous nickname" % nick)
            else:
                self.nickname = nick
                server.client_changed_nickname(self, None)
        elif command == "USER":
            if len(arguments) < 4:
                self.reply_461("USER")
                return
            self.user = arguments[0]
            self.realname = arguments[3]
        elif command == "CRYPT":
            print 'CRYPT RECIEVED'
            sys.stdout.flush()
            if len(arguments) < 3:
                print('number of arguments is less than 3')
                sys.stdout.flush()
                return
            self.message(":s 705 * {} {}".format("0" * 16, "0" * 16))
            self.gamename = arguments[2]
            try:
                self.in_crypt = GsPeerchat(gamekey=gn_gk[self.gamename])
                self.out_crypt = GsPeerchat(gamekey=gn_gk[self.gamename])
            except KeyError:
                print('Unknown game "{}" requestesd'.format(self.gamename))
                sys.stdout.flush()
        elif command == "USRIP":
            self.message(":s 302 :=+@"+self.host)
        elif command == "LOGIN":
            nick = arguments[1]
            if server.get_client(nick):
                self.reply("433 * %s :Nickname is already in use" % nick)
            elif not self.__valid_nickname_regexp.match(nick):
                self.reply("432 * %s :Erroneous nickname" % nick)
            else:
                self.nickname = nick
                server.client_changed_nickname(self, None)
                self.message(':s 707 {} 12345678 87654320'.format(nick))
        elif command == "QUIT":
            self.disconnect("Client quit")
            return
        if self.nickname and self.user:
            self.reply("001 %s :Hi, welcome to IRC" % self.nickname)
            self.reply("002 %s :Your host is %s, running version miniircd-%s"
                       % (self.nickname, server.name, VERSION))
            self.reply("003 %s :This server was created sometime"
                       % self.nickname)
            self.reply("004 %s :%s miniircd-%s o o"
                       % (self.nickname, server.name, VERSION))
            self.send_lusers()
            self.send_motd()
            self.__handle_command = self.__command_handler

    def __command_handler(self, command, arguments):
        def away_handler():
            pass

        def ison_handler():
            if len(arguments) < 1:
                self.reply_461("ISON")
                return
            nicks = arguments
            online = [n for n in nicks if server.get_client(n)]
            self.reply("303 %s :%s" % (self.nickname, " ".join(online)))

        def join_handler():
            if len(arguments) < 1:
                self.reply_461("JOIN")
                return
            if arguments[0] == "0":
                for (channelname, channel) in self.channels.items():
                    self.message_channel(channel, "PART", channelname, True)
                    self.channel_log(channel, "left", meta=True)
                    server.remove_member_from_channel(self, channelname)
                self.channels = {}
                return
            channelnames = arguments[0].split(",")
            if len(arguments) > 1:
                keys = arguments[1].split(",")
            else:
                keys = []
            keys.extend((len(channelnames) - len(keys)) * [None])
            for (i, channelname) in enumerate(channelnames):
                if irc_lower(channelname) in self.channels:
                    continue
                if not valid_channel_re.match(channelname):
                    self.reply_403(channelname)
                    continue
                channel = server.get_channel(channelname)
                if channel.key is not None and channel.key != keys[i]:
                    self.reply(
                        "475 %s %s :Cannot join channel (+k) - bad key"
                        % (self.nickname, channelname))
                    continue
                channel.add_member(self)
                self.channels[irc_lower(channelname)] = channel
                # FIXME redundand logic
                if channelname == "#GSP!civ4bts" \
                        and (irc_lower("#GSP!civ4btsjp") in server.channels):
                    channeljp = server.get_channel("#GSP!civ4btsjp")
                    self.message_channel(channel, "JOIN", channelname, True)
                    self.message_channel(channeljp, "JOIN", "#GSP!civ4btsjp", True)
                elif channelname == "#GSP!civ4btsjp" \
                        and (irc_lower("#GSP!civ4bts") in server.channels):
                    channelbts = server.get_channel("#GSP!civ4bts")
                    self.message_channel(channel, "JOIN", channelname, True)
                    self.message_channel(channelbts, "JOIN", "#GSP!civ4bts", True)
                else:
                    self.message_channel(channel, "JOIN", channelname, True)
                self.channel_log(channel, "joined", meta=True)
                if channel.topic:
                    self.reply("332 %s %s :%s"
                               % (self.nickname, channel.name, channel.topic))
                else:
                    self.reply("331 %s %s :No topic is set"
                               % (self.nickname, channel.name))

                # FIXME redundand logic
                if channelname == "#GSP!civ4bts" and (irc_lower("#GSP!civ4btsjp") in server.channels):
                #if channel is title channel of bts then we send also users of btsjp channel
                    #print "civ4bts entered"
                    #sys.stdout.flush()
                    channeljp = server.get_channel("#GSP!civ4btsjp")
                    self.reply("353 %s = %s :%s %s"
                               % (self.nickname, channelname,
                                  " ".join(sorted(x.nickname
                                                  for x in channel.members)),
                                  " ".join(sorted(x.nickname for x in channeljp.members))))
                elif channelname == "#GSP!civ4btsjp" and (irc_lower("#GSP!civ4bts") in server.channels):
                #send bts users to jp
                    #print "civ4btsJP entered"
                    #sys.stdout.flush()
                    channelbts = server.get_channel("#GSP!civ4bts")
                    self.reply("353 %s = %s :%s %s"
                               % (self.nickname,
                                  channelname,
                                  " ".join(sorted(x.nickname
                                                  for x in channel.members))," ".join(sorted(x.nickname for x in channelbts.members)) ))

                else:
                    self.reply("353 %s = %s :%s"
                               % (self.nickname, channelname,
                                  " ".join(sorted(x.nickname
                                                  for x in channel.members))))
                self.reply("366 %s %s :End of NAMES list" % (self.nickname, channelname))

                if self.server.channel_motd_path:
                    try:
                        # TODO: Optimize, cache file content
                        with open(self.server.channel_motd_path, "r") as motd_file:
                            motd_lines = motd_file.readlines()
                            for line in motd_lines:
                                msg = ':%s %s %s %s' % ('Server', 'PRIVMSG', channelname, line)
                                self.message(msg)
                    except IOError as err:
                        print('Channel MOTD path cannot be read (%s)' % err)
                        sys.stdout.flush()

        def list_handler():
            if len(arguments) < 1:
                channels = server.channels.values()
            else:
                channels = []
                for channelname in arguments[0].split(","):
                    if server.has_channel(channelname):
                        channels.append(server.get_channel(channelname))
            channels.sort(key=lambda x: x.name)
            for channel in channels:
                self.reply("322 %s %s %d :%s"
                           % (self.nickname, channel.name,
                              len(channel.members), channel.topic))
            self.reply("323 %s :End of LIST" % self.nickname)

        def lusers_handler():
            self.send_lusers()

        def mode_handler():
            if len(arguments) < 1:
                self.reply_461("MODE")
                return
            targetname = arguments[0]
            if server.has_channel(targetname):
                channel = server.get_channel(targetname)
                if len(arguments) < 2:
                    if channel.key:
                        modes = "+k"
                        if irc_lower(channel.name) in self.channels:
                            modes += " %s" % channel.key
                    else:
                        modes = "+"
                    self.reply("324 %s %s %s"
                               % (self.nickname, targetname, modes))
                    return
                flag = arguments[1]
                if flag == "+k":
                    if len(arguments) < 3:
                        self.reply_461("MODE")
                        return
                    key = arguments[2]
                    if irc_lower(channel.name) in self.channels:
                        channel.key = key
                        self.message_channel(
                            channel, "MODE", "%s +k %s" % (channel.name, key),
                            True)
                        self.channel_log(
                            channel, "set channel key to %s" % key, meta=True)
                    else:
                        self.reply("442 %s :You're not on that channel"
                                   % targetname)
                elif flag == "-k":
                    if irc_lower(channel.name) in self.channels:
                        channel.key = None
                        self.message_channel(
                            channel, "MODE", "%s -k" % channel.name,
                            True)
                        self.channel_log(
                            channel, "removed channel key", meta=True)
                    else:
                        self.reply("442 %s :You're not on that channel"
                                   % targetname)
                else:
                    self.reply("472 %s %s :Unknown MODE flag"
                               % (self.nickname, flag))
            elif targetname == self.nickname:
                if len(arguments) == 1:
                    self.reply("221 %s +" % self.nickname)
                else:
                    self.reply("501 %s :Unknown MODE flag" % self.nickname)
            else:
                self.reply_403(targetname)

        def motd_handler():
            self.send_motd()

        def nick_handler():
            if len(arguments) < 1:
                self.reply("431 :No nickname given")
                return
            newnick = arguments[0]
            client = server.get_client(newnick)
            if newnick == self.nickname:
                pass
            elif client and client is not self:
                self.reply("433 %s %s :Nickname is already in use"
                           % (self.nickname, newnick))
            elif not self.__valid_nickname_regexp.match(newnick):
                self.reply("432 %s %s :Erroneous Nickname"
                           % (self.nickname, newnick))
            else:
                for x in self.channels.values():
                    self.channel_log(
                        x, "changed nickname to %s" % newnick, meta=True)
                oldnickname = self.nickname
                self.nickname = newnick
                server.client_changed_nickname(self, oldnickname)
                self.message_related(
                    ":%s!%s@%s NICK %s"
                    % (oldnickname, self.user, self.host, self.nickname),
                    True)

        def notice_and_privmsg_handler():
            if len(arguments) == 0:
                self.reply("411 %s :No recipient given (%s)"
                           % (self.nickname, command))
                return
            if len(arguments) == 1:
                self.reply("412 %s :No text to send" % self.nickname)
                return
            targetname = arguments[0]
            message = arguments[1]
            client = server.get_client(targetname)
            if client:
                client.message(":%s %s %s :%s"
                               % (self.prefix, command, targetname, message))
            elif server.has_channel(targetname):
                #channel privmsg
                if targetname == "#GSP!civ4bts" and (irc_lower("#GSP!civ4btsjp") in server.channels):
                    channeljp = server.get_channel("#GSP!civ4btsjp")
                    channel = server.get_channel(targetname)
                    self.message_channel(
                        channel, command, "%s :%s" % (channel.name, message))
                    self.message_channel(
                        channeljp, command, "%s :%s" % ("#GSP!civ4btsjp", message))
                elif targetname == "#GSP!civ4btsjp" and (irc_lower("#GSP!civ4bts") in server.channels):
                    channelbts = server.get_channel("#GSP!civ4bts")
                    channel = server.get_channel(targetname)
                    self.message_channel(
                        channel, command, "%s :%s" % (channel.name, message))
                    self.message_channel(
                        channelbts, command, "%s :%s" % ("#GSP!civ4bts", message))
                else:
                    channel = server.get_channel(targetname)
                    self.message_channel(
                        channel, command, "%s :%s" % (channel.name, message))
                    self.channel_log(channel, message)
            else:
                self.reply("401 %s %s :No such nick/channel"
                           % (self.nickname, targetname))

        def part_handler():
            if len(arguments) < 1:
                self.reply_461("PART")
                return
            if len(arguments) > 1:
                partmsg = arguments[1]
            else:
                partmsg = self.nickname
            for channelname in arguments[0].split(","):
                if not valid_channel_re.match(channelname):
                    self.reply_403(channelname)
                elif not irc_lower(channelname) in self.channels:
                    self.reply("442 %s %s :You're not on that channel"
                               % (self.nickname, channelname))
                else:
                    channel = self.channels[irc_lower(channelname)]
                    if channelname == "#GSP!civ4bts" and (irc_lower("#GSP!civ4btsjp") in server.channels):
                        channeljp = server.get_channel("#GSP!civ4btsjp")
                        self.message_channel(channel, "PART", "%s :%s" % (channelname, partmsg), True)
                        self.message_channel(channeljp, "PART", "%s :%s" % ("#GSP!civ4btsjp", partmsg), True)
                    elif channelname == "#GSP!civ4btsjp" and (irc_lower("#GSP!civ4bts") in server.channels):
                        channelbts = server.get_channel("#GSP!civ4bts")
                        self.message_channel(channel, "PART", "%s :%s" % (channelname, partmsg),True)
                        self.message_channel(channelbts, "PART", "%s :%s" % ("#GSP!civ4bts", partmsg),True)
                    else:
                        self.message_channel(channel, "PART", "%s :%s" % (channelname, partmsg),True)
                    self.channel_log(channel, "left (%s)" % partmsg, meta=True)
                    del self.channels[irc_lower(channelname)]
                    server.remove_member_from_channel(self, channelname)

        def ping_handler():
            if len(arguments) < 1:
                self.reply("409 %s :No origin specified" % self.nickname)
                return
            self.reply("PONG %s :%s" % (server.name, arguments[0]))
            
        def cdkey_handler():
            self.reply("706 * 1 :Authenticated \r\n")

        def pong_handler():
            pass

        def quit_handler():
            if len(arguments) < 1:
                quitmsg = self.nickname
            else:
                quitmsg = arguments[0]
            self.disconnect(quitmsg)

        def topic_handler():
            if len(arguments) < 1:
                self.reply_461("TOPIC")
                return
            channelname = arguments[0]
            channel = self.channels.get(irc_lower(channelname))
            if channel:
                if len(arguments) > 1:
                    newtopic = arguments[1]
                    channel.topic = newtopic
                    self.message_channel(
                        channel, "TOPIC", "%s :%s" % (channelname, newtopic),
                        True)
                    self.channel_log(
                        channel, "set topic to %r" % newtopic, meta=True)
                else:
                    if channel.topic:
                        self.reply("332 %s %s :%s"
                                   % (self.nickname, channel.name,
                                      channel.topic))
                    else:
                        self.reply("331 %s %s :No topic is set"
                                   % (self.nickname, channel.name))
            else:
                self.reply("442 %s :You're not on that channel" % channelname)

        def wallops_handler():
            if len(arguments) < 1:
                self.reply_461(command)
            message = arguments[0]
            for client in server.clients.values():
                client.message(":%s NOTICE %s :Global notice: %s"
                               % (self.prefix, client.nickname, message))

        def who_handler():
            if len(arguments) < 1:
                return
            targetname = arguments[0]
            if server.has_channel(targetname):
                channel = server.get_channel(targetname)
                for member in channel.members:
                    self.reply("352 %s %s %s %s %s %s H :0 %s"
                               % (self.nickname, targetname, member.user,
                                  member.host, server.name, member.nickname,
                                  member.realname))
                self.reply("315 %s %s :End of WHO list"
                           % (self.nickname, targetname))

        def whois_handler():
            if len(arguments) < 1:
                return
            username = arguments[0]
            user = server.get_client(username)
            if user:
                self.reply("311 %s %s %s %s * :%s"
                           % (self.nickname, user.nickname, user.user,
                              user.host, user.realname))
                self.reply("312 %s %s %s :%s"
                           % (self.nickname, user.nickname, server.name,
                              server.name))
                self.reply("319 %s %s :%s"
                           % (self.nickname, user.nickname,
                              " ".join(user.channels)))
                self.reply("318 %s %s :End of WHOIS list"
                           % (self.nickname, user.nickname))
            else:
                self.reply("401 %s %s :No such nick"
                           % (self.nickname, username))

        handler_table = {
            "AWAY": away_handler,
            "ISON": ison_handler,
            "JOIN": join_handler,
            "LIST": list_handler,
            "LUSERS": lusers_handler,
            "MODE": mode_handler,
            "MOTD": motd_handler,
            "NICK": nick_handler,
            "NOTICE": notice_and_privmsg_handler,
            "PART": part_handler,
            "CDKEY": cdkey_handler,
            "PING": ping_handler,
            "PONG": pong_handler,
            "PRIVMSG": notice_and_privmsg_handler,
            "QUIT": quit_handler,
            "TOPIC": topic_handler,
            "WALLOPS": wallops_handler,
            "WHO": who_handler,
            "WHOIS": whois_handler,
            #"CRYPT": gs_crypt_h,
        }
        server = self.server
        valid_channel_re = self.__valid_channelname_regexp
        try:
            handler_table[command]()
        except KeyError:
            print('unknown command received: {}'.format(command))
            sys.stdout.flush()
            self.reply("421 %s %s :Unknown command" % (self.nickname, command))

    def socket_readable_notification(self):
        try:
            data = self.socket.recv(2 ** 10)
            print("[%s:%d] -> %r" % (self.host, self.port, data))
            sys.stdout.flush()
            if not data:
                self.disconnect('EOT')
            self.__readbuffer += data
            self.__parse_read_buffer()
            self.__timestamp = time.time()
            self.__sent_ping = False
        except socket.error as err:
            if err.args[0] == errno.EAGAIN or err.args[0] == errno.EWOULDBLOCK:
                print('[%s] Nonblocking read failed, will retry: %s' % (self, err))
                sys.stdout.flush()
            else:
                print('[%s] Nonblocking read failed hard, disconnect: %s' % (self, err))
                sys.stdout.flush()
                self.disconnect(err)

    def socket_writable_notification(self):
        try:
            sent = self.socket.send(self.__writebuffer)
            print("[%s] <- %r" % (self, self.__writebuffer[:sent]))
            sys.stdout.flush()
            self.__writebuffer = self.__writebuffer[sent:]
        except socket.error as err:
            if err.args[0] == errno.EAGAIN or err.args[0] == errno.EWOULDBLOCK:
                print('[%s] Nonblocking send failed, will retry: %s' % (self, err))
                sys.stdout.flush()
            else:
                print('[%s] Nonblocking send failed hard, disconnect: %s' % (self, err))
                sys.stdout.flush()
                self.disconnect(err)

    def disconnect(self, quitmsg):
        self.message("ERROR :%s" % quitmsg)
        print("[%s] Disconnected (%s)." % (self, quitmsg))
        sys.stdout.flush()
        self.socket.close()
        self.server.remove_client(self, quitmsg)

    def message(self, msg):
        print('[%s] -> %r' % (self, msg))
        sys.stdout.flush()
        msg += "\r\n"
        if self.gamename is not None and self.out_crypt is not None:
            msg = self.out_crypt(msg)
        self.__writebuffer += msg

    def reply(self, msg):
        self.message(":%s %s" % (self.server.name, msg))

    def reply_403(self, channel):
        self.reply("403 %s %s :No such channel" % (self.nickname, channel))

    def reply_461(self, command):
        nickname = self.nickname or "*"
        self.reply("461 %s %s :Not enough parameters" % (nickname, command))

    def message_channel(self, channel, command, message, include_self=False):
        line = ":%s %s %s" % (self.prefix, command, message)
        for client in channel.members:
            if client != self or include_self:
                client.message(line)

    def channel_log(self, channel, message, meta=False):
        if not self.server.logdir:
            return
        if meta:
            format = "[%s] * %s %s\n"
        else:
            format = "[%s] <%s> %s\n"
        timestamp = datetime.utcnow().strftime("%Y-%m-%d %H:%M:%S UTC")
        logname = channel.name.replace("_", "__").replace("/", "_")
        fp = open("%s/%s.log" % (self.server.logdir, logname), "a")
        fp.write(format % (timestamp, self.nickname, message))
        fp.close()

    def message_related(self, msg, include_self=False):
        clients = set()
        if include_self:
            clients.add(self)
        for channel in self.channels.values():
            clients |= channel.members
        if not include_self:
            clients.discard(self)
        for client in clients:
            client.message(msg)

    def send_lusers(self):
        self.reply("251 %s :There are %d users and 0 services on 1 server"
                   % (self.nickname, len(self.server.clients)))

    def send_motd(self):
        server = self.server
        motdlines = server.get_motd_lines()
        if motdlines:
            self.reply("375 %s :- %s Message of the day -"
                       % (self.nickname, server.name))
            for line in motdlines:
                self.reply("372 %s :- %s" % (self.nickname, line.rstrip()))
            self.reply("376 %s :End of /MOTD command" % self.nickname)
        else:
            self.reply("422 %s :MOTD File is missing" % self.nickname)


class Server(object):
    ping_timeout = 180
    ping_interval = 90

    def __init__(self, options):
        self.ports = options.ports
        self.password = options.password
        self.ssl_pem_file = options.ssl_pem_file
        self.motdfile = options.motd
        self.verbose = options.verbose
        self.debug = options.debug
        self.logdir = options.logdir
        self.statedir = options.statedir
        self.channel_motd_path = options.channel_motd

        if options.listen:
            self.address = socket.gethostbyname(options.listen)
        else:
            self.address = ""
        self.name = socket.getfqdn(self.address)[:63]  # Server name limit from
                                                       # the RFC.

        self.channels = {}  # irc_lower(Channel name) --> Channel instance.
        self.clients = {}  # Socket --> Client instance.
        self.nicknames = {}  # irc_lower(Nickname) --> Client instance.
        if self.logdir:
            create_directory(self.logdir)
        if self.statedir:
            create_directory(self.statedir)

    def daemonize(self):
        try:
            pid = os.fork()
            if pid > 0:
                sys.exit(0)
        except OSError:
            sys.exit(1)
        os.setsid()
        try:
            pid = os.fork()
            if pid > 0:
                print("PID: %d" % pid)
                sys.stdout.flush()
                sys.exit(0)
        except OSError:
            sys.exit(1)
        os.chdir("/")
        os.umask(0)
        dev_null = open("/dev/null", "r+")
        os.dup2(dev_null.fileno(), sys.stdout.fileno())
        os.dup2(dev_null.fileno(), sys.stderr.fileno())
        os.dup2(dev_null.fileno(), sys.stdin.fileno())

    def get_client(self, nickname):
        return self.nicknames.get(irc_lower(nickname))

    def has_channel(self, name):
        return irc_lower(name) in self.channels

    def get_channel(self, channelname):
        if irc_lower(channelname) in self.channels:
            channel = self.channels[irc_lower(channelname)]
        else:
            channel = Channel(self, channelname)
            self.channels[irc_lower(channelname)] = channel
        return channel

    def get_motd_lines(self):
        if self.motdfile:
            try:
                return open(self.motdfile).readlines()
            except IOError:
                return ["Could not read MOTD file %r." % self.motdfile]
        else:
            return []

    def client_changed_nickname(self, client, oldnickname):
        if oldnickname:
            del self.nicknames[irc_lower(oldnickname)]
        self.nicknames[irc_lower(client.nickname)] = client

    def remove_member_from_channel(self, client, channelname):
        if irc_lower(channelname) in self.channels:
            channel = self.channels[irc_lower(channelname)]
            channel.remove_client(client)

    def remove_client(self, client, quitmsg):
        client.message_related(":%s QUIT :%s" % (client.prefix, quitmsg))
        for x in client.channels.values():
            client.channel_log(x, "quit (%s)" % quitmsg, meta=True)
            x.remove_client(client)
        if client.nickname \
                and irc_lower(client.nickname) in self.nicknames:
            del self.nicknames[irc_lower(client.nickname)]
        del self.clients[client.socket]

    def remove_channel(self, channel):
        del self.channels[irc_lower(channel.name)]

    def start(self):
        serversockets = []
        for port in self.ports:
            s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
            s.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)
            try:
                s.bind((self.address, port))
            except socket.error as e:
                print("Could not bind port %s: %s." % (port, e))
                sys.stdout.flush()
                sys.exit(1)
            s.listen(5)
            serversockets.append(s)
            del s
            print("Listening on port %d." % port)
            sys.stdout.flush()
        last_aliveness_check = time.time()
        while True:
            (iwtd, owtd, ewtd) = select.select(
                serversockets + [x.socket for x in self.clients.values()],
                [x.socket for x in self.clients.values()
                 if x.write_queue_size() > 0],
                [],
                10)
            for x in iwtd:
                if x in self.clients:
                    self.clients[x].socket_readable_notification()
                else:
                    (conn, addr) = x.accept()
                    conn.setblocking(0)
                    if self.ssl_pem_file:
                        import ssl
                        try:
                            conn = ssl.wrap_socket(
                                conn,
                                server_side=True,
                                certfile=self.ssl_pem_file,
                                keyfile=self.ssl_pem_file)
                        except ssl.SSLError as e:
                            print("SSL error for connection from %s:%s: %s" % (addr[0], addr[1], e))
                            sys.stdout.flush()
                            continue
                    try:
                        self.clients[conn] = Client(self, conn)
                        print("Accepted connection from %s:%s." % (addr[0], addr[1]))
                        sys.stdout.flush()
                    except socket.error as err:
                        # DO NOT del self.clients[conn], if Client() raises, it wont be assigned!
                        print("socket error during connection setup from %s:%s: %s" % (addr[0], addr[1], err))
                        sys.stdout.flush()
                        try:
                            conn.close()
                        except socket.error as err:
                            print("socket error when trying to close socket due to socket error for %s:%s: %s" % (addr[0], addr[1], err))
                            sys.stdout.flush()
            for x in owtd:
                if x in self.clients:  # client may have been disconnected
                    self.clients[x].socket_writable_notification()
            now = time.time()
            if last_aliveness_check + 10 < now:
                for client in self.clients.values():
                    client.check_aliveness()
                last_aliveness_check = now


_alpha = "abcdefghijklmnopqrstuvwxyz"
_ircstring_translation = string.maketrans(
    string.upper(_alpha) + "[]\\^",
    _alpha + "{}|~")


def irc_lower(s):
    return string.translate(s, _ircstring_translation)


def main(argv):
    op = OptionParser(
        version=VERSION,
        description="miniircd is a small and limited IRC server.")
    op.add_option(
        "-d", "--daemon",
        action="store_true",
        help="fork and become a daemon")
    op.add_option(
        "--debug",
        action="store_true",
        help="print debug messages to stdout")
    op.add_option(
        "--listen",
        metavar="X",
        help="listen on specific IP address X")
    op.add_option(
        "--logdir",
        metavar="X",
        help="store channel log in directory X")
    op.add_option(
        "--motd",
        metavar="X",
        help="display file X as message of the day")
    op.add_option(
        "--channel-motd",
        metavar="X",
        help="display file X as message of the day when a channel is joined"
    )
    op.add_option(
        "-s", "--ssl-pem-file",
        metavar="FILE",
        help="enable SSL and use FILE as the .pem certificate+key")
    op.add_option(
        "-p", "--password",
        metavar="X",
        help="require connection password X; default: no password")
    op.add_option(
        "--ports",
        metavar="X",
        help="listen to ports X (a list separated by comma or whitespace);"
             " default: 6667 or 6697 if SSL is enabled")
    op.add_option(
        "--statedir",
        metavar="X",
        help="save persistent channel state (topic, key) in directory X")
    op.add_option(
        "--verbose",
        action="store_true",
        help="be verbose (print some progress messages to stdout)")

    (options, args) = op.parse_args(argv[1:])
    if options.debug:
        options.verbose = True

    if options.ports is None:
        if options.ssl_pem_file is None:
            options.ports = "6667"
        else:
            options.ports = "6697"

    ports = []
    for port in re.split(r"[,\s]+", options.ports):
        try:
            ports.append(int(port))
        except ValueError:
            op.error("bad port: %r" % port)
    options.ports = ports
    server = Server(options)
    if options.daemon:
        server.daemonize()
    try:
        server.start()
    except KeyboardInterrupt:
        print("Interrupted.")
        sys.stdout.flush()

main(sys.argv)
